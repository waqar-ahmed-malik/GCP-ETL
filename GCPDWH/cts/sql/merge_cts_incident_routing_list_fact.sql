MERGE CUSTOMER_PRODUCT.CTS_INCIDENT_ROUTING_LIST_FACT A
USING (SELECT B.BRANCH_CD AS BRANCH_CD,
    PARSE_DATETIME('%Y-%m-%d %H:%M:%S',
      B.RECEIVED_DT) AS RECEIVED_DTTIME,
SAFE_CAST(B.CMPLNT_ID AS INT64) AS COMPLAINT_ID,
SAFE_CAST(B.INCD_ID AS INT64) AS INCIDENT_ID,
SAFE_CAST(B.RTE_SEQ_NBR AS INT64) AS ROUTING_SEQUENCE_NUM,
B.RTE_EMPLE_ID AS ROUTING_EMPLOYEE_ID,
B.IS_GROUP AS ASSIGNED_GROUP_IND,
"v_job_run_id" AS ETL_JOB_RUN_ID, 
'CTS' AS SOURCE_SYSTEM_CD,
CURRENT_DATETIME() AS CREATE_DTTIME,
"v_job_name" AS CREATED_BY 
FROM
 `LANDING.WORK_CTS_INCIDENT_ROUTING_LIST_FACT` B
 ) B
ON A.COMPLAINT_ID = B.COMPLAINT_ID
AND A.RECEIVED_DTTIME = B.RECEIVED_DTTIME
AND A.BRANCH_CD = B.BRANCH_CD
AND A.INCIDENT_ID = B.INCIDENT_ID
AND A.ROUTING_SEQUENCE_NUM = B.ROUTING_SEQUENCE_NUM
WHEN MATCHED THEN
UPDATE SET
A.ROUTING_EMPLOYEE_ID=B.ROUTING_EMPLOYEE_ID,
A.ASSIGNED_GROUP_IND=B.ASSIGNED_GROUP_IND,
A.ETL_JOB_RUN_ID=B.ETL_JOB_RUN_ID, 
A.SOURCE_SYSTEM_CD=B.SOURCE_SYSTEM_CD,
A.CREATE_DTTIME=B.CREATE_DTTIME,
A.CREATED_BY=B.CREATED_BY
WHEN NOT MATCHED THEN
  INSERT (COMPLAINT_ID,
INCIDENT_ID,
RECEIVED_DTTIME,
BRANCH_CD,
ROUTING_SEQUENCE_NUM,
ROUTING_EMPLOYEE_ID,
ASSIGNED_GROUP_IND,
ETL_JOB_RUN_ID,
SOURCE_SYSTEM_CD,
CREATE_DTTIME,
CREATED_BY)
VALUES
(
COMPLAINT_ID,
INCIDENT_ID,
RECEIVED_DTTIME,
BRANCH_CD,
ROUTING_SEQUENCE_NUM,
ROUTING_EMPLOYEE_ID,
ASSIGNED_GROUP_IND,
ETL_JOB_RUN_ID,
SOURCE_SYSTEM_CD,
CREATE_DTTIME,
CREATED_BY
);