
MERGE
  CUSTOMER_PRODUCT.CTS_COMPLAINT_DIM A
USING
 (
  SELECT
    COMPLAINT_ID,   
    MEMBER_ID,
    RECEIVED_DTTIME,
    BRANCH_CD,
    CATEGORY_CD,
    STATUS_CD,
    ORIGIN_CD,
    CLUB_CD,
    RECEIVED_EMPLOYEE_ID,
    CATEGORY_DESC,
    BRANCH_NM,
    ASSOCIATE_ID,
    VICTIM_CLUB_CD,
    NARRATIVE,
    MDM_CUSTOMER_KEY,
    ETL_JOB_RUN_ID,
    SOURCE_SYSTEM_CD,
    CREATE_DTTIME,
    CREATED_BY
  FROM (
    SELECT
      SAFE_CAST(CCDS.CMPLNT_ID AS INT64) AS COMPLAINT_ID,
      SAFE_CAST(CCDS.MBR_ID AS INT64) AS MEMBER_ID,
      PARSE_DATETIME('%Y-%m-%d %H:%M:%S',
        CCDS.RECEIVED_DT) AS RECEIVED_DTTIME,
      CCDS.BRANCH_CD AS BRANCH_CD,
      CCDS.CATEGORY_CD AS CATEGORY_CD,
      CCDS.CURR_STATUS_CD AS STATUS_CD,
      CCDS.ORIGIN_CD AS ORIGIN_CD,
      CCDS.ORIG_CLB_CD AS CLUB_CD,
      CCDS.RECV_EMPLE_ID AS RECEIVED_EMPLOYEE_ID,
      CCDS.DESCRIPTION_TX AS CATEGORY_DESC,
      LD.LOCATION_NM AS BRANCH_NM,
      CCDS.ASC_ID AS ASSOCIATE_ID,
      CCDS.CLUB_CD AS VICTIM_CLUB_CD,
      CCDS.NARRATIVE AS NARRATIVE,
      SAFE_CAST(MCB.CUSTOMER_MDM_KEY AS INT64) AS MDM_CUSTOMER_KEY,
      "96012" AS ETL_JOB_RUN_ID,
      'CTS' AS SOURCE_SYSTEM_CD,
      CURRENT_DATETIME() AS CREATE_DTTIME,
      "load-cts" AS CREATED_BY
    FROM
      `LANDING.WORK_CTS_COMPLAINT_DIM` CCDS
	  
	   LEFT OUTER JOIN
    `CUSTOMER_PRODUCT.LOCATION_DIM` LD
    ON
      CCDS.BRANCH_CD = LD.LOCATION_ID AND ACTIVE_FLG = 'Y'
    LEFT OUTER JOIN (
      SELECT
        *
      FROM (
        SELECT
          CUSTOMER_MDM_KEY,
          SOURCE_KEY2,
          ROW_NUMBER() OVER(PARTITION BY SOURCE_KEY2) AS RNK
        FROM
          `CUSTOMER_PRODUCT.MDM_CUSTOMER_BRIDGE`
        WHERE
          SOURCE_SYSTEM_CD IN ('SAM') )
      WHERE
        RNK=1) MCB
    ON
      MCB.SOURCE_KEY2 = CCDS.MBR_ID ) ) B
ON
  A.COMPLAINT_ID = B.COMPLAINT_ID
  AND A.RECEIVED_DTTIME = B.RECEIVED_DTTIME
  AND A.BRANCH_CD = B.BRANCH_CD
  WHEN MATCHED  THEN  UPDATE   SET  A.COMPLAINT_ID=B.COMPLAINT_ID,  A.MEMBER_ID=B.MEMBER_ID,  A.RECEIVED_DTTIME=B.RECEIVED_DTTIME,  A.BRANCH_CD=B.BRANCH_CD,  A.CATEGORY_CD=B.CATEGORY_CD,  A.STATUS_CD=B.STATUS_CD,  A.ORIGIN_CD=B.ORIGIN_CD,  A.CLUB_CD=B.CLUB_CD,  A.RECEIVED_EMPLOYEE_ID=B.RECEIVED_EMPLOYEE_ID,  A.CATEGORY_DESC=B.CATEGORY_DESC,  A.BRANCH_NM=B.BRANCH_NM,  A.ASSOCIATE_ID=B.ASSOCIATE_ID,  A.VICTIM_CLUB_CD=B.VICTIM_CLUB_CD,  A.NARRATIVE=B.NARRATIVE,  A.MDM_CUSTOMER_KEY=B.MDM_CUSTOMER_KEY,  A.ETL_JOB_RUN_ID=B.ETL_JOB_RUN_ID,  A.SOURCE_SYSTEM_CD=B.SOURCE_SYSTEM_CD,  A.CREATE_DTTIME=B.CREATE_DTTIME,  A.CREATED_BY=B.CREATED_BY
  WHEN NOT MATCHED
  THEN
INSERT
  (COMPLAINT_ID,
    MEMBER_ID,
    RECEIVED_DTTIME,
    BRANCH_CD,
    CATEGORY_CD,
    STATUS_CD,
    ORIGIN_CD,
    CLUB_CD,
    RECEIVED_EMPLOYEE_ID,
    CATEGORY_DESC,
    BRANCH_NM,
    ASSOCIATE_ID,
    VICTIM_CLUB_CD,
    NARRATIVE,
    MDM_CUSTOMER_KEY,
    ETL_JOB_RUN_ID,
    SOURCE_SYSTEM_CD,
    CREATE_DTTIME,
    CREATED_BY)
VALUES
  (COMPLAINT_ID, MEMBER_ID, RECEIVED_DTTIME, BRANCH_CD, CATEGORY_CD, STATUS_CD, ORIGIN_CD, CLUB_CD, RECEIVED_EMPLOYEE_ID, CATEGORY_DESC, BRANCH_NM, ASSOCIATE_ID, VICTIM_CLUB_CD, NARRATIVE, MDM_CUSTOMER_KEY, ETL_JOB_RUN_ID, SOURCE_SYSTEM_CD, CREATE_DTTIME, CREATED_BY);
