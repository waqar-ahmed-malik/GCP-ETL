MERGE CUSTOMER_PRODUCT.CTS_INCIDENT_FACT A
USING (SELECT B.BRANCH_CD AS BRANCH_CD,
    PARSE_DATETIME('%Y-%m-%d %H:%M:%S',
      B.RECEIVED_DT) AS RECEIVED_DTTIME,
SAFE_CAST(B.CMPLNT_ID AS INT64) AS COMPLAINT_ID,
SAFE_CAST(B.INCD_ID AS INT64) AS INCIDENT_ID,
B.KEY_TYPE_CD AS KEY_TYPE_CD,
    PARSE_DATETIME('%Y-%m-%d %H:%M:%S',
      B.SC_DT) AS SC_DTTIME,
B.SC_ID AS SC_ID,
    PARSE_DATETIME('%Y-%m-%d %H:%M:%S',
      B.INCD_DATE_DT) AS INCIDENT_DTTIME,
B.CURR_RTE_EMPLE_ID AS CURR_RTE_EMPLOYEE_ID,
B.CURR_STATUS_CD AS CURR_STATUS_CD,
B.DESCRIPTION_TX AS INCIDENT_DETAILS,
B.PRIORITY_CD AS PRIORITY_CD,
B.PRIORITY_DESCRIPTION AS PRIORITY_DESC,
B.COMPLAINT_FLG AS COMPLAINT_IND,
B.INCD_CLUB_CD AS INCIDENT_CLUB_CD,
B.CATEGORY_CD AS CATEGORY_CD,
B.CATEGORY_DESCRIPTION AS CATEGORY_DESC,
B.CLOSE_EMPLE_ID AS CLOSED_EMPLOYEE_ID,
B.DEPT_CD AS DEPT_CD,
SAFE_CAST(B.CHARGEBACK_AMT AS FLOAT64) AS CHARGEBACK_AMT,
B.TRUCK_ID AS TRUCK_ID,
B.DRIVER_ID AS DRIVER_ID,
B.RSLUTN_CD AS RESOLUTION_CD,
B.RSLUTN_DESCRIPTION AS RESOLUTION_DESC,
SAFE_CAST(B.RSLUTN_AMT AS FLOAT64) AS RESOLUTION_AMT,
SAFE_CAST(B.AMT_REQUESTED AS FLOAT64) AS REQUESTED_AMT,
B.KEY_TYPE_DESC AS KEY_TYPE_DESC,
CASE WHEN CURR_STATUS_CD='RE'
THEN'Received'
WHEN CURR_STATUS_CD='RS'
THEN 'Resolved'
WHEN CURR_STATUS_CD='CL'
THEN 'Closed'
WHEN CURR_STATUS_CD='IP'
THEN 'In-Progress'
ELSE 'SU' END AS STATUS_DESC,
"v_job_run_id" AS ETL_JOB_RUN_ID, 
'CTS' AS SOURCE_SYSTEM_CD,
CURRENT_DATETIME() AS CREATE_DTTIME,
"v_job_name" AS CREATED_BY 
FROM
 `LANDING.WORK_CTS_INCIDENT_FACT` B
 ) B
ON A.COMPLAINT_ID = B.COMPLAINT_ID
AND A.RECEIVED_DTTIME = B.RECEIVED_DTTIME
AND A.BRANCH_CD = B.BRANCH_CD
AND A.INCIDENT_ID = B.INCIDENT_ID
WHEN MATCHED THEN
UPDATE SET
A.KEY_TYPE_CD=B.KEY_TYPE_CD,
A.SC_DTTIME=B.SC_DTTIME,
A.SC_ID=CAST(B.SC_ID AS INT64),
A.INCIDENT_DTTIME=B.INCIDENT_DTTIME,
A.CURR_RTE_EMPLOYEE_ID=B.CURR_RTE_EMPLOYEE_ID,
A.CURR_STATUS_CD=B.CURR_STATUS_CD,
A.INCIDENT_DETAILS=B.INCIDENT_DETAILS,
A.PRIORITY_CD=B.PRIORITY_CD,
A.PRIORITY_DESC=B.PRIORITY_DESC,
A.COMPLAINT_IND=B.COMPLAINT_IND,
A.INCIDENT_CLUB_CD=B.INCIDENT_CLUB_CD,
A.CATEGORY_CD=B.CATEGORY_CD,
A.CATEGORY_DESC=B.CATEGORY_DESC,
A.CLOSED_EMPLOYEE_ID=B.CLOSED_EMPLOYEE_ID,
A.DEPT_CD=B.DEPT_CD,
A.CHARGEBACK_AMT=B.CHARGEBACK_AMT,
A.TRUCK_ID=B.TRUCK_ID,
A.DRIVER_ID=B.DRIVER_ID,
A.RESOLUTION_CD=B.RESOLUTION_CD,
A.RESOLUTION_DESC=B.RESOLUTION_DESC,
A.RESOLUTION_AMT=B.RESOLUTION_AMT,
A.REQUESTED_AMT=B.REQUESTED_AMT,
A.KEY_TYPE_DESC=B.KEY_TYPE_DESC,
A.ETL_JOB_RUN_ID=B.ETL_JOB_RUN_ID, 
A.SOURCE_SYSTEM_CD=B.SOURCE_SYSTEM_CD,
A.CREATE_DTTIME=B.CREATE_DTTIME,
A.CREATED_BY=B.CREATED_BY,
A.STATUS_DESC=B.STATUS_DESC
WHEN NOT MATCHED THEN
  INSERT (COMPLAINT_ID,
INCIDENT_ID,
RECEIVED_DTTIME,
BRANCH_CD,
INCIDENT_DTTIME,
CURR_STATUS_CD,
PRIORITY_CD,
PRIORITY_DESC,
INCIDENT_CLUB_CD,
CATEGORY_CD,
CATEGORY_DESC,
DEPT_CD,
CHARGEBACK_AMT,
TRUCK_ID,
DRIVER_ID,
RESOLUTION_CD,
RESOLUTION_DESC,
RESOLUTION_AMT,
REQUESTED_AMT,
CURR_RTE_EMPLOYEE_ID,
CLOSED_EMPLOYEE_ID,
COMPLAINT_IND,	
KEY_TYPE_CD,
KEY_TYPE_DESC,
INCIDENT_DETAILS,
ETL_JOB_RUN_ID,
SOURCE_SYSTEM_CD,
CREATE_DTTIME,
CREATED_BY,
STATUS_DESC,
SC_DTTIME,
SC_ID)
VALUES
(
COMPLAINT_ID,
INCIDENT_ID,
RECEIVED_DTTIME,
BRANCH_CD,
INCIDENT_DTTIME,
CURR_STATUS_CD,
PRIORITY_CD,
PRIORITY_DESC,
INCIDENT_CLUB_CD,
CATEGORY_CD,
CATEGORY_DESC,
DEPT_CD,
CHARGEBACK_AMT,
TRUCK_ID,
DRIVER_ID,
RESOLUTION_CD,
RESOLUTION_DESC,
RESOLUTION_AMT,
REQUESTED_AMT,
CURR_RTE_EMPLOYEE_ID,
CLOSED_EMPLOYEE_ID,
COMPLAINT_IND,
KEY_TYPE_CD,
KEY_TYPE_DESC,
INCIDENT_DETAILS,
ETL_JOB_RUN_ID,
SOURCE_SYSTEM_CD,
CREATE_DTTIME,
CREATED_BY,
STATUS_DESC,
SC_DTTIME,
CAST(SC_ID AS INT64)
);