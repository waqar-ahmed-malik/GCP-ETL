SELECT  
DISTINCT
E_PAYMENT_HISTORY_KEY AS SOURCE_SYSTEM_KEY,
CM.MEMBER_NUM AS MEMBER_NUM,
TERM_EXPIRATION_DT,
BR.REQUEST_DTTIME AS PAYMENT_DT, 
BR.AMOUNT AS AMT_CHARGED, 
BR.CC_TYPE_CD AS PAYMENT_METHOD,
NULL AS DECLINE_REASON_CD,
BR.TRANS_RETURN_TEXT AS DECLINE_REASON_DESC,
SUBSTR(TRIM(CREDIT_CARD_LAST_4_DIGITS), LENGTH(TRIM(CREDIT_CARD_LAST_4_DIGITS))-3,4) AS CREDIT_CARD_NUM_LAST_4,
CASE WHEN HAS_INSURANCE_PRODUCT>0 THEN 'Y' ELSE 'N' END AS INSURANCE_PRODUCTS_OWNED, -- Need to Look and Verify
CASE WHEN CURRENT_MEMBERSHIP_TENURE>=2 THEN 'T2' ELSE 'T1' END AS TENURE, 
case WHEN MEMBERSHIP_LEVEL='BS' THEN	'Cl'
WHEN MEMBERSHIP_LEVEL='EP'	THEN	'PR'
WHEN MEMBERSHIP_LEVEL='EV'	THEN	'PR'
WHEN MEMBERSHIP_LEVEL='MO'	THEN	'MO'
WHEN MEMBERSHIP_LEVEL='PL'	THEN	'Pl'
WHEN MEMBERSHIP_LEVEL='RP'	THEN	'PlRV'
ELSE MEMBERSHIP_LEVEL END AS MEMBERSHIP_LEVEL,
(NO_OF_ASSOCIATES_CNT+ CASE WHEN SECONDARY_MEMBER_IND='Y' THEN 1 ELSE 0 END) AS NUM_OF_ASSOCIATES,
AUTO_RENEWAL_ENROLLED_DT as AUTO_RENEWAL_ENROLLED_DT, -- Need to Look and Verify
NUM_OF_ERS_EVENTS AS NUM_OF_ERS_EVENTS,
'SOFT_DECLINE' AS EVENT_TYPE_CD,
FORMAT_DATE("%Y%m%d",current_date()) as JOB_RUN_ID,
'CONNECT SUITE' AS SOURCE_SYSTEM_CD,
CURRENT_DATETIME() as CREATE_DTTIME,
'stage_aro_soft_decline_payment.sql' as CREATED_BY
from
(select * FROM OPERATIONAL.CONNECTSUITE_E_PAYMENT_HISTORY PH
WHERE PH.SOFT_DECLINE       ='Y'
    AND PH.SUCCESS_FLG        = 'N') BR
LEFT OUTER JOIN
(SELECT MEMBERSHIP_KEY,MEMBERSHIP_NUM,MEMBER_NUM,TERM_EXPIRATION_DT,CREDIT_CARD_LAST_4_DIGITS,NO_OF_ASSOCIATES_CNT,SECONDARY_MEMBER_IND,CASE   WHEN MEMBERSHIP_STATUS_CD <> 'C' 
THEN TRUNC(DATE_DIFF(CURRENT_DATE(),IFNULL(REINSTATE_DT,INCEPTION_DT),MONTH)/ 12.01+1)
ELSE TRUNC(DATE_DIFF(MEMBERSHIP_CANCEL_DT,IFNULL(REINSTATE_DT,INCEPTION_DT),MONTH)/ 12.01+1)
END AS CURRENT_MEMBERSHIP_TENURE,upper(MEMBERSHIP_LEVEL) as MEMBERSHIP_LEVEL,MEMBERSHIP_STATUS_CD FROM CUSTOMERS.CONNECTSUITE_MEMBER WHERE ASSOCIATE_ID=1) CM
ON BR.MBRS_KEY=CM.MEMBERSHIP_KEY
LEFT OUTER JOIN
(select 
case 
  when length(sc_call_mbr_id) = 8 then sc_call_mbr_id
  when length(sc_call_mbr_id) = 16 and substr(sc_call_mbr_id,1,6) = '429005' then substr(sc_call_mbr_id,7,8)
  end as sc_call_mbr_id, count(*) as NUM_OF_ERS_EVENTS from OPERATIONAL.ERS_STAGE_ARCH_CALL
WHERE
--COMM_CTR_ID = '90' AND -- If we add this condition then count is coming and it same as in IDS, Need to Confirm
SC_CALL_CLB_CD = '005'
AND CAST(SC_DT AS DATE) >= DATE_SUB(CURRENT_DATE(), INTERVAL 5 MONTH)
AND STATUS_CD = 'CL'
AND CHG_ENTITLEMENT = 'Y'
AND CALL_COST >0 
GROUP BY SC_CALL_MBR_ID) ERS
ON ERS.SC_CALL_MBR_ID=CM.MEMBERSHIP_NUM
LEFT OUTER JOIN
(select 
max(AR_ENROLL_DT) as AUTO_RENEWAL_ENROLLED_DT,
 LPAD(MEMBERSHIP_NUM,8,'0') as MEMBERSHIP_NUM 
 FROM CUSTOMER_PRODUCT.CONNECTSUITE_MEMBERSHIP_AR_TRANSACTION_FACT
 GROUP BY MEMBERSHIP_NUM) AUTO_RENEW
 ON CM.MEMBERSHIP_NUM=AUTO_RENEW.MEMBERSHIP_NUM 
LEFT OUTER JOIN (SELECT SUBSTR(MEMBER_NUM,7,8) as MEMBERSHIP_NUM,
COUNT(*) AS HAS_INSURANCE_PRODUCT
FROM CUSTOMER_PRODUCT.INSURANCE_CUSTOMER_DIM WHERE MEMBER_NUM is not null AND STATUS_CD ='A' AND SUBSTR(MEMBER_NUM, 15,1) = '1'
GROUP BY SUBSTR(MEMBER_NUM,7,8)) INS 
ON INS.MEMBERSHIP_NUM = CM.MEMBERSHIP_NUM
WHERE  NOT (TERM_EXPIRATION_DT is NULL or BR.REQUEST_DTTIME is null)
AND BR.E_PAYMENT_HISTORY_KEY   NOT IN   (SELECT SOURCE_SYSTEM_KEY from OPERATIONAL.MEMBERSHIP_AR_DECLINED_PAYMENTS 
WHERE EVENT_TYPE_CD='SOFT_DECLINE')
AND MEMBERSHIP_STATUS_CD='P'
AND BR.REQUEST_DTTIME >'{{ prev_execution_date }}'
