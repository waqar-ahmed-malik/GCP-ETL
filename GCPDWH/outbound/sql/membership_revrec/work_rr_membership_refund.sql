select 
REF.MEMBERSHIP_PAYMENT_KEY,
CASE WHEN PAY.MEMBERSHIP_COST_KEY IS NULL THEN REF.MEMBERSHIP_COST_KEY ELSE PAY.MEMBERSHIP_COST_KEY END AS MEMBERSHIP_COST_KEY ,
CASE WHEN PAY.DAILY_EVENT_KEY IS NULL THEN CAST(REF.DAILY_EVENT_KEY AS INT64) ELSE PAY.DAILY_EVENT_KEY END AS DAILY_EVENT_KEY,
REF.RECORD_TYPE,
MEMBERSHIP_NUM,
PAYMENT_DT,
PAYMENT_CHANNEL,
VOID_DT,
CAST(ORIGINAL_PAYMENT_KEY AS STRING) AS ORIGINAL_PAYMENT_KEY,
TERM_EFFECTIVE_DT,
TERM_EXPIRATION_DT,
PAYMENT_AMOUNT,
CASE WHEN REC_COUNT=1 AND GLACT_TYPE='FEES' THEN 'DUES'
     WHEN GLACT_TYPE is NULL THEN 'DUES'
     ELSE GLACT_TYPE END AS FEE_TYPE,
CASE WHEN REC_COUNT=1 AND GLACT_TYPE='FEES' THEN DATE_SUB(TERM_EXPIRATION_DT, INTERVAL 1 DAY)
     WHEN  GLACT_TYPE='FEES' THEN  DATE_SUB(DATE_ADD(TERM_EXPIRATION_DT, INTERVAL 7 YEAR), INTERVAL 1 DAY)
     ELSE NULL END AS FEES_EXPIRATION_DT,
TRANSACTION_CATEGORY,
ACCOUNTING_ENTRY_TYPE,
CASE WHEN ORIGINAL_PAYMENT_KEY IS NOT NULL  THEN CAST(PAY.ACC_PERIOD_EFFECTIVE_DT AS DATE)
ELSE
CASE WHEN GLACT_KEY=11 then TERM_EFFECTIVE_DT
     WHEN PAYMENT_DT>TERM_EFFECTIVE_DT then PAYMENT_DT
     ELSE TERM_EFFECTIVE_DT END 
END  AS ACC_PERIOD_EFFECTIVE_DT,
CASE WHEN ORIGINAL_PAYMENT_KEY IS NOT NULL  THEN CAST(PAY.ACC_PERIOD_EXPIRATION_DT AS DATE)
ELSE
CASE WHEN REC_COUNT=1 AND GLACT_TYPE='FEES' THEN DATE_SUB(TERM_EXPIRATION_DT, INTERVAL 1 DAY)
     WHEN  GLACT_TYPE='FEES' THEN  DATE_SUB(DATE_ADD(TERM_EXPIRATION_DT, INTERVAL 7 YEAR), INTERVAL 1 DAY)
     ELSE DATE_SUB(TERM_EXPIRATION_DT, INTERVAL 1 DAY) END 
END AS ACC_PERIOD_EXPIRATION_DT,
TRANSACTION_EFFECTIVE_DT,
NULL SALES_CHANNEL,
NULL MEMBERSHIP_LEVEL,
NULL RESIDENTIAL_STATE,
BRANCH_LOCATION,
PAYMENT_METHOD,
EMPLOYEE_NUM,
MERCHANT_ORDER_NUM,
CAST(MERCHANT_ID AS STRING) MERCHANT_ID,
BANK_ACCOUNT,EXCEPTION_FLAG_IND
FROM
(select 
MEMBERSHIP_PAYMENT_KEY,
COST_KEY as MEMBERSHIP_COST_KEY,
DAILY_EVENT_KEY,
RECORD_TYPE,
MEMBERSHIP_NUM,
MEMBERSHIP_PAYMENT_DTTIME as PAYMENT_DT,
PAYMENT_CHANNEL,
NULL as VOID_DT,
MEMBERSHIP_PAYMENT_REV_KEY as ORIGINAL_PAYMENT_KEY,
TERM_EFFECTIVE_DT,
TERM_EXPIRATION_DT,
MEMBERSHIP_PAYMENT_AMT AS PAYMENT_AMOUNT,
NULL as FEE_TYPE,
NULL as FEES_EXPIRATION_DT,
TRANSACTION_TYPE_CD as TRANSACTION_CATEGORY,
RECORD_TYPE as ACCOUNTING_ENTRY_TYPE,
NULL as ACC_PERIOD_EFFECTIVE_DT,
NULL as ACC_PERIOD_EXPIRATION_DT,
TRANSACTION_EFFECTIVE_DT,
MEMBERSHIP_PAYMENT_TRAN_TYPE_CD,
MEMBERSHIP_KEY,
MEMBERSHIP_PAYMENT_REV_PMT_AMT,
GLACT_TYPE,
MEMBERSHIP_STATUS_CD,
OFFICE_CD as BRANCH_LOCATION,
PAYMENT_METHOD,
POSTED_BY_USERID as EMPLOYEE_NUM,
ORDER_NUM as MERCHANT_ORDER_NUM,
MERCHANT_ID,
BANK_ACCOUNT_NUM as BANK_ACCOUNT,GLACT_KEY,EXCEPTION_FLAG_IND,
count(1) over(partition by MEMBERSHIP_PAYMENT_KEY,MEMBERSHIP_PAYMENT_TRAN_TYPE_CD,CAST(MEMBERSHIP_PAYMENT_DTTIME AS DATE)) as REC_COUNT
from
(select distinct MSP.MEMBERSHIP_PAYMENT_KEY as MEMBERSHIP_PAYMENT_KEY,
MSP.MEMBERSHIP_PAYMENT_AMT as MEMBERSHIP_PAYMENT_AMT,
CAST(MSP.MEMBERSHIP_PAYMENT_DTTIME AS DATE) as MEMBERSHIP_PAYMENT_DTTIME,
'R' AS MEMBERSHIP_PAYMENT_TRAN_TYPE_CD,
MSP.MEMBERSHIP_KEY as MEMBERSHIP_KEY,
MEMBERSHIP_PAYMENT_REV_PMT_AMT,
MEMBERSHIP_PAYMENT_REV_KEY,
MSP.GLACT_TYPE as GLACT_TYPE,
CJE.GLACT_KEY,
RECORD_TYPE,
MSP_EXTRA.PAYMENT_METHOD,
MSP_EXTRA.PAYMENT_CHANNEL,
OFFICE_CD,
POSTED_BY_USERID,
MEMBERSHIP_NUM,
MEMBERSHIP_STATUS_CD,
TERM_EFFECTIVE_DT,
TERM_EXPIRATION_DT,
ORDER_NUM,MERCHANT_ID,BANK_ACCOUNT_NUM,
DAILY_EVENT_KEY,TRANSACTION_EFFECTIVE_DT,TRANSACTION_TYPE_CD,COST_KEY,EXCEPTION_FLAG_IND 
from
(select MP.MEMBERSHIP_PAYMENT_KEY as MEMBERSHIP_PAYMENT_KEY,
MEMBERSHIP_PAYMENT_AMT,
MEMBERSHIP_PAYMENT_DTTIME,
case when MEMBERSHIP_PAYMENT_TRAN_TYPE_CD='P' THEN 'PAYMENT' 
     when MEMBERSHIP_PAYMENT_REV_KEY is not null THEN 'VOID PAYMENT'
     when MEMBERSHIP_PAYMENT_TRAN_TYPE_CD='R' THEN 'REFUND' 
     when MEMBERSHIP_PAYMENT_TRAN_TYPE_CD='A' THEN 'REFUND' 
     else NULL end as RECORD_TYPE,
MEMBERSHIP_KEY,MEMBERSHIP_PAYMENT_REV_PMT_AMT,MEMBERSHIP_PAYMENT_REV_KEY,
CASE when JE.GLACT_KEY=4 then 'FEES'
     when JE.GLACT_KEY=7 then 'DUES'
     when JE.GLACT_KEY=11 then 'DUES'
     else NULL end as GLACT_TYPE,
'N' AS EXCEPTION_FLAG_IND     
from
(select MEMBERSHIP_PAYMENT_KEY,
case when MEMBERSHIP_PAYMENT_TRAN_TYPE_CD='R' then MEMBERSHIP_PAYMENT_AMT*-1 else MEMBERSHIP_PAYMENT_AMT end as MEMBERSHIP_PAYMENT_AMT,
MEMBERSHIP_PAYMENT_DTTIME,MEMBERSHIP_PAYMENT_TRAN_TYPE_CD,
MEMBERSHIP_KEY,MEMBERSHIP_PAYMENT_REV_PMT_AMT,MEMBERSHIP_PAYMENT_REV_KEY, MEMBERSHIP_PAYMENT_CREATE_DT, CREATE_DTTIME
  from OPERATIONAL.CONNECTSUITE_MEMBERSHIP_PAYMENT 
WHERE MEMBERSHIP_PAYMENT_TRAN_TYPE_CD  IN ('R') 
AND MEMBERSHIP_PAYMENT_METHOD_CD NOT IN ('8','9')
AND MEMBERSHIP_PAYMENT_CREATE_DT>='2019-09-23') MP
LEFT OUTER JOIN
(select MEMBERSHIP_PAYMENT_KEY, GLACT_KEY ,MEMBERSHIP_COST_KEY from OPERATIONAL.CONNECTSUITE_JOURNAL_ENTRY  
WHERE GLACT_KEY  IN (7,4,11)
       AND MEMBERSHIP_COST_KEY > 0) JE
on MP.MEMBERSHIP_PAYMENT_KEY=JE.MEMBERSHIP_PAYMENT_KEY 
WHERE NOT EXISTS (SELECT '1' FROM OPERATIONAL.REVREC_MEMBERSHIP_PAYMENTS TGT where MP.MEMBERSHIP_PAYMENT_KEY=TGT.MEMBERSHIP_PAYMENT_KEY)
union all
select MP.MEMBERSHIP_PAYMENT_KEY as MEMBERSHIP_PAYMENT_KEY,
MEMBERSHIP_PAYMENT_AMT,
MEMBERSHIP_PAYMENT_DTTIME,
case when MEMBERSHIP_PAYMENT_TRAN_TYPE_CD='P' THEN 'PAYMENT' 
     when MEMBERSHIP_PAYMENT_REV_KEY is not null THEN 'VOID PAYMENT'
     when MEMBERSHIP_PAYMENT_TRAN_TYPE_CD='R' THEN 'REFUND' 
     when MEMBERSHIP_PAYMENT_TRAN_TYPE_CD='A' THEN 'REFUND' 
     else NULL end as RECORD_TYPE,
MEMBERSHIP_KEY,MEMBERSHIP_PAYMENT_REV_PMT_AMT,MEMBERSHIP_PAYMENT_REV_KEY,
CASE when JE.GLACT_KEY=4 then 'FEES'
     when JE.GLACT_KEY=7 then 'DUES'
     when JE.GLACT_KEY=11 then 'DUES'
     else NULL end as GLACT_TYPE,
'E' AS EXCEPTION_FLAG_IND     
from
(select MEMBERSHIP_PAYMENT_KEY,
case when MEMBERSHIP_PAYMENT_TRAN_TYPE_CD='R' then MEMBERSHIP_PAYMENT_AMT*-1 else MEMBERSHIP_PAYMENT_AMT end as MEMBERSHIP_PAYMENT_AMT,
MEMBERSHIP_PAYMENT_DTTIME,MEMBERSHIP_PAYMENT_TRAN_TYPE_CD,
MEMBERSHIP_KEY,MEMBERSHIP_PAYMENT_REV_PMT_AMT,MEMBERSHIP_PAYMENT_REV_KEY, MEMBERSHIP_PAYMENT_CREATE_DT, CREATE_DTTIME
  from OPERATIONAL.CONNECTSUITE_MEMBERSHIP_PAYMENT 
WHERE MEMBERSHIP_PAYMENT_KEY in (SELECT MEMBERSHIP_PAYMENT_KEY FROM OPERATIONAL.REVREC_MEMBERSHIP_PAYMENTS TGT WHERE  EXCEPTION_FLAG_IND ='Y' and RECORD_TYPE<>'PAYMENT')) MP
LEFT OUTER JOIN
(select MEMBERSHIP_PAYMENT_KEY, GLACT_KEY ,MEMBERSHIP_COST_KEY from OPERATIONAL.CONNECTSUITE_JOURNAL_ENTRY  
WHERE GLACT_KEY  IN (7,4,11)
       AND MEMBERSHIP_COST_KEY > 0) JE
on MP.MEMBERSHIP_PAYMENT_KEY=JE.MEMBERSHIP_PAYMENT_KEY ) MSP
LEFT OUTER JOIN
(select MEMBERSHIP_PAYMENT_KEY,
CASE WHEN MEMBERSHIP_PAYMENT_METHOD_CD='1' then 'Cash'
     WHEN MEMBERSHIP_PAYMENT_METHOD_CD='2' then 'Check'
     WHEN MEMBERSHIP_PAYMENT_METHOD_CD='3' then 'Credit Card'
     WHEN MEMBERSHIP_PAYMENT_METHOD_CD='9' then 'SPRINT'
     WHEN MEMBERSHIP_PAYMENT_METHOD_CD='16' then 'ACH'
     ELSE NULL END as PAYMENT_METHOD,
     OFFICE_CD,POSTED_BY_USERID,
CASE WHEN (MEMBERSHIP_PAYMENT_TYPE_KEY = 12 AND MEMBERSHIP_PAYMENT_TRAN_TYPE_CD = 'A')
            THEN 'Sprint'
            WHEN UPPER(OFFICE_CD) = 'WEB'
            THEN 'Web'
            WHEN upper(MEMBERSHIP_PAYMENT_SRC_CD )='AR'
            THEN 'AR'
            WHEN upper(MEMBERSHIP_PAYMENT_SRC_CD) iN ('ME', 'PE', 'EX')
            THEN 'Branch'
      ELSE 
      CASE  WHEN upper(SUBSTR(MEMBERSHIP_PAYMENT_CHK_NUM ,1,3))='NAT'
            THEN 'NAT'
            WHEN upper(SUBSTR(MEMBERSHIP_PAYMENT_CHK_NUM,1,3))='OTC'
            THEN 'OTC'
            WHEN upper(SUBSTR(MEMBERSHIP_PAYMENT_CHK_NUM,1,2))='LB'
            THEN 'LB'
            WHEN upper(SUBSTR(MEMBERSHIP_PAYMENT_CHK_NUM,1,2))='IE'
            THEN 'IG'
            WHEN upper(SUBSTR(MEMBERSHIP_PAYMENT_CHK_NUM,1,2))='HB'
            THEN 'HB'
        ELSE 'NONE'
      END
  END        AS PAYMENT_CHANNEL     
from OPERATIONAL.CONNECTSUITE_MEMBERSHIP_PAYMENT 
WHERE MEMBERSHIP_PAYMENT_TRAN_TYPE_CD  IN ('R')) MSP_EXTRA
on MSP_EXTRA.MEMBERSHIP_PAYMENT_KEY=MSP.MEMBERSHIP_PAYMENT_KEY
LEFT OUTER JOIN
(select distinct MEMBERSHIP_KEY,MEMBERSHIP_NUM,MEMBERSHIP_STATUS_CD,TERM_EFFECTIVE_DT,TERM_EXPIRATION_DT from OPERATIONAL.CONNECTSUITE_MEMBERSHIP where SOURCE_SYSTEM_CD='CONNECT SUITE') MSHP
on MSP.MEMBERSHIP_KEY=MSHP.MEMBERSHIP_KEY
LEFT OUTER JOIN
(select DISTINCT MEMBERSHIP_PAYMENT_KEY,ORDER_NUM from OPERATIONAL.CONNECTSUITE_E_PAYMENT_HISTORY) EPH
ON MSP.MEMBERSHIP_PAYMENT_KEY=EPH.MEMBERSHIP_PAYMENT_KEY
LEFT OUTER JOIN
(SELECT distinct PAYMENT_METHOD,PAYMENT_CHANNEL,BRANCH_ID,MERCHANT_ID,BANK_ACCOUNT_NUM,EFFECTIVE_DATE,EXPIRATION_DATE FROM REFERENCE.MERCHANT_ORDER_BANK_ACCOUNT
) MBA
ON MSP_EXTRA.PAYMENT_METHOD=MBA.PAYMENT_METHOD and MSP_EXTRA.PAYMENT_CHANNEL=MBA.PAYMENT_CHANNEL and MSP_EXTRA.OFFICE_CD=MBA.BRANCH_ID
LEFT OUTER JOIN
(SELECT MEMBERSHIP_PAYMENT_KEY,MEMBERSHIP_COST_KEY AS COST_KEY,DAILY_EVENT_KEY,TRANSACTION_EFFECTIVE_DT,TRANSACTION_TYPE_CD FROM
(SELECT MEMBERSHIP_PAYMENT_KEY,MEMBERSHIP_COST_KEY,DAILY_EVENT_KEY,TRANSACTION_EFFECTIVE_DT,TRANSACTION_TYPE_CD,
ROW_NUMBER() OVER (PARTITION BY MEMBERSHIP_PAYMENT_KEY ORDER BY MEMBERSHIP_PAYMENT_KEY DESC,MEMBERSHIP_COST_KEY DESC,DAILY_EVENT_KEY DESC) as ROW_NUM FROM
(select MEMBERSHIP_PAYMENT_KEY, GLACT_KEY ,MEMBERSHIP_COST_KEY from OPERATIONAL.CONNECTSUITE_JOURNAL_ENTRY  
WHERE GLACT_KEY  IN (7,4,11,13)
       AND MEMBERSHIP_COST_KEY > 0) JE
LEFT OUTER JOIN
(SELECT 	SOURCE_TRANSACTION_ID AS DAILY_EVENT_KEY,TRANSACTION_EFFECTIVE_DT,TRANSACTION_TYPE_CD,COST_KEY
FROM CUSTOMER_PRODUCT.CONNECTSUITE_MEMBER_TRANSACTIONS_FACT  WHERE SOURCE_SYSTEM_CD='CONNECT SUITE') TRNS
on CAST(JE.MEMBERSHIP_COST_KEY AS STRING)=TRNS.COST_KEY)
WHERE ROW_NUM=1) TRN
on MSP.MEMBERSHIP_PAYMENT_KEY=TRN.MEMBERSHIP_PAYMENT_KEY
LEFT OUTER JOIN
(select distinct MEMBERSHIP_PAYMENT_KEY, GLACT_KEY  from OPERATIONAL.CONNECTSUITE_JOURNAL_ENTRY  
WHERE GLACT_KEY  IN (11)) CJE
ON MSP.MEMBERSHIP_PAYMENT_KEY=CJE.MEMBERSHIP_PAYMENT_KEY)) REF
LEFT OUTER JOIN
(select MEMBERSHIP_PAYMENT_KEY,MEMBERSHIP_COST_KEY,DAILY_EVENT_KEY,RECORD_TYPE,ACC_PERIOD_EFFECTIVE_DT,ACC_PERIOD_EXPIRATION_DT from OPERATIONAL.REVREC_MEMBERSHIP_PAYMENTS 
WHERE RECORD_TYPE='PAYMENT') PAY
on REF.ORIGINAL_PAYMENT_KEY=PAY.MEMBERSHIP_PAYMENT_KEY
