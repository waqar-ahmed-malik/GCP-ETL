INSERT INTO CUSTOMER_PRODUCT.CHASE_PAYMENT_FAILURES
(
RECORD_TYPE,
ENTITY_TYPE,
ENTITY_NUM,
CONSUMER_BANK_COUNTRY_CD,
MOP,
CURRENCY,
CATEGORY,
STATUS_FLAG,
SEQUENCE_NUM,
MERCHANT_ORDER_NUM,
ACCOUNT_NUM,
REASON_CD,
TRANSACTION_DT,
ECP_RETURN_DT,
ACTIVITY_DT,
ECP_RETURN_AMT,
USAGE_CD,
CONSUMER_NM,
IBAN,
MEMBER_NUM,
JOB_RUN_ID,
CREATE_DT,
CREATE_BY,
FILE_ID,
MERCHANT_ORDER_SOURCE,
PAYMENT_ID
)
SELECT
RECORD_TYPE AS RECORD_TYPE,
ENTITY_TYPE AS ENTITY_TYPE,
CAST(ENTITY_NUM AS INT64) AS ENTITY_NUM,
CONSUMER_BANK_COUNTRY_CD AS CONSUMER_BANK_COUNTRY_CD,
MOP AS MOP,
CURRENCY AS CURRENCY,
CATEGORY AS CATEGORY,
STATUS_FLAG AS STATUS_FLAG,
CAST(SEQUENCE_NUM AS INT64) AS SEQUENCE_NUM,
MERCHANT_ORDER_NUM AS MERCHANT_ORDER_NUM,
ACCOUNT_NUM AS ACCOUNT_NUM,
REASON_CD AS REASON_CD,
PARSE_DATE('%m/%d/%Y',TRANSACTION_DT) AS TRANSACTION_DT,
PARSE_DATE('%m/%d/%Y',ECP_RETURN_DT) AS ECP_RETURN_DT,
PARSE_DATE('%m/%d/%Y',ACTIVITY_DT) AS ACTIVITY_DT,
ECP_RETURN_AMT AS ECP_RETURN_AMT,
USAGE_CD AS USAGE_CD,
CONSUMER_NM AS CONSUMER_NM,
IBAN AS IBAN,
M.MEMBER_NUM AS MEMBER_NUM,
"v_job_run_id" AS JOB_RUN_ID,
CURRENT_DATE() AS CREATE_DT,
"v_job_name" AS CREATE_BY,
FILE_ID,
CASE WHEN MERCHANT_ORDER_NUM like 'M%'
THEN 'ConnectSuite'
ELSE 'Other'
END AS MERCHANT_ORDER_SOURCE,
 CASE
    WHEN PAYMENTS.MAX_ID IS NULL THEN 0+(ROW_NUMBER() OVER ())
    ELSE PAYMENTS.MAX_ID+(ROW_NUMBER() OVER ())
  END AS PAYMENT_ID
FROM LANDING.WORK_CHASE_PAYMENT_FAILURES
LEFT OUTER JOIN
(SELECT ORDER_NUM,
MEMBER_NUM
FROM OPERATIONAL.CONNECTSUITE_E_PAYMENT_HISTORY E,
CUSTOMER_PRODUCT.CONNECTSUITE_MEMBER_DIM M
WHERE E.MBRS_KEY = M.MEMBERSHIP_KEY AND M.ACTIVE_FLG = 'Y'
AND SUBSTR(CAST(M.ASSOCIATE_ID AS STRING),1,1)='1') M
ON MERCHANT_ORDER_NUM = M.ORDER_NUM,
(
  SELECT
    MAX(PAYMENT_ID) MAX_ID
  FROM
    CUSTOMER_PRODUCT.CHASE_PAYMENT_FAILURES ) PAYMENTS
