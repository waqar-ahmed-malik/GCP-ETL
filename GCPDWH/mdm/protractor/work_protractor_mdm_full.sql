CREATE OR REPLACE TABLE LANDING.WORK_MDM_COR_CUSTOMER AS 
SELECT
SOURCE_KEY1,
SOURCE_KEY2,
SOURCE_KEY3,
SOURCE_KEY1_COLUMN_NAME,
SOURCE_KEY2_COLUMN_NAME,	
SOURCE_KEY3_COLUMN_NAME,
SOURCE_SYSTEM,
FIRST_NM,
LAST_NM,
NAME_SUFFIX_CD,
SALUTATION_CD,
BIRTH_DATE,
GENDER_CD,
MARITAL_STATUS,
PRIMARY_ADDRESS_LINE1,
PRIMARY_ADDRESS_LINE2,
PRIMARY_CITY,
PRIMARY_STATE,
PRIMARY_ZIP,
PRIMARY_EMAIL_ADDRESS,
RESIDENTIAL_ADDRESS_LINE1,
RESIDENTIAL_ADDRESS_LINE2,
RESIDENTIAL_CITY,
RESIDENTIAL_STATE,
RESIDENTIAL_ZIP,
BILLING_ADDRESS_LINE1,
BILLING_ADDRESS_LINE2,
BILLING_CITY,
BILLING_STATE,
BILLING_ZIP,
OTHER_ADDRESS_LINE1,
OTHER_ADDRESS_LINE2,
OTHER_CITY,
OTHER_STATE,
OTHER_ZIP,
OTHER_EMAIL_ADDRESS,
HOME_TELEPHONE_NUM,
WORK_PHONE_NUM,
OTHER_PHONE_NUM,
COR_MASTER_PHONE_NUM,
SOURCE_CREATE_DATE from ( 
SELECT DISTINCT 
CAST(SOURCE_KEY1 AS STRING) as SOURCE_KEY1,
CAST(SOURCE_KEY2 AS STRING) as SOURCE_KEY2,
CAST(SOURCE_KEY3 AS STRING) as SOURCE_KEY3,
SOURCE_KEY1_COLUMN_NAME,
SOURCE_KEY2_COLUMN_NAME,	
SOURCE_KEY3_COLUMN_NAME,
SOURCE_SYSTEM,
UPPER(FIRST_NM) AS FIRST_NM,
UPPER(LAST_NM) AS LAST_NM,
NAME_SUFFIX_CD,
SALUTATION_CD,
BIRTH_DATE,
GENDER_CD,
MARITAL_STATUS,
PRIMARY_ADDRESS_LINE1,
PRIMARY_ADDRESS_LINE2,
PRIMARY_CITY,
PRIMARY_STATE,
PRIMARY_ZIP,
PRIMARY_EMAIL_ADDRESS,
RESIDENTIAL_ADDRESS_LINE1,
RESIDENTIAL_ADDRESS_LINE2,
RESIDENTIAL_CITY,
RESIDENTIAL_STATE,
RESIDENTIAL_ZIP,
BILLING_ADDRESS_LINE1,
BILLING_ADDRESS_LINE2,
BILLING_CITY,
BILLING_STATE,
BILLING_ZIP,
OTHER_ADDRESS_LINE1,
OTHER_ADDRESS_LINE2,
OTHER_CITY,
OTHER_STATE,
OTHER_ZIP,
OTHER_EMAIL_ADDRESS,
HOME_TELEPHONE_NUM,
WORK_PHONE_NUM,
OTHER_PHONE_NUM,
COR_MASTER_PHONE_NUM,
SOURCE_CREATE_DATE

FROM 
(SELECT 
SOURCE_KEY1,
SOURCE_KEY2,
SOURCE_KEY3,
SOURCE_KEY1_COLUMN_NAME,
SOURCE_KEY2_COLUMN_NAME,	
SOURCE_KEY3_COLUMN_NAME,
SOURCE_SYSTEM,
FIRST_NM,
LAST_NM,
NAME_SUFFIX_CD,
SALUTATION_CD,
BIRTH_DATE,
GENDER_CD,
MARITAL_STATUS,
PRIMARY_ADDRESS_LINE1,
PRIMARY_ADDRESS_LINE2,
PRIMARY_CITY,
PRIMARY_STATE,
PRIMARY_ZIP,
PRIMARY_EMAIL_ADDRESS,
RESIDENTIAL_ADDRESS_LINE1,
RESIDENTIAL_ADDRESS_LINE2,
RESIDENTIAL_CITY,
RESIDENTIAL_STATE,
RESIDENTIAL_ZIP,
BILLING_ADDRESS_LINE1,
BILLING_ADDRESS_LINE2,
BILLING_CITY,
BILLING_STATE,
BILLING_ZIP,
OTHER_ADDRESS_LINE1,
OTHER_ADDRESS_LINE2,
OTHER_CITY,
OTHER_STATE,
OTHER_ZIP,
OTHER_EMAIL_ADDRESS,
HOME_TELEPHONE_NUM,
WORK_PHONE_NUM,
OTHER_PHONE_NUM,
CASE WHEN COR_MASTER_PHONE_NUM LIKE '1%' THEN SUBSTR(COR_MASTER_PHONE_NUM,2,10)
WHEN LENGTH(COR_MASTER_PHONE_NUM) = 11  THEN SUBSTR(COR_MASTER_PHONE_NUM,1,10)
WHEN LENGTH(COR_MASTER_PHONE_NUM) = 14 THEN SUBSTR(COR_MASTER_PHONE_NUM,5,10)
WHEN LENGTH(COR_MASTER_PHONE_NUM) > 14 THEN NULL 
WHEN LENGTH(COR_MASTER_PHONE_NUM) < 10 THEN NULL
WHEN LENGTH(COR_MASTER_PHONE_NUM) = 10  and COR_MASTER_PHONE_NUM like '1%' THEN  NULL  WHEN LENGTH(COR_MASTER_PHONE_NUM) = 10 THEN COR_MASTER_PHONE_NUM ELSE NULL END AS COR_MASTER_PHONE_NUM,
SOURCE_CREATE_DATE
FROM (
SELECT DISTINCT 
TRIM(A.INVOICE_ID) AS SOURCE_KEY1,
CAST(NULL AS STRING) SOURCE_KEY2,
CAST(NULL AS STRING)  SOURCE_KEY3,
'INVOICE_ID' as SOURCE_KEY1_COLUMN_NAME,
CAST(NULL AS STRING) SOURCE_KEY2_COLUMN_NAME,	
CAST(NULL AS STRING)  SOURCE_KEY3_COLUMN_NAME,
'COR' as SOURCE_SYSTEM,
upper(TRIM(A.CONTACT_FIRST_NM)) AS FIRST_NM,
upper(TRIM(A.CONTACT_LAST_NM)) AS LAST_NM,
CAST(NULL AS STRING) AS NAME_SUFFIX_CD,  
CAST(NULL AS STRING) AS SALUTATION_CD,
CAST(NULL AS STRING)  AS BIRTH_DATE,
CAST(NULL AS STRING)  AS GENDER_CD,
CAST(NULL AS STRING)  AS MARITAL_STATUS,
CASE WHEN REGEXP_REPLACE(IFNULL(TRIM(ADDRESS_STREET),' '),r"\r\n",' ') ='' THEN NULL ELSE UPPER(REGEXP_REPLACE(IFNULL(TRIM(ADDRESS_STREET),' '),r"\r\n",' ')) END AS PRIMARY_ADDRESS_LINE1,
CAST(NULL AS STRING) AS PRIMARY_ADDRESS_LINE2,
CASE WHEN CITY='' THEN NULL ELSE UPPER(CITY) END AS PRIMARY_CITY,
CASE WHEN STATE_CD='' THEN NULL ELSE UPPER(STATE_CD) END AS PRIMARY_STATE,
CASE WHEN POSTAL_CD='' THEN NULL ELSE POSTAL_CD END AS PRIMARY_ZIP,
CASE WHEN CONTACT_EMAIL ='' THEN NULL ELSE UPPER(CONTACT_EMAIL) END AS PRIMARY_EMAIL_ADDRESS,
CASE WHEN ADDRESS_STREET='' THEN NULL ELSE UPPER(ADDRESS_STREET) END AS RESIDENTIAL_ADDRESS_LINE1,
CAST(NULL AS STRING) AS RESIDENTIAL_ADDRESS_LINE2,
UPPER(CITY) AS RESIDENTIAL_CITY,
UPPER(STATE_CD) AS RESIDENTIAL_STATE,
POSTAL_CD AS RESIDENTIAL_ZIP,
CASE WHEN REGEXP_REPLACE(IFNULL(TRIM(ADDRESS_STREET),' '),r"\r\n",' ') ='' THEN NULL ELSE UPPER(REGEXP_REPLACE(IFNULL(TRIM(ADDRESS_STREET),' '),r"\r\n",' ')) END  AS BILLING_ADDRESS_LINE1,
CAST(NULL AS STRING) AS BILLING_ADDRESS_LINE2,
UPPER(CITY) AS BILLING_CITY,
UPPER(STATE_CD) AS BILLING_STATE,
POSTAL_CD AS BILLING_ZIP,
CASE WHEN REGEXP_REPLACE(IFNULL(TRIM(ADDRESS_STREET),' '),r"\r\n",' ') ='' THEN NULL ELSE UPPER(REGEXP_REPLACE(IFNULL(TRIM(ADDRESS_STREET),' '),r"\r\n",' ')) END  AS OTHER_ADDRESS_LINE1,
CAST(NULL AS STRING)  AS OTHER_ADDRESS_LINE2,
UPPER(CITY) AS OTHER_CITY,
UPPER(STATE_CD) AS OTHER_STATE,
POSTAL_CD AS OTHER_ZIP,	
UPPER(CONTACT_EMAIL) AS OTHER_EMAIL_ADDRESS,
CASE WHEN COALESCE(UPPER(CONTACT_PHONE1_TYPE),UPPER(CONTACT_PHONE2_TYPE)) = "HOME"
THEN COALESCE(CONTACT_PHONE1,CONTACT_PHONE2)
ELSE NULL  END AS HOME_TELEPHONE_NUM,
CASE WHEN COALESCE(UPPER(CONTACT_PHONE1_TYPE),UPPER(CONTACT_PHONE2_TYPE)) = "WORK"
THEN COALESCE(CONTACT_PHONE1,CONTACT_PHONE2)
ELSE NULL  END AS WORK_PHONE_NUM,
CASE WHEN COALESCE(UPPER(CONTACT_PHONE1_TYPE),UPPER(CONTACT_PHONE2_TYPE)) NOT IN ("WORK","HOME")
THEN COALESCE(CONTACT_PHONE1,CONTACT_PHONE2)
ELSE NULL  END AS OTHER_PHONE_NUM,
CASE WHEN COALESCE(UPPER(CONTACT_PHONE1_TYPE),UPPER(CONTACT_PHONE2_TYPE)) IS NOT NULL
THEN COALESCE(REGEXP_REPLACE(CONTACT_PHONE1,'[^0-9]',''),REGEXP_REPLACE(CONTACT_PHONE2,'[^0-9]',''))
WHEN  SUBSTR(REGEXP_REPLACE(CONTACT_NOTE,'[^0-9]',''),0,10) IS NOT NULL 
		THEN SUBSTR(REGEXP_REPLACE(CONTACT_NOTE,'[^0-9]',''),0,10)   
ELSE NULL     
  END AS COR_MASTER_PHONE_NUM,
INVOICE_CREATE_DTTIME AS SOURCE_CREATE_DATE
FROM LANDING.PROTRACTOR_STAGE_INVOICE A)AA ) );

INSERT INTO
  LANDING.MDM_EXCEPTIONS ( SOURCE_KEY1,
    SOURCE_KEY2,
    SOURCE_KEY3,
    SOURCE_KEY1_COLUMN_NAME,
    SOURCE_KEY2_COLUMN_NAME,
    SOURCE_KEY3_COLUMN_NAME,
    SOURCE_SYSTEM,
    FIRST_NM,
    LAST_NM,
    NAME_SUFFIX_CD,
    SALUTATION_CD,
    BIRTH_DATE,
    GENDER_CD,
    MARITAL_STATUS,
    PRIMARY_ADDRESS_LINE1,
    PRIMARY_ADDRESS_LINE2,
    PRIMARY_CITY,
    PRIMARY_STATE,
    PRIMARY_ZIP,
    PRIMARY_EMAIL_ADDRESS,
    RESIDENTIAL_ADDRESS_LINE1,
    RESIDENTIAL_ADDRESS_LINE2,
    RESIDENTIAL_CITY,
    RESIDENTIAL_STATE,
    RESIDENTIAL_ZIP,
    BILLING_ADDRESS_LINE1,
    BILLING_ADDRESS_LINE2,
    BILLING_CITY,
    BILLING_STATE,
    BILLING_ZIP,
    OTHER_ADDRESS_LINE1,
    OTHER_ADDRESS_LINE2,
    OTHER_CITY,
    OTHER_STATE,
    OTHER_ZIP,
    OTHER_EMAIL_ADDRESS,
    HOME_TELEPHONE_NUM,
    WORK_PHONE_NUM,
    OTHER_PHONE_NUM,
    SOURCE_CREATE_DATE,
    COR_MASTER_PHONE_NUM,
    INSERT_DT
    )
SELECT
    SOURCE_KEY1,
    SOURCE_KEY2,
    SOURCE_KEY3,
    SOURCE_KEY1_COLUMN_NAME,
    SOURCE_KEY2_COLUMN_NAME,
    SOURCE_KEY3_COLUMN_NAME,
    SOURCE_SYSTEM,
    FIRST_NM,
    LAST_NM,
    NAME_SUFFIX_CD,
    SALUTATION_CD,
    SAFE_CAST(BIRTH_DATE AS DATE),
    GENDER_CD,
    MARITAL_STATUS,
    PRIMARY_ADDRESS_LINE1,
    PRIMARY_ADDRESS_LINE2,
    PRIMARY_CITY,
    PRIMARY_STATE,
    PRIMARY_ZIP,
    PRIMARY_EMAIL_ADDRESS,
    RESIDENTIAL_ADDRESS_LINE1,
    RESIDENTIAL_ADDRESS_LINE2,
    RESIDENTIAL_CITY,
    RESIDENTIAL_STATE,
    RESIDENTIAL_ZIP,
    BILLING_ADDRESS_LINE1,
    BILLING_ADDRESS_LINE2,
    BILLING_CITY,
    BILLING_STATE,
    BILLING_ZIP,
    OTHER_ADDRESS_LINE1,
    OTHER_ADDRESS_LINE2,
    OTHER_CITY,
    OTHER_STATE,
    OTHER_ZIP,
    OTHER_EMAIL_ADDRESS,
    HOME_TELEPHONE_NUM,
    WORK_PHONE_NUM,
    OTHER_PHONE_NUM,
    EXTRACT(DATE FROM SOURCE_CREATE_DATE) ,
    COR_MASTER_PHONE_NUM,
    CURRENT_DATETIME()
FROM
  LANDING.WORK_MDM_COR_CUSTOMER
WHERE
  REGEXP_CONTAINS(PRIMARY_CITY, '[0-9]')
  OR LENGTH(PRIMARY_ZIP) < 5
  OR LENGTH(PRIMARY_ZIP) >10
  OR REGEXP_CONTAINS(FIRST_NM, '[0-9]')
  OR REGEXP_CONTAINS(LAST_NM, '[0-9]')
  OR FIRST_NM IS NULL
  OR LAST_NM IS NULL;

DELETE
FROM
  LANDING.WORK_MDM_COR_CUSTOMER
WHERE
  REGEXP_CONTAINS(PRIMARY_CITY, '[0-9]')
  OR LENGTH(PRIMARY_ZIP) < 5
  OR LENGTH(PRIMARY_ZIP) >10
  OR REGEXP_CONTAINS(FIRST_NM, '[0-9]')
  OR REGEXP_CONTAINS(LAST_NM, '[0-9]')
  OR FIRST_NM IS NULL
  OR LAST_NM IS NULL