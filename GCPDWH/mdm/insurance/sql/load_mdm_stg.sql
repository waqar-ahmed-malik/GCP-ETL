CREATE OR REPLACE TABLE CUSTOMERS.MDM_WORK_INS_STG AS 
SELECT
ENTERPRISE_ID AS ENTERPRISE_ID,
UPPER(FIRST_NAME) AS FIRST_NAME,
UPPER(LAST_NAME) AS LAST_NAME,
UPPER(NAME_PREFIX) AS NAME_SUFFIX_CD,  
UPPER(SALUTATION) AS SALUTATION_CD,
CASE 
WHEN SAFE_CAST(DATE_OF_BIRTH AS DATE) < PARSE_DATE('%Y-%m-%d','1910-01-01') 
OR SAFE_CAST(DATE_OF_BIRTH AS DATE) > DATE_SUB(CURRENT_DATE(),INTERVAL 10 DAY)
THEN NULL 
ELSE 
SAFE_CAST(DATE_OF_BIRTH AS DATE) END
AS BIRTH_DATE,
UPPER(GENDER) AS GENDER_CD,
UPPER(MARITAL_STATUS) AS MARITAL_STATUS,
UPPER(STREET_LINE1) AS PRIMARY_ADDRESS_LINE1,
UPPER(STREET_LINE2) AS PRIMARY_ADDRESS_LINE2,
UPPER(CITY) AS PRIMARY_CITY,
UPPER(STATE) AS PRIMARY_STATE,
ZIPCODE AS PRIMARY_ZIP,
UPPER(EMAIL_ADDRESS) AS PRIMARY_EMAIL_ADDRESS,
UPPER(STREET_LINE1) AS INS_RESIDENTIAL_ADDRESS_LINE1,
UPPER(STREET_LINE2) AS INS_RESIDENTIAL_ADDRESS_LINE2,
UPPER(CITY) AS INS_RESIDENTIAL_CITY,
UPPER(STATE) AS INS_RESIDENTIAL_STATE,
UPPER(ZIPCODE) AS INS_RESIDENTIAL_ZIP,
CAST(NULL AS STRING) AS INS_BILLING_ADDRESS_LINE1, 
CAST(NULL AS STRING) AS INS_BILLING_ADDRESS_LINE2, 
CAST(NULL AS STRING) AS INS_BILLING_CITY, 
CAST(NULL AS STRING) AS INS_BILLING_STATE,
CAST(NULL AS STRING) AS INS_BILLING_ZIP, 
CAST(NULL AS STRING) AS INS_OTHER_ADDRESS_LINE1, 
CAST(NULL AS STRING) AS INS_OTHER_ADDRESS_LINE2, 
CAST(NULL AS STRING) AS INS_OTHER_CITY, 
CAST(NULL AS STRING) AS INS_OTHER_STATE,
CAST(NULL AS STRING) AS INS_OTHER_ZIP,
UPPER(EMAIL_ADDRESS) AS INS_EMAIL_ADDRESS,
CONCAT(CAST( PHONE_AREA_CODE AS STRING),CAST(PHONE_NUMBER AS STRING)) AS INS_RESIDENTIAL_PHONE_NUM,
CAST(NULL AS STRING) AS INS_WORK_PHONE_NUM,
CAST(NULL AS STRING) AS INS_OTHER_PHONE_NUM,
PARSE_DATE('%m/%d/%Y',TRIM(SUBSTR(LOAD_DATE,1,10))) AS INS_CREATE_DATE
FROM CUSTOMERS.INS_PERSON_CONTACT_DETAIL ;


CREATE OR REPLACE TABLE CUSTOMERS.MDM_WORK_INS_STG AS 
(SELECT
ENTERPRISE_ID AS ENTERPRISE_ID,
UPPER(FIRST_NAME) AS FIRST_NAME,
UPPER(LAST_NAME) AS LAST_NAME,
UPPER(NAME_PREFIX) AS NAME_SUFFIX_CD,  
UPPER(SALUTATION) AS SALUTATION_CD,
SAFE_CAST(DATE_OF_BIRTH AS DATE) AS BIRTH_DATE,
UPPER(GENDER) AS GENDER_CD,
UPPER(MARITAL_STATUS) AS MARITAL_STATUS,
UPPER(STREET_LINE1) AS PRIMARY_ADDRESS_LINE1,
UPPER(STREET_LINE2) AS PRIMARY_ADDRESS_LINE2,
UPPER(CITY) AS PRIMARY_CITY,
UPPER(STATE) AS PRIMARY_STATE,
ZIPCODE AS PRIMARY_ZIP,
UPPER(EMAIL_ADDRESS) AS PRIMARY_EMAIL_ADDRESS,
UPPER(STREET_LINE1) AS INS_RESIDENTIAL_ADDRESS_LINE1,
UPPER(STREET_LINE2) AS INS_RESIDENTIAL_ADDRESS_LINE2,
UPPER(CITY) AS INS_RESIDENTIAL_CITY,
UPPER(STATE) AS INS_RESIDENTIAL_STATE,
UPPER(ZIPCODE) AS INS_RESIDENTIAL_ZIP,
CAST(NULL AS STRING) AS INS_BILLING_ADDRESS_LINE1, 
CAST(NULL AS STRING) AS INS_BILLING_ADDRESS_LINE2, 
CAST(NULL AS STRING) AS INS_BILLING_CITY, 
CAST(NULL AS STRING) AS INS_BILLING_STATE,
CAST(NULL AS STRING) AS INS_BILLING_ZIP, 
CAST(NULL AS STRING) AS INS_OTHER_ADDRESS_LINE1, 
CAST(NULL AS STRING) AS INS_OTHER_ADDRESS_LINE2, 
CAST(NULL AS STRING) AS INS_OTHER_CITY, 
CAST(NULL AS STRING) AS INS_OTHER_STATE,
CAST(NULL AS STRING) AS INS_OTHER_ZIP,
UPPER(EMAIL_ADDRESS) AS INS_EMAIL_ADDRESS,
CONCAT(CAST( PHONE_AREA_CODE AS STRING),CAST(PHONE_NUMBER AS STRING)) AS INS_RESIDENTIAL_PHONE_NUM,
CAST(NULL AS STRING) AS INS_WORK_PHONE_NUM,
CAST(NULL AS STRING) AS INS_OTHER_PHONE_NUM,
PARSE_DATE('%m/%d/%Y',TRIM(SUBSTR(LOAD_DATE,1,10))) AS INS_CREATE_DATE
FROM CUSTOMERS.INS_PERSON_CONTACT_DETAIL IPC
WHERE NOT EXISTS
(
SELECT 1 FROM (
SELECT 
FIRST_NAME ,
LAST_NAME,
STREET_LINE1,
CITY,
STATE
FROM
(SELECT
UPPER(FIRST_NAME) AS FIRST_NAME,
UPPER(LAST_NAME) AS LAST_NAME,
UPPER(STREET_LINE1) AS STREET_LINE1,
UPPER(CITY) AS CITY,
UPPER(STATE) AS STATE
FROM CUSTOMERS.INS_PERSON_CONTACT_DETAIL
WHERE FIRST_NAME IS NOT NULL AND
LAST_NAME IS NOT NULL AND
STREET_LINE1 IS NOT NULL AND
CITY IS NOT NULL AND
STATE IS NOT NULL
)
GROUP BY 
FIRST_NAME ,
LAST_NAME,
STREET_LINE1,
CITY,
STATE
HAVING COUNT(*) >1 )TBL
WHERE UPPER(TBL.FIRST_NAME)=UPPER(IPC.FIRST_NAME)
AND UPPER(TBL.LAST_NAME)=UPPER(IPC.LAST_NAME)
AND UPPER(TBL.STREET_LINE1)=UPPER(IPC.STREET_LINE1)
AND UPPER(TBL.STATE)=UPPER(IPC.STATE)
AND UPPER(TBL.CITY)=UPPER(IPC.CITY)
)
)
UNION ALL
(SELECT   ENTERPRISE_ID AS ENTERPRISE_ID,
UPPER(FIRST_NAME) AS FIRST_NAME,
UPPER(LAST_NAME) AS LAST_NAME,
UPPER(NAME_PREFIX) AS NAME_SUFFIX_CD,  
UPPER(SALUTATION) AS SALUTATION_CD,
SAFE_CAST(DATE_OF_BIRTH AS DATE) AS BIRTH_DATE,
UPPER(GENDER) AS GENDER_CD,
UPPER(MARITAL_STATUS) AS MARITAL_STATUS,
UPPER(STREET_LINE1) AS PRIMARY_ADDRESS_LINE1,
UPPER(STREET_LINE2) AS PRIMARY_ADDRESS_LINE2,
UPPER(CITY) AS PRIMARY_CITY,
UPPER(STATE) AS PRIMARY_STATE,
ZIPCODE AS PRIMARY_ZIP,
UPPER(EMAIL_ADDRESS) AS PRIMARY_EMAIL_ADDRESS,
UPPER(STREET_LINE1) AS INS_RESIDENTIAL_ADDRESS_LINE1,
UPPER(STREET_LINE2) AS INS_RESIDENTIAL_ADDRESS_LINE2,
UPPER(CITY) AS INS_RESIDENTIAL_CITY,
UPPER(STATE) AS INS_RESIDENTIAL_STATE,
UPPER(ZIPCODE) AS INS_RESIDENTIAL_ZIP,
CAST(NULL AS STRING) AS INS_BILLING_ADDRESS_LINE1, 
CAST(NULL AS STRING) AS INS_BILLING_ADDRESS_LINE2, 
CAST(NULL AS STRING) AS INS_BILLING_CITY, 
CAST(NULL AS STRING) AS INS_BILLING_STATE,
CAST(NULL AS STRING) AS INS_BILLING_ZIP, 
CAST(NULL AS STRING) AS INS_OTHER_ADDRESS_LINE1, 
CAST(NULL AS STRING) AS INS_OTHER_ADDRESS_LINE2, 
CAST(NULL AS STRING) AS INS_OTHER_CITY, 
CAST(NULL AS STRING) AS INS_OTHER_STATE,
CAST(NULL AS STRING) AS INS_OTHER_ZIP,
UPPER(EMAIL_ADDRESS) AS INS_EMAIL_ADDRESS,
CONCAT(CAST( PHONE_AREA_CODE AS STRING),CAST(PHONE_NUMBER AS STRING)) AS INS_RESIDENTIAL_PHONE_NUM,
CAST(NULL AS STRING) AS INS_WORK_PHONE_NUM,
CAST(NULL AS STRING) AS INS_OTHER_PHONE_NUM,
PARSE_DATE('%m/%d/%Y',TRIM(SUBSTR(LOAD_DATE,1,10))) AS INS_CREATE_DATE
FROM CUSTOMERS.INS_PERSON_CONTACT_DETAIL IPC
WHERE EXISTS
(
SELECT 1 FROM (
SELECT 
FIRST_NAME ,
LAST_NAME,
STREET_LINE1,
CITY,
STATE
FROM
(SELECT
UPPER(FIRST_NAME) AS FIRST_NAME,
UPPER(LAST_NAME) AS LAST_NAME,
UPPER(STREET_LINE1) AS STREET_LINE1,
UPPER(CITY) AS CITY,
UPPER(STATE) AS STATE
FROM CUSTOMERS.INS_PERSON_CONTACT_DETAIL
WHERE FIRST_NAME IS NOT NULL AND
LAST_NAME IS NOT NULL AND
STREET_LINE1 IS NOT NULL AND
CITY IS NOT NULL AND
STATE IS NOT NULL
)
GROUP BY 
FIRST_NAME ,
LAST_NAME,
STREET_LINE1,
CITY,
STATE
HAVING COUNT(*) >1 )TBL
WHERE UPPER(TBL.FIRST_NAME)=UPPER(IPC.FIRST_NAME)
AND UPPER(TBL.LAST_NAME)=UPPER(IPC.LAST_NAME)
AND UPPER(TBL.STREET_LINE1)=UPPER(IPC.STREET_LINE1)
AND UPPER(TBL.STATE)=UPPER(IPC.STATE)
AND UPPER(TBL.CITY)=UPPER(IPC.CITY)
AND SAFE_CAST(DATE_OF_BIRTH AS DATE) IS NOT NULL
)
)