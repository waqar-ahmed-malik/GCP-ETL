INSERT INTO
  LANDING.PCOMP_INSURANCE_TRANSACTION (INSURANCE_TRANSACTION_ID,
    BATCH_NM,
    PRODUCT_CD,
    POLICY_NUM,
    POLICY_EFFECTIVE_DT,
    POLICY_ENDORSEMENT_DT,
    POLICY_HOLDER_LAST_NM,
    TRANSACTION_CD,
    SOURCE_SYSTEM,
    TRANSACTION_TYPE,
    TRANSACTION_DT,
    TRANSACTION_AMT,
    SALES_REP_ID,
    SALES_REP_DO,
    PROCESS_TYPE,
    ERROR_FLAG,
    ETL_JOB_RUN_ID,
    CREATED_DT,
    CREATED_BY)
SELECT
  INSURANCE_TRANSACTION_ID,
  BATCH_NAME,
  PRODUCT_CD,
  POLICY_NUM,
  POLICY_EFFECTIVE_DT,
  POLICY_ENDORSEMENT_DT,
  POLICY_HOLDER_LAST_NAME,
  TRANSACTION_CD,
  SOURCE_SYSTEM,
  CASE
    WHEN UPPER(TRANSACTION_TYPE_COL) = 'NB' THEN 'New'
    WHEN UPPER(TRANSACTION_TYPE_COL) = 'RN' THEN 'Renewal'
  END AS TRANSACTION_TYPE,
  TRANSACTION_DT,
  TRANSACTION_AMOUNT,
  SALESREP_ID,
  SALESREP_DO,
  PROCESS_TYPE,
  CASE
    WHEN (TRANS_CD_FLAG = '1') AND (TRANSACTION_AMOUNT_FLAG = '0' OR ( CASE
        WHEN TRANSACTION_CD IS NULL
      OR POLICY_NUM IS NULL
      OR TRANSACTION_AMOUNT IS NULL
      OR SALESREP_ID IS NULL
      OR SALESREP_DO IS NULL
      OR TRANSACTION_DT IS NULL
      OR (CASE
          WHEN UPPER(TRANSACTION_TYPE_COL) = 'NB' THEN 'New'
          WHEN UPPER(TRANSACTION_TYPE_COL) = 'RN' THEN 'Renewal' END) IS NULL
      OR PROCESS_TYPE IS NULL THEN '0'
        ELSE '1' END) = '0') THEN 'Error TransactionAmount'
    WHEN (TRANS_CD_FLAG = '0') THEN 'Invalid Trannsactioncode'
  END AS ERROR_FLAG,
  ETL_JOB_RUN_ID,
  CREATED_DT,
  CREATED_BY
FROM (
  SELECT
    CASE
      WHEN PCOMP.MAX_ID IS NULL THEN 0+(ROW_NUMBER() OVER ())
      ELSE PCOMP.MAX_ID+(ROW_NUMBER() OVER ())
    END AS INSURANCE_TRANSACTION_ID,
    CONCAT('BATCH',CAST(CURRENT_DATE() AS STRING)) AS BATCH_NAME,
    'FG' AS PRODUCT_CD,
    SUBSTR(CAST(TRIM(POLICY) AS STRING),3,8) AS POLICY_NUM,
  CASE
    WHEN LPAD(LTRIM(RTRIM(POLICY_EFF_DT)),  8,  '0') = '00000000' THEN NULL
    ELSE SAFE_CAST(CONCAT(SUBSTR(LPAD(LTRIM(RTRIM(POLICY_EFF_DT)),8,'0'),5,8),'-',
          SUBSTR(LPAD(LTRIM(RTRIM(POLICY_EFF_DT)),8,'0'),1,2),'-',
          SUBSTR(LPAD(LTRIM(RTRIM(POLICY_EFF_DT)),8,'0'),3,2)) AS DATE)
  END AS POLICY_EFFECTIVE_DT,
  
  CASE
    WHEN LPAD(LTRIM(RTRIM(ENDORSE_CANCEL_DT)),  8,  '0') = '00000000' THEN NULL
    ELSE SAFE_CAST(CONCAT(SUBSTR(LPAD(LTRIM(RTRIM(ENDORSE_CANCEL_DT)),8,'0'),5,8),'-',
          SUBSTR(LPAD(LTRIM(RTRIM(ENDORSE_CANCEL_DT)),8,'0'),1,2),'-',
          SUBSTR(LPAD(LTRIM(RTRIM(ENDORSE_CANCEL_DT)),8,'0'),3,2)) AS DATE)
  END AS POLICY_ENDORSEMENT_DT,  
    REGEXP_EXTRACT(POLICY_HOLDER_NM_1, r'(.*),') AS POLICY_HOLDER_LAST_NAME,
    TRAN_CD AS TRANSACTION_CD,
    'FLOOD' AS SOURCE_SYSTEM,
    CASE
      WHEN TRAN_CD = 'LW' OR POLICY_NEW_RENEW_CD = 'P' OR TRAN_CD = 'NW' OR (TRAN_CD = 'CW' AND POLICY_NEW_RENEW_CD = 'N') OR (TRAN_CD = 'EW' AND POLICY_NEW_RENEW_CD = 'N') OR (TRAN_CD = 'WC' AND POLICY_NEW_RENEW_CD = 'N') THEN 'NB'
      WHEN TRAN_CD = 'RW'
    OR (TRAN_CD = 'CW'
      AND POLICY_NEW_RENEW_CD = 'R')
    OR (TRAN_CD = 'EW'
      AND POLICY_NEW_RENEW_CD = 'R')
    OR (TRAN_CD = 'WC'
      AND POLICY_NEW_RENEW_CD = 'R') THEN 'RN'
    END AS TRANSACTION_TYPE_COL,
--    CASE
--      WHEN (PARSE_DATE('%m%d%Y',  LPAD(CAST(CREATION_DT AS STRING),  8,  '0')) >= PARSE_DATE('%m%d%Y',  '04182015'))
--      AND PARSE_DATE('%m%d%Y',  LPAD(CAST(CREATION_DT AS STRING),  8,  '0')) <= PARSE_DATE('%m%d%Y',  '05012015')
--      THEN PARSE_DATE('%m%d%Y',  LPAD(CAST(CREATION_DT AS STRING),  8,  '0'))
--     ELSE PARSE_DATE('%m%d%Y', '04182015')
	   PARSE_DATE('%m%d%Y',LPAD(LTRIM(RTRIM(CREATION_DT)),8,'0')) AS TRANSACTION_DT,
    CASE
      WHEN TRAN_AMT <= CP1.PAR_VALUE_NUM_1 THEN '1'
      ELSE '0'
    END AS TRANSACTION_AMOUNT_FLAG,
    CAST(TRAN_AMT AS FLOAT64) AS TRANSACTION_AMOUNT,
    CASE
      WHEN AGENT_XREF2 IS NOT NULL THEN	LPAD((SUBSTR(TRIM(AGENT_XREF2), -3, 3)),3,'0') 
      ELSE LPAD((SUBSTR(TRIM(AGENT_XREF2), -3, 3)),3,'0')
    END AS SALESREP_ID,
    CASE
      WHEN AGENCY_HEAD_OFC = 8866 THEN SUBSTR(TRIM(AGENT_XREF), 9, 3)
      ELSE SUBSTR(TRIM(AGENT_XREF), 10, 2)
    END AS SALESREP_DO,
    CASE
      WHEN TRAN_CD = 'LW' THEN 'Issue'
      WHEN TRAN_CD = 'NW' THEN 'Issue'
      WHEN TRAN_CD = 'RW' THEN 'Issue'
      WHEN TRAN_CD = 'CW' THEN 'Cancel'
      WHEN TRAN_CD = 'EW' THEN 'Endorse'
      WHEN TRAN_CD = 'WC' THEN 'Endorse'
    END AS PROCESS_TYPE,
    "v_job_run_id" AS ETL_JOB_RUN_ID,
    CURRENT_DATETIME() AS CREATED_DT,
    "v_job_name" AS CREATED_BY,
    CASE
      WHEN CP.PAR_VALUE_CHAR_1 IS NULL THEN '0'
      ELSE '1'
    END AS TRANS_CD_FLAG
  FROM
    `LANDING.WORK_PCOMP_FLOOD` PFS
  LEFT OUTER JOIN
    `REFERENCE.COMMON_PARAMETERS` CP
  ON
    CP.FILE_TYPE = 'CSAALIST'
    AND CP.PARAMETER_TYPE='VALID_TRANS_CODES'
    AND TRAN_CD = CP.PAR_VALUE_CHAR_1
  LEFT OUTER JOIN
    `REFERENCE.COMMON_PARAMETERS` CP1
  ON
    CP1.FILE_TYPE = 'CSAALIST'
    AND CP1.PARAMETER_TYPE='VALID_TRANS_AMT',
    (
    SELECT
      MAX(INSURANCE_TRANSACTION_ID) MAX_ID
    FROM
      LANDING.PCOMP_INSURANCE_TRANSACTION) PCOMP
  WHERE
    ( TRAN_CD = 'LW'
      OR TRAN_CD = 'NW'
      OR TRAN_CD = 'RW'
      OR TRAN_CD = 'EW'
      OR TRAN_CD = 'WC'
      OR TRAN_CD = 'CW' )
    AND UPPER(LTRIM(RTRIM(CITY))) != 'WORHTINGTON'
    AND UPPER(LTRIM(RTRIM(CITY))) != 'DENVER' AND(
      CASE
        WHEN CP.PAR_VALUE_CHAR_1 IS NULL THEN '0'
        ELSE '1'
      END = '1'
      OR
      CASE
        WHEN CP.PAR_VALUE_CHAR_1 IS NULL THEN '0'
        ELSE '1'
      END = '0') )