CREATE OR REPLACE TABLE LANDING.WORK_INSURANCE_POLICY_DIM AS (

SELECT INSURANCE_DIM_KEY		,	
SOURCE_ID,
DATA_SOURCE			,
SOURCE_PRODUCT_CD,
PRODUCT_CD			,
PRODUCT_TYPE ,
SUB_PRODUCT_TYPE ,
POLICY_STATE			,
POLICY_PREFIX			,
POLICY_NUM			,
AGREEMENT_NUM			,
IG_MDM_AGREEMENT_NUM,
STATUS_CD,
POLICY_INFORCE_IND ,
INCEPTION_DT ,
TERM_EFFECTIVE_DT		,	
TERM_EXPIRATION_DT			,
CANCEL_DT,
CANCEL_REASON_CD ,
CANCEL_REASON_DESC ,
PREVIOUS_INSURANCE_COMPANY_NM,
PRIOR_POLICY_NUM ,
CONVERSION_FLG ,
PAYMENT_PLAN_CD		,
PAYMENT_PLAN_DESC		,
LAST_ENDORSEMENT_DT		,
GROUP_CD		,
GROUP_CD_DESC,
AVG_ANNUAL_MILEAGE			,
INSURANCE_COMPANY,
VIOLATION_DT,
VIOLATION_PTS,
UPDATE_DTTIME,
SAFE_CAST(NULL AS BYTES) AS MD5_VALUE
FROM (
SELECT DISTINCT 
CONCAT("1",C1.PLCY_NUM ) INSURANCE_DIM_KEY,
C1.FILE_ID,
C1.TRANS_NUM,
CONCAT("IE~",CAST(C1.FILE_ID AS STRING),"~",CAST(C1.TRANS_NUM AS STRING)) AS SOURCE_ID,
A1.DATA_SOURCE_FILE DATA_SOURCE, 
SUBSTR(C1.PLCY_PRFX,3,2) AS  SOURCE_PRODUCT_CD,
P1.PRODUCT_CD AS PRODUCT_CD,
C1.PLCY_NUM AS POLICY_NUM,
CASE WHEN C1.PLCY_PRFX IS NOT NULL THEN  CONCAT(C1.PLCY_PRFX,C1.PLCY_NUM)
	ELSE CONCAT(H1.RT_TERR_ST_CD, P1.PRODUCT_CD,C1.PLCY_NUM) END AS AGREEMENT_NUM,
CASE WHEN (A1.DATA_SOURCE_FILE = 'HUON' OR A1.DATA_SOURCE_FILE    = 'HDES') THEN C1.PLCY_NUM
    ELSE CONCAT(C1.PLCY_PRFX , C1.PLCY_NUM) END AS IG_MDM_AGREEMENT_NUM,
--CASE  WHEN C1.TRM_EXPR_DT > CURRENT_DATE() THEN 'A'
--	ELSE 'I' END AS STATUS_CD,
--	
	
	CASE WHEN (A1.DATA_SOURCE_FILE IN ('EXIGEN', 'ADES', 'HDES', 'HUON', 'PUP')    AND C1.TRANS_TYP_CD   = 'CN') THEN 'I'
        WHEN  C1.TRM_EXPR_DT <= CURRENT_DATE() THEN 'I'
	ELSE 'A' END AS STATUS_CD,
		
--CASE  WHEN C1.TRM_EXPR_DT > CURRENT_DATE() THEN 1
--	ELSE 0 END AS POLICY_INFORCE_IND,
	
	CASE  WHEN (A1.DATA_SOURCE_FILE IN ('EXIGEN', 'ADES', 'HDES', 'HUON', 'PUP') AND C1.TRANS_TYP_CD = 'CN') THEN 0
        WHEN C1.TRM_EXPR_DT <= CURRENT_DATE() THEN 0
	ELSE 1 END AS POLICY_INFORCE_IND,
	
	
C1.PLCY_PRFX POLICY_PREFIX,
COALESCE(H1.RT_TERR_ST_CD, SUBSTR(C1.PLCY_PRFX,1,2)) AS POLICY_STATE,
C2.PAY_PLN_CD AS PAYMENT_PLAN_CD		,
CL1.CODE_DESC AS PAYMENT_PLAN_DESC,
C1.TRM_EFF_DT AS TERM_EFFECTIVE_DT,
C1.TRM_EXPR_DT AS TERM_EXPIRATION_DT,
C1.ORIG_EFF_DT AS INCEPTION_DT,
C1.LST_ENDR_DT AS LAST_ENDORSEMENT_DT,
CASE WHEN (A1.DATA_SOURCE_FILE IN ('EXIGEN', 'ADES', 'HDES', 'HUON', 'PUP')    AND C1.TRANS_TYP_CD   = 'CN') THEN C2.TRANS_EFF_DT
END AS CANCEL_DT,
CASE WHEN (A1.DATA_SOURCE_FILE IN ('EXIGEN', 'ADES', 'HDES', 'HUON', 'PUP')    AND C1.TRANS_TYP_CD   = 'CN') THEN C2.CAN_RSN_CD
END AS CANCEL_REASON_CD,
CASE WHEN (A1.DATA_SOURCE_FILE IN ('EXIGEN', 'ADES', 'HDES', 'HUON', 'PUP')    AND C1.TRANS_TYP_CD   = 'CN') THEN CL3.CODE_DESC 
END AS CANCEL_REASON_DESC,
C1.GRP_CD AS GROUP_CD,
CL2.CODE_DESC AS  GROUP_CD_DESC,
--I1.ANNL_MI_NUM/E1.COUNT_DRVR_NUM AS AVG_ANNUAL_MILEAGE,
I1.AVG_ANNUAL_MILEAGE AS AVG_ANNUAL_MILEAGE,
PARSE_DATE('%Y-%m-%d',G1.VIOLATION_DT) AS VIOLATION_DT,
TRIM(C1.PRIOR_PLCY_NM) AS PRIOR_POLICY_NUM,
G1.VIOLATION_POINT_COUNT AS VIOLATION_PTS,
P1.PRODUCT_TYPE,
P1.SUB_PRODUCT_TYPE,
A1.CNV_FLG  AS CONVERSION_FLG,
TRIM(C3.PRIOR_CARRIER_NAME) AS PREVIOUS_INSURANCE_COMPANY_NM,
P1.INSURANCE_COMPANY  AS INSURANCE_COMPANY,
DATETIME(PARSE_DATE('%Y%m%d',CAST(C1.FILE_ID AS STRING))) AS UPDATE_DTTIME
FROM (SELECT * FROM (SELECT *, ROW_NUMBER() OVER (PARTITION BY  PLCY_NUM  ORDER BY FILE_ID DESC , TRANS_NUM DESC) RN FROM `LANDING.IE_C1_LDG` WHERE CREATE_DT > '1900-01-01' ) C1 WHERE C1.RN=1 ) C1
INNER JOIN `LANDING.IE_A1_LDG` A1 ON A1.TRANS_NUM =C1.TRANS_NUM and A1.FILE_ID = C1.FILE_ID AND DATA_SOURCE_FILE = 'EXIGEN'
LEFT OUTER JOIN `LANDING.IE_C2_LDG` C2 ON  C1.TRANS_NUM=C2.TRANS_NUM and C1.FILE_ID = C2.FILE_ID
LEFT OUTER JOIN `LANDING.IE_C3_LDG` C3 ON  C1.TRANS_NUM=C3.TRANS_NUM and C1.FILE_ID = C3.FILE_ID
LEFT OUTER JOIN (SELECT * FROM (SELECT *,  ROW_NUMBER() OVER (PARTITION BY FILE_ID,TRANS_NUM ORDER BY ITEM_NUM ASC) RN  
                 FROM `LANDING.IE_H1_LDG` )H1 WHERE H1.RN=1) H1 ON C1.TRANS_NUM = H1.TRANS_NUM and C1.FILE_ID = H1.FILE_ID
				 				 
--LEFT OUTER JOIN (SELECT SUM(ANNL_MI_NUM) ANNL_MI_NUM, TRANS_NUM, FILE_ID FROM `LANDING.IE_I1_LDG` GROUP BY 2,3) I1 ON C1.TRANS_NUM=I1.TRANS_NUM and C1.FILE_ID= I1.FILE_ID
LEFT OUTER JOIN (SELECT TRANS_NUM, FILE_ID, SUM(ANNL_MI_NUM)/COUNT(TRANS_NUM) AS AVG_ANNUAL_MILEAGE  FROM `LANDING.IE_I1_LDG` GROUP BY 1,2) I1 ON C1.TRANS_NUM=I1.TRANS_NUM and C1.FILE_ID= I1.FILE_ID

--LEFT OUTER JOIN (SELECT count(distinct( DRVR_NUM)) COUNT_DRVR_NUM, TRANS_NUM, FILE_ID  FROM `LANDING.IE_E1_LDG` WHERE TRIM(DRVR_TYP_CD) = '2' group by TRANS_NUM,FILE_ID) E1 ON C1.TRANS_NUM=E1.TRANS_NUM and C1.FILE_ID= E1.FILE_ID 

--LEFT OUTER JOIN (SELECT count(distinct( DRVR_NUM)) COUNT_DRVR_NUM, TRANS_NUM, FILE_ID  FROM `LANDING.IE_E1_LDG` group by TRANS_NUM,FILE_ID) E1 ON C1.TRANS_NUM=E1.TRANS_NUM and C1.FILE_ID= E1.FILE_ID


LEFT OUTER JOIN (SELECT * FROM (SELECT *, ROW_NUMBER() OVER (PARTITION BY  FILE_ID,TRANS_NUM ORDER BY VIOLATION_POINT_COUNT DESC, VIOLATION_DT DESC ) RN 
                 FROM `LANDING.IE_G1_LDG` where VIOLATION_POINT_COUNT != 0 ) G1 WHERE G1.RN=1 )  G1 ON  C1.TRANS_NUM=G1.TRANS_NUM and C1.FILE_ID = G1.FILE_ID
LEFT OUTER JOIN `REFERENCE.SALES_PRODUCT_DIM` P1 ON SUBSTR(C1.PLCY_PRFX,3,2) = P1.PRODUCT_CD AND P1.SOURCE_SYSTEM_CD='IVANS'
LEFT OUTER JOIN `REFERENCE.INSURANCE_CODE_LOOKUP` CL1 ON CL1.CODE_VALUE = C2.PAY_PLN_CD AND CL1.COLUMN_NAME = 'PAYMENT_PLAN_CD'
LEFT OUTER JOIN `REFERENCE.INSURANCE_CODE_LOOKUP` CL2 ON CL2.CODE_VALUE = C1.GRP_CD AND CL2.COLUMN_NAME = 'GROUP_CD'
LEFT OUTER JOIN `REFERENCE.INSURANCE_CODE_LOOKUP` CL3 ON CL3.CODE_VALUE = C2.CAN_RSN_CD AND CL3.COLUMN_NAME = 'CANCEL_REASON_CD'
WHERE PARSE_DATE('%Y%m%d',CAST(C1.FILE_ID AS STRING)) > (SELECT MAX(DATE(UPDATE_DTTIME)) FROM CUSTOMER_PRODUCT.INSURANCE_POLICY_DIM )
))