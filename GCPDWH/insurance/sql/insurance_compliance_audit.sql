CREATE OR REPLACE TABLE CUSTOMER_PRODUCT.INSURANCE_COMPLIANCE_AUDIT AS
SELECT DISTINCT 
  ITF.INSURANCE_TRANSACTION_ID,
  ITF.TRANSACTION_DT,
  ICD.CUSTOMER_MDM_KEY,
  ITF.POLICY_NUM,
  ICD.AGREEMENT_NUM,
  ITF.PRODUCT_TYPE,
  ITF.PRODUCT_CD AS PRODUCT_CD,
  INSD.STATUS_CD AS POLICY_STATUS,
  Q.QUOTE_NUM,
  ICD.MEMBER_NUM AS MEMBER_NUM, 
  Q.MEMBERSHIP_NUM  AS QUOTE_MEMBER_NUM,
  ITF.TERM_EFFECTIVE_DT AS  POLICY_EFFECTIVE_DT,
  DATE_DIFF(DATE(OPP.OPPORTUNITY_CLOSE_DT),DATE(OPP.OPPORTUNITY_CREATE_DT),day) AS NO_OF_DAYS_OPPORTUNITY_OPEN,
  COALESCE(CONCAT(EPD. LEGAL_FIRST_NM , ' ' ,EPD. LEGAL_LAST_NM ),ITF.SOURCE_AGENT_NM) AS COMPENSATION_EMPLOYEE_NM,
  
  CASE WHEN TRIM(OPP.STATUS_CD) = 'CL' AND UPPER(TRIM(OUTCOME_CD)) = 'WON' -- AND TRIM(ASSIGNED_TO_USER_ID) = TRIM(ITF.COMPENSATION_EMPLOYEE_ID)
       THEN 'Y' 
       ELSE 'N' END AS CLOSED_OPPORTUNITY_FLG,  
  CASE WHEN TRIM(CREATED_BY_USER_ID) in ('SVC_CS_PAS_API', 'SVC_CS_API', 'SAM_SYSTEM') AND  TRIM(OPP.STATUS_CD) = 'CL' THEN 'Y'                    
       WHEN (UPPER(TRIM(OPP.CREATED_BY_USER_ID)) = UPPER(TRIM(OPP.CLOSED_BY_USER_ID)) AND TRIM(OPP.STATUS_CD) = 'CL' )
       OR (UPPER(TRIM(OPP.CREATED_BY_USER_ID)) <> UPPER(TRIM(OPP.CLOSED_BY_USER_ID)) AND         DATE_DIFF(DATE(OPP.OPPORTUNITY_CLOSE_DT),DATE(OPP.OPPORTUNITY_CREATE_DT),day) > 183 AND ITF.PRODUCT_TYPE = 'AUTO' AND TRIM(OPP.STATUS_CD) = 'CL') -- no name match, AUTO quote create date is older than 183 days
      OR (UPPER(TRIM(OPP.CREATED_BY_USER_ID)) <> UPPER(TRIM(OPP.CLOSED_BY_USER_ID)) AND DATE_DIFF(DATE(OPP.OPPORTUNITY_CLOSE_DT),DATE(OPP.OPPORTUNITY_CREATE_DT),day)  > 250 AND ITF.PRODUCT_TYPE = 'HOME' AND TRIM(OPP.STATUS_CD) = 'CL') -- no name match, HOME quote create date is older than 250 days
    THEN 'Y'
    ELSE 'N' END AS CLOSED_BY_ORIGINAL_AGENT_FLG,
  QMEM.STATUS_CD AS QUOTE_MEMBERSHIP_STATUS,
  CASE WHEN ICD.MEMBER_STATUS_CD IS NULL THEN 'N' 
       WHEN ICD.MEMBER_STATUS_CD IN ('P', 'A') THEN 'Y'
       ELSE 'N' END AS MEMBERSHIP_CURRENT_STATUS_FLG,  
  CASE WHEN MEM1.STATUS_CD IS NULL THEN 'N'
       WHEN MEM1.STATUS_CD IN ('A')  THEN 'Y'
       ELSE 'N'   END AS MEMBERSHIP_STATUS_ON_DAY1_FLG, 
  INSD.FIRST_AVG_ANNUAL_MILEAGE AS AVG_ANNUAL_MILEAGE,
  CASE WHEN MEM100.STATUS_CD IS NULL THEN 'N'
       WHEN MEM100.STATUS_CD IN ('A') THEN 'Y'
       ELSE 'N' END AS MEMBERSHIP_STATUS_ON_DAY100_FLG, 
  CASE WHEN INSD.FIRST_AVG_ANNUAL_MILEAGE >= 10500 THEN 'Y'  
       ELSE 'N' END AS  ANNUAL_MILEAGE_FLG,
  CASE WHEN T1_E11.TRANSACTION_DT BETWEEN ITF.TRANSACTION_DT and DATE_ADD(ITF.TERM_EFFECTIVE_DT ,INTERVAL 30 DAY) 
            AND T1_E11.TRANSACTION_DT IS NOT NULL AND ITF.INSURANCE_TRANSACTION_ID <> T1_E11.INSURANCE_TRANSACTION_ID 
            AND ITF.TERM_EFFECTIVE_DT = T1_E11.TERM_EFFECTIVE_DT THEN 'Y' 
       ELSE  'N' END AS PREMIUM_BEARING_ENDORSEMENTS_FLG,
  IUDH.HOME_POLICY_DWELLING_LIMIT_FLG AS HOME_POLICY_DWELLING_LIMIT_FLG,
  IUDH.HOME_BURGLAR_ALARM_TYPE_CD AS HOME_BURGLAR_ALARM_TYPE_CD,
  IUDA.AUTO_BODILY_INJURY_LIMIT_GROUP AS AUTO_BODILY_INJURY_LIMIT_GROUP,
  IUDA.AUTO_PROPERTY_DAMAGE_LIMIT_GROUP AS AUTO_PROPERTY_DAMAGE_LIMIT_GROUP,
  IUDA.AUTO_UNINSURED_MOTORISTS_LIMIT_GROUP AS AUTO_UNINSURED_MOTORISTS_LIMIT_GROUP,
  IUDA.AUTO_MEDICAL_PAYMENT_GROUP AS AUTO_MEDICAL_PAYMENT_GROUP,			
  INSD.PRIOR_POLICY_NUM AS PRIOR_POLICY_NUM,
  INSD.VIOLATION_DT AS VIOLATION_DT,
  IUDH.HOME_REPLACEMENT_AMT		AS  HOME_ISO_360_AMT,
  IUDH.HOME_POLICY_DWELLING_AMT,
  SAFE_CAST(T1_E11.TRANSACTION_AMT AS INT64)/100 PREMIUM_BEARING_ENDORSEMENT_AMT,
  ICD.DRIVER_TYPE_CD,
  --ICD.DRIVER_YAF,
  --ICD.DRIVER_LICENSE_VALID_IND
  ICD.DRIVER_STUDENT_DISCOUNT_IND,
  ICD.DEFENSIVE_DRIVER_DT,
  ICD.DRIVER_DISCOUNT_CD,
  CASE WHEN PREVIOUS_INSURANCE_COMPANY_NM IS NOT NULL THEN 'Y' ELSE 'N' END AS PREVIOUS_INSURANCE_COMPANY_IND,  
  OPP.STATUS_CD AS OPP_STATUS_CD,
  OPP.OPPORTUNITY_ID,  
  OPP.CREATED_BY_USER_ID,
  OPP.CLOSED_BY_USER_ID,
  DATE(OPP.OPPORTUNITY_CLOSE_DT) OPPORTUNITY_CLOSE_DT,
  OPP.OPPORTUNITY_CREATE_DT,  
  INSURANCE_CLAIMS_CNT AS COUNT_OF_CLAIMS,  
  ITF.COMPENSATION_EMPLOYEE_ID  AS COMPENSATION_EMPLOYEE_ID,
  ITF.SELLING_LOCATION_ID,
  LD.LOCATION_NM  AS  SELLING_LOCATION_NM,
  LD.CITY  AS  SELLING_LOCATION_CITY,
  LD.STATE_CD  AS  SELLING_LOCATION_STATE,  
  LD.LOCATION_HIERARCHY_NM AS REGION,
  ITF.SALES_CHANNEL,  
  FORMAT_DATE("%Y%m%d",ITF.TERM_EFFECTIVE_DT) AS NEW_POLICY_EFF_DATE,
  CURRENT_DATE() AS CREATE_DT 
FROM 
(SELECT * FROM ( SELECT * , ROW_NUMBER() OVER (PARTITION BY POLICY_NUM ORDER BY TRANSACTION_DT DESC) AS DUP_CHECK 
FROM CUSTOMER_PRODUCT.INSURANCE_TRANSACTION_FACT
WHERE TRANSACTION_TERM = 'New' AND TRANSACTION_TYPE =  'Issue' 
AND SOURCE_SYSTEM IN ('EXIGEN PUP', 'EXIGEN HOME', 'EXIGEN AUTO')
AND PRODUCT_TYPE IN ('Home','Auto')
AND EXTRACT(YEAR FROM  TRANSACTION_DT ) >= 2017
) FACT WHERE FACT.DUP_CHECK=1 ) ITF

LEFT OUTER JOIN (SELECT * FROM 
(SELECT INSURANCE_TRANSACTION_ID, PRODUCT_CD, SOURCE_SYSTEM, POLICY_NUM,TRANSACTION_DT,TRANSACTION_AMT,TRANSACTION_EFFECTIVE_DT,TERM_EFFECTIVE_DT,ROW_NUMBER() OVER(PARTITION BY POLICY_NUM ORDER BY TERM_EFFECTIVE_DT DESC) RN 
FROM CUSTOMER_PRODUCT.INSURANCE_TRANSACTION_FACT
WHERE UPPER(TRANSACTION_TERM) = 'NEW' AND UPPER(TRANSACTION_TYPE) = 'ENDORSE' and TRANSACTION_AMT <> 0.0 AND EXTRACT(YEAR FROM  TRANSACTION_DT ) >= 2017 )T1_E1
WHERE T1_E1.RN=1) T1_E11 ON ITF.POLICY_NUM = T1_E11.POLICY_NUM AND ITF.PRODUCT_CD = T1_E11.PRODUCT_CD AND ITF.SOURCE_SYSTEM = T1_E11.SOURCE_SYSTEM  AND ITF.INSURANCE_TRANSACTION_ID <> T1_E11.INSURANCE_TRANSACTION_ID AND ITF.TERM_EFFECTIVE_DT = T1_E11.TERM_EFFECTIVE_DT
LEFT OUTER JOIN 
(SELECT * FROM (SELECT POLICY_NUM, AGREEMENT_NUM, STATUS_CD,  PREVIOUS_INSURANCE_COMPANY_NM, PRIOR_POLICY_NUM, VIOLATION_DT,  ACTIVE_FLG, AVG_ANNUAL_MILEAGE,DATA_SOURCE,
FIRST_VALUE(AVG_ANNUAL_MILEAGE) OVER (PARTITION BY  POLICY_NUM ORDER BY ROW_START_DT ASC) FIRST_AVG_ANNUAL_MILEAGE
FROM CUSTOMER_PRODUCT.INSURANCE_POLICY_DIM) WHERE ACTIVE_FLG = 'Y' and DATA_SOURCE = 'EXIGEN') INSD ON ITF.POLICY_NUM = INSD.POLICY_NUM  and INSD.ACTIVE_FLG = 'Y'
LEFT OUTER JOIN ( SELECT AGREEMENT_NUM, POLICY_NUM,    
       CASE WHEN MAX(IUD.AUTO_BODILY_INJURY_PERSON_AMT) < 30000 OR MAX(IUD.AUTO_BODILY_INJURY_PERSON_AMT) IS NULL THEN '<30000'
            WHEN MAX(IUD.AUTO_BODILY_INJURY_PERSON_AMT) >= 30000 AND MAX(IUD.AUTO_BODILY_INJURY_PERSON_AMT) < 100000 THEN '<100000'
            WHEN MAX(IUD.AUTO_BODILY_INJURY_PERSON_AMT) >= 100000 THEN '>=100000' END AS AUTO_BODILY_INJURY_LIMIT_GROUP,	            
       CASE WHEN MAX(IUD.AUTO_PROPERTY_DAMAGE_AMT) < 30000 OR MAX(IUD.AUTO_PROPERTY_DAMAGE_AMT) IS NULL THEN '<30000'
            WHEN MAX(IUD.AUTO_PROPERTY_DAMAGE_AMT) > 30000 AND MAX(IUD.AUTO_PROPERTY_DAMAGE_AMT) < 100000 THEN '< 100000'
            WHEN MAX(IUD.AUTO_PROPERTY_DAMAGE_AMT) >= 100000 THEN '>=100000' END AS AUTO_PROPERTY_DAMAGE_LIMIT_GROUP,            
       CASE WHEN MAX(IUD.AUTO_UNINSURED_MOTORISTS_PERSON_AMT) < 30000  OR MAX(IUD.AUTO_UNINSURED_MOTORISTS_PERSON_AMT) IS NULL THEN '<30000'
            WHEN MAX(IUD.AUTO_UNINSURED_MOTORISTS_PERSON_AMT) >= 30000 AND MAX(IUD.AUTO_UNINSURED_MOTORISTS_PERSON_AMT) < 100000 THEN '<100000'
            WHEN MAX(IUD.AUTO_UNINSURED_MOTORISTS_PERSON_AMT) > 100000 THEN '>=100000' END AS AUTO_UNINSURED_MOTORISTS_LIMIT_GROUP,  	
	   CASE WHEN MAX(IUD.AUTO_MEDICAL_PAYMENT_AMT) IS NULL THEN  NULL 
            WHEN MAX(IUD.AUTO_MEDICAL_PAYMENT_AMT) < 10000 THEN '<10000'
            WHEN MAX(IUD.AUTO_MEDICAL_PAYMENT_AMT) >= 10000 THEN '>=10000' END AS AUTO_MEDICAL_PAYMENT_GROUP
FROM CUSTOMER_PRODUCT.INSURANCE_UNIT_DETAILS_DIM IUD 
where PRODUCT_TYPE = 'Auto'
GROUP BY AGREEMENT_NUM, POLICY_NUM
) IUDA ON ITF.POLICY_NUM = IUDA.POLICY_NUM
LEFT OUTER JOIN (SELECT AGREEMENT_NUM, POLICY_NUM, HOME_BURGLAR_ALARM_TYPE_CD, HOME_REPLACEMENT_AMT , HOME_POLICY_DWELLING_AMT,        	
      CASE WHEN HOME_POLICY_DWELLING_AMT >=  HOME_REPLACEMENT_AMT THEN 'Y' ELSE 'N' END AS HOME_POLICY_DWELLING_LIMIT_FLG
FROM CUSTOMER_PRODUCT.INSURANCE_UNIT_DETAILS_DIM IUD 
where PRODUCT_TYPE = 'Home'
) IUDH ON ITF.POLICY_NUM = IUDH.POLICY_NUM
LEFT OUTER JOIN CUSTOMER_PRODUCT.INSURANCE_CUSTOMER_DIM  ICD ON INSD.AGREEMENT_NUM = ICD.AGREEMENT_NUM
LEFT OUTER JOIN CUSTOMERS.EMPLOYEE_PROFILE_DIM EPD ON EPD.EMPLOYEE_ID = ITF.COMPENSATION_EMPLOYEE_ID
LEFT OUTER JOIN CUSTOMER_PRODUCT.LOCATION_DIM LD ON TRIM(LD.LOCATION_ID) = TRIM(ITF.SELLING_LOCATION_ID) AND LD.ACTIVE_FLG = 'Y'
LEFT OUTER JOIN CUSTOMER_PRODUCT.QUOTES_DIM Q   ON SUBSTR(Q.POLICY_NUM,5)= ITF.POLICY_NUM   AND Q.ROW_END_DT ='9999-12-31'
LEFT OUTER JOIN OPERATIONAL.CONNECTSUITE_SALES_OPPORTUNITIES OPP   ON Q.OPPORTUNITY_ID = OPP.OPPORTUNITY_ID
LEFT OUTER JOIN OPERATIONAL.CONNECTSUITE_MEMBER QMEM ON QMEM.MEMBER_NUM = Q.MEMBERSHIP_NUM
LEFT OUTER JOIN CUSTOMER_PRODUCT.CONNECTSUITE_MEMBER_DIM MEM1 ON MEM1.MEMBER_NUM = ICD.MEMBER_NUM AND  ITF.TRANSACTION_DT  BETWEEN MEM1.ROW_START_DT AND MEM1.ROW_END_DT
LEFT OUTER JOIN CUSTOMER_PRODUCT.CONNECTSUITE_MEMBER_DIM MEM100 ON MEM100.MEMBER_NUM = ICD.MEMBER_NUM AND  DATE_ADD(ITF.TRANSACTION_DT,INTERVAL 100 DAY)  BETWEEN MEM100.ROW_START_DT AND MEM100.ROW_END_DT
