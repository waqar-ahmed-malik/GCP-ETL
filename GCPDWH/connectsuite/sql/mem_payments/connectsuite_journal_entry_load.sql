MERGE INTO OPERATIONAL.CONNECTSUITE_JOURNAL_ENTRY M
USING LANDING.WORK_CS_JOURNAL_ENTRY W
ON M.JOURNAL_KEY =SAFE_CAST(W.JOURNAL_KEY AS INT64)
WHEN NOT MATCHED THEN
INSERT
(
JOURNAL_KEY,
JOURNAL_POST_DTTIME,
JOURNAL_PROC_DTTIME,
JOURNAL_AMT,
JOURNAL_DR_CR_IND,
JOURNAL_CREAT_DTTIME,
JOURNAL_GL_PROC_IND,
MEMBERSHIP_KEY,
GLACT_KEY,
MEMBERSHIP_PAYMENT_KEY,
MEMBERSHIP_COST_KEY,
ETL_JOB_RUN_ID,
SOURCE_SYSTEM_CD,
CREATE_DTTIME,
CREATED_BY,
UPDATE_DTTIME
)
VALUES
(
CAST(JOURNAL_KEY AS INT64),
PARSE_DATETIME('%Y-%m-%d %H:%M:%E*S',JOURNAL_POST_DTTIME),
PARSE_DATETIME('%Y-%m-%d %H:%M:%E*S',JOURNAL_PROC_DTTIME),
CAST(JOURNAL_AT AS FLOAT64),
JOURNAL_DR_CR_IND,
PARSE_DATETIME('%Y-%m-%d %H:%M:%E*S',JOURNAL_CREAT_DT),
JOURNAL_GL_PROC_IND,
CAST(MEMBERSHIP_KEY AS INT64),
CAST(GLACT_KEY AS INT64),
CAST(MEMBERSHIP_PAYMENT_KEY AS INT64),
CAST(MEMBERSHIP_COST_KEY AS INT64),
CAST('jobrunid' AS INT64),
'CONNECT SUITE',
CURRENT_DATETIME(),
'jobname',
CURRENT_DATETIME()
)
WHEN MATCHED THEN 
UPDATE
SET
JOURNAL_POST_DTTIME = PARSE_DATETIME('%Y-%m-%d %H:%M:%E*S',W.JOURNAL_POST_DTTIME),
JOURNAL_PROC_DTTIME = PARSE_DATETIME('%Y-%m-%d %H:%M:%E*S',W.JOURNAL_PROC_DTTIME),
JOURNAL_AMT = CAST(W.JOURNAL_AT AS FLOAT64),
JOURNAL_DR_CR_IND = W.JOURNAL_DR_CR_IND,
JOURNAL_CREAT_DTTIME = PARSE_DATETIME('%Y-%m-%d %H:%M:%E*S',W.JOURNAL_CREAT_DT),
JOURNAL_GL_PROC_IND = W.JOURNAL_GL_PROC_IND,
MEMBERSHIP_KEY = CAST(W.MEMBERSHIP_KEY AS INT64),
GLACT_KEY = CAST(W.GLACT_KEY AS INT64),
MEMBERSHIP_PAYMENT_KEY = CAST(W.MEMBERSHIP_PAYMENT_KEY AS INT64),
MEMBERSHIP_COST_KEY = CAST(W.MEMBERSHIP_COST_KEY AS INT64),
ETL_JOB_RUN_ID = CAST('jobrunid' AS INT64),
SOURCE_SYSTEM_CD = 'CONNECT SUITE',
CREATED_BY = 'jobname',
UPDATE_DTTIME = CURRENT_DATETIME()