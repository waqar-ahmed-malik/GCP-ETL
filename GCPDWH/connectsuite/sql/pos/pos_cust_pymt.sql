MERGE OPERATIONAL.POS_CUST_PYMT A
USING LANDING.WORK_POS_CUS_PYMT B
ON  A.SALE_ID = CAST(B.SALE_ID AS INT64) AND 
A.ASSOC_CD= B.ASSOC_CD AND
A.CLB_CD= B.CLB_CD AND 
A.OFC_ID= B.OFC_ID AND 
A.PYMT_ID= CAST(B.PYMT_ID AS INT64)
WHEN MATCHED THEN
UPDATE SET
A.CUST_PYMT_AMT = SAFE_CAST(B.CUST_PYMT_AMT AS FLOAT64),
A.CUST_PYMT_DT = SAFE_CAST(B.CUST_PYMT_DT AS DATETIME),
A.CUST_PYMT_TYP_ID = SAFE_CAST(B.CUST_PYMT_TYP_ID AS INT64),
A.CUST_BAL_CLR = B.CUST_BAL_CLR,
A.WKST_ID = B.WKST_ID,
A.CONSULTANT_ID = B.CONSULTANT_ID,
A.GL_ACCT_NR = B.GL_ACCT_NR,
A.UPLOAD_TRANS_NR = SAFE_CAST(B.UPLOAD_TRANS_NR AS INT64),
A.BAL_SET_ID = B.BAL_SET_ID,
A.PYMT_STATUS = B.PYMT_STATUS,
A.LAST_UPDATE = SAFE_CAST(B.LAST_UPDATE AS DATETIME),
A.NUMBER_OF_100S = SAFE_CAST(B.NUMBER_OF_100S AS INT64),
A.LAST_UPDATE_DTTIME = current_datetime()
WHEN NOT MATCHED THEN
  INSERT(ASSOC_CD,
CLB_CD,
OFC_ID,
SALE_ID,
PYMT_ID,
CUST_PYMT_AMT,
CUST_PYMT_DT,
CUST_PYMT_TYP_ID,
CUST_BAL_CLR,
WKST_ID,
CONSULTANT_ID,
GL_ACCT_NR,
UPLOAD_TRANS_NR,
BAL_SET_ID,
PYMT_STATUS,
LAST_UPDATE,
NUMBER_OF_100S,
LAST_UPDATE_DTTIME,
JOB_RUN_ID,
SOURCE_SYSTEM_CD,
CREATE_DT
)
VALUES
(ASSOC_CD,
CLB_CD,
OFC_ID,
SAFE_CAST(SALE_ID AS INT64),
SAFE_CAST(PYMT_ID AS INT64),
SAFE_CAST(CUST_PYMT_AMT AS FLOAT64),
SAFE_CAST(CUST_PYMT_DT AS DATETIME),
SAFE_CAST(CUST_PYMT_TYP_ID AS INT64),
CUST_BAL_CLR,
WKST_ID,
CONSULTANT_ID,
GL_ACCT_NR,
SAFE_CAST(UPLOAD_TRANS_NR AS Int64),
BAL_SET_ID,
PYMT_STATUS,
SAFE_CAST(LAST_UPDATE AS DATETIME),
SAFE_CAST(NUMBER_OF_100S AS INT64),
CAST(LAST_UPDATE  AS DATETIME),
'jobrunid',
'POS' ,
CURRENT_DATE())
