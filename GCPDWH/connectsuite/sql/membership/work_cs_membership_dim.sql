SELECT
  MEMBERSHIP_KEY,
  MEMBERSHIP_ID,
  BILL_PAY_METHOD,
  MEMBERSHIP_STATUS_CD,
  MEMBERSHIP_STATUS_DESC,
  DUES_COST_AMT,
  PAYMENT_APPLY_AMT,
  PAYMENT_PENDING_AMT,
  PAYMENT_REFUND_AMT,
  DUES_ADJUSTMENT_AMT,
  CREDIT_APPLY_AMT,
  CREDIT_PENDING_AMT,
  RETURNED_CHECK_FEE_AMT,
  OTHER_FEE_AMT,
  PLUS_MEMBERSHIP_IND,
  FUTURE_EFFECTIVE_IND,
  KIT_ISSUED_IND,
  B.BRN_CD AS BRANCH_CD,
  B.BRN_NM AS BRANCH_NAME,
  INCENTIVE_TYPE_CD,
  ENTRANCE_FEE_AMT,
  PREVIOUS_STAUS_DESC_CD,
  DONOT_RENEW_REASON_CD,
  CANCEL_DT,
  MEMBERSHIP_ACTIVE_DT,
  TERM_EFFECTIVE_DT,
  TERM_EXPIRATION_DT,
  REINSTATE_DT,
  INCEPTION_DT,
  TRANSFER_IN_IND,
  MEMBERSHIP_LEVEL,
   CONVERT(CHAR,
    ((COALESCE(CAST (TOTAL_CHARGES AS NUMERIC(19,
                4)),
          0) - COALESCE(CAST (TOTAL_PAYMENTS AS NUMERIC(19,
                4)) ,
          0)+ COALESCE(CAST (SAFETY_OWED AS NUMERIC(19,
                4)) ,
          0) ) -COALESCE(CAST (TOTAL_CREDITS AS NUMERIC(19,
              4)) ,
        0))) AS BALANCE_DUE_AMT,
  GIFTED_IND,
  LAST_UPGRADE_DT,
  LAST_DOWNGRADE_DT,
  COMPENSATION_EMPLOYEE_ID,
  AR_DISCOUNT_APPLIED_DT,
  CASE
    WHEN MEMBERSHIP_STATUS_CD = 'A' THEN NULL
    ELSE 'Y'
  END AS AR_DECLINE_FLAG,
  TOTAL_CHARGES,
  TOTAL_PAYMENTS,
  TOTAL_CREDITS,
  SAFETY_OWED,
  DATA.BRN_KY,
  CONVERT(CHAR,
    MCOM.MCMT_CREAT_DT,
    120) AS PAYMENT_DT,
  B.BRN_ST_PROV_CD AS STATE,
  MBRS_DNR_KY,
  NULL AS MD5_VALUE,
  TRIM(CONVERT(CHAR,
      MBRS_UPDATE_DT)) AS MBRS_UPDATE_DT,
      DONOR_FIRST_NM,
	   DONOR_MIDDLE_INITIAL_NM,    
      DONOR_LAST_NM  
	  
FROM (
  SELECT
    TRIM(CONVERT(CHAR,
        MBRSHIP.MBRS_KY)) AS MEMBERSHIP_KEY,
    TRIM(CONVERT(CHAR,
        MBRSHIP.MBRS_ID )) AS MEMBERSHIP_ID,
    TRIM(CONVERT(CHAR,
        MBRSHIP.MBRS_REN_METH_CD)) AS BILL_PAY_METHOD,
    TRIM(CONVERT(CHAR,
        MBRSHIP.MBRS_EXPIR_DT,
        120)) AS TERM_EXPIRATION_DT,
    TRIM(CONVERT(CHAR,
        M.MBR_REINST_DT,
        120)) AS REINSTATE_DT,
    TRIM(CONVERT(CHAR,
        MBRSHIP.MBRS_STS_CD)) AS MEMBERSHIP_STATUS_CD,
    TRIM(CONVERT(CHAR,
        MBRSHIP.MBRS_STS_DSC_CD))AS MEMBERSHIP_STATUS_DESC,
    TRIM(CONVERT(CHAR,
        COALESCE( MBRSHIP.MBRS_DUES_COST_AT,
          0)))AS DUES_COST_AMT,
    TRIM(CONVERT(CHAR,
        COALESCE( MBRSHIP.MBRS_PMT_APPLY_AT,
          0)))AS PAYMENT_APPLY_AMT,
    TRIM(CONVERT(CHAR,
        COALESCE( MBRSHIP.MBRS_PMT_PEND_AT,
          0))) AS PAYMENT_PENDING_AMT,
    TRIM(CONVERT(CHAR,
        COALESCE( MBRSHIP.MBRS_PMT_RFND_AT,
          0))) AS PAYMENT_REFUND_AMT,
    TRIM(CONVERT(CHAR,
        COALESCE(MBRSHIP.MBRS_DUES_ADJ_AT,
          0))) AS DUES_ADJUSTMENT_AMT,
    TRIM(CONVERT(CHAR,
        COALESCE( MBRSHIP.MBRS_CRED_APPLY_AT,
          0))) AS CREDIT_APPLY_AMT,
    TRIM(CONVERT(CHAR,
        COALESCE( MBRSHIP.MBRS_CRED_PEND_AT,
          0))) AS CREDIT_PENDING_AMT,
    TRIM(CONVERT(CHAR,
        COALESCE( MBRSHIP.MBRS_RTNCK_FEE_AT,
          0))) AS RETURNED_CHECK_FEE_AMT,
    TRIM(CONVERT(CHAR,
        COALESCE( MBRSHIP.MBRS_OTH_FEE_AT,
          0))) AS OTHER_FEE_AMT,
    TRIM(CONVERT(CHAR,
        MBRSHIP.MBRS_PLS_IN)) AS PLUS_MEMBERSHIP_IND,
    TRIM(CONVERT(CHAR,
        MBRSHIP.MBRS_OCP_CD)) AS FUTURE_EFFECTIVE_IND,
    TRIM(CONVERT(CHAR,
        MBRSHIP.MBRS_KIT_ISSD_IN)) AS KIT_ISSUED_IND,
    TRIM(CONVERT(CHAR,
        MBRSHIP.MBRS_D2K_UPDT_DT,
        120)) AS MBRS_D2K_UPDT_DT,
    TRIM(CONVERT(CHAR,
        MBRSHIP.MBRS_GFT_TYP_CD)) AS GIFTED_IND,
    TRIM(CONVERT(CHAR,
        MBRSHIP.BRN_KY)) AS BRN_KY,
    TRIM(CONVERT(CHAR,
        MBRSHIP.MBRS_INCENT_TYP_CD)) AS INCENTIVE_TYPE_CD,
    TRIM(CONVERT(CHAR,
        MBRSHIP.MBRS_CANC_DT,
        120)) AS CANCEL_DT,
    TRIM(CONVERT(CHAR,
        MBRSHIP.MBRS_ACTV_DT,
        120)) AS MEMBERSHIP_ACTIVE_DT,
    TRIM(CONVERT(CHAR,
        MBRSHIP.MBRS_ENT_AT)) AS ENTRANCE_FEE_AMT,
    TRIM(CONVERT(CHAR,
        MBRSHIP.MBRS_PREV_STS_DSC_CD)) AS PREVIOUS_STAUS_DESC_CD,
    TRIM(CONVERT(CHAR,
        MBRSHIP.MBRS_KIT)) AS NEW_MEMBERSHIP_KIT_TYPE,
    TRIM(CONVERT(CHAR,
        MBRSHIP.MBRS_DO_NOT_REN_RSN)) AS DONOT_RENEW_REASON_CD,
    TRIM(CONVERT(CHAR,
        MBRSHIP.AUTOREN_DISC_APPLIED_DT,
        120)) AS AR_DISCOUNT_APPLIED_DT,
    TRIM(CONVERT(CHAR,
        COALESCE(MBRS_RTNCK_FEE_AT,
          0)+ COALESCE(MBRS_DUES_COST_AT,
          0)+ COALESCE(MBRS_DUES_ADJ_AT,
          0) + COALESCE(MBRS_OTH_FEE_AT,
          0)+ COALESCE(MBRS_ENT_AT,
          0)))AS TOTAL_CHARGES,
    TRIM(CONVERT(CHAR,
        COALESCE(MBRS_PMT_APPLY_AT,
          0) +COALESCE(MBRS_PMT_PEND_AT,
          0))) AS TOTAL_PAYMENTS,
    TRIM(CONVERT(CHAR,
        COALESCE(MBRS_CRED_APPLY_AT,
          0) +COALESCE(MBRS_CRED_PEND_AT,
          0))) AS TOTAL_CREDITS,
    CASE
      WHEN COALESCE(MBRS_SAFE_AT, 0) < COALESCE(SAFE_FUND_DNT_AMOUNT, 0) THEN CONVERT(CHAR,  (COALESCE(SAFE_FUND_DNT_AMOUNT, 0) - COALESCE(MBRS_SAFE_AT,  0)))
      ELSE '0'
    END AS SAFETY_OWED,
--    CONVERT(CHAR,
--      CASE
--        WHEN DATEDIFF(DAY, MBRSHIP.MBRS_CURR_EFFECT_DT,  MBRSHIP.MBRS_EXPIR_DT) IN (1,  0,  -1) THEN DATEADD (month,  -12,  MBRSHIP.MBRS_EXPIR_DT)
--        ELSE MBRSHIP.MBRS_CURR_EFFECT_DT END,
--      120) AS TERM_EFFECTIVE_DT,
	CONVERT(CHAR,CASE
      WHEN  MBRS_CURR_EFFECT_DT IS NULL AND   MBRS_EXPIR_DT IS NOT NULL THEN   DATEADD (month,  -12,MBRS_EXPIR_DT)  
      WHEN DATEDIFF(DAY, MBRS_CURR_EFFECT_DT,MBRS_EXPIR_DT) IN (1,  0,  -1) THEN DATEADD (month,  -12,MBRS_EXPIR_DT)
      ELSE MBRS_CURR_EFFECT_DT END,
    120) AS TERM_EFFECTIVE_DT,
    TRIM(CONVERT(CHAR,
        M.MBR_JN_CLB_DT,
        120)) AS INCEPTION_DT,
    CASE
      WHEN UPPER(TRIM(M.MBR_COMM_CD)) IN ('T',  'T1') THEN 'Y'
      ELSE 'N'
    END AS TRANSFER_IN_IND,
	
	CASE
      WHEN MBRS_STS_CD IN ('A', 'P') THEN TRIM(RA.ride_comp_cd)
      WHEN MBRS_STS_CD = 'C' THEN TRIM(RC.ride_comp_cd)
    END AS MEMBERSHIP_LEVEL,
	
    
    TRIM(CONVERT(CHAR,
        RC.RIDE_CANC_DT,
        120)) AS LAST_UPGRADE_DT,
    TRIM(CONVERT(CHAR,
        RA.RIDE_ADD_DT,
        120)) AS LAST_DOWNGRADE_DT,
    TRIM(CONVERT(CHAR,
        SEC_SA.EMPLOYEE_ID)) AS COMPENSATION_EMPLOYEE_ID,
    TRIM(CONVERT(CHAR,
        M.MBR_COMM_CD)) AS MBR_COMM_CD,
    TRIM(CONVERT(CHAR,
        P.CC_TYPE_CD)) AS CREDIT_TYPE_CD,
    TRIM(CONVERT(CHAR,
        MBRSHIP.MBRS_DNR_KY)) AS MBRS_DNR_KY,
    CONVERT(DATE,
      CDC.MBRS_UPDT_DT) AS MBRS_UPDATE_DT,
	  
	  
	  
	  TRIM(CONVERT(CHAR,D.DNR_FST_NM)) AS DONOR_FIRST_NM,
	  TRIM(CONVERT(CHAR,D.DNR_MID_INIT_NM)) AS DONOR_MIDDLE_INITIAL_NM,    
      TRIM(CONVERT(CHAR,D.DNR_LST_NM))   AS DONOR_LAST_NM  
	  
	  
  FROM
    MBRSHIP
  LEFT OUTER JOIN
    MBR M
  ON
    (MBRSHIP.MBRS_ID=M.MBRS_ID )
    AND M.MBR_ASSOC_ID = 1
  LEFT OUTER JOIN
    SALES_AGENT SEC_SA
  ON
    M.SLS_AGT_KY = SEC_SA.SAGT_KY

	
  LEFT OUTER JOIN 
  DONOR D 
  ON
  MBRSHIP.MBRS_DNR_KY  = D.DNR_KY  

  LEFT OUTER JOIN (
    SELECT
      *
    FROM (
      SELECT
        *,
        DENSE_RANK() OVER(PARTITION BY MBRS_KY ORDER BY CASE WHEN ride_comp_cd= 'BS' THEN 1 WHEN ride_comp_cd= 'PL' THEN 2 WHEN ride_comp_cd= 'RP' THEN 3 WHEN ride_comp_cd= 'MO' THEN 4 WHEN ride_comp_cd= 'EP' THEN 5 WHEN ride_comp_cd= 'EV' THEN 5 END DESC) RN
      FROM
        RIDER
      WHERE
        ride_CANC_DT IS NULL) RDR
    WHERE
      RDR.RN=1 ) RA
  ON
    MBRSHIP.MBRS_KY=RA.MBRS_KY
  LEFT OUTER JOIN (
    SELECT
      *
    FROM (
      SELECT
        *,
        DENSE_RANK() OVER(PARTITION BY MBRS_KY ORDER BY CASE WHEN ride_comp_cd= 'BS' THEN 1 WHEN ride_comp_cd= 'PL' THEN 2 WHEN ride_comp_cd= 'RP' THEN 3 WHEN ride_comp_cd= 'MO' THEN 4 WHEN ride_comp_cd= 'EP' THEN 5 WHEN ride_comp_cd= 'EV' THEN 5 END, ride_CANC_DT DESC) RN
      FROM
        RIDER
      WHERE
        ride_CANC_DT IS NOT NULL) RDR
    WHERE
      RDR.RN=1 ) RC
  ON
    MBRSHIP.MBRS_KY=RC.MBRS_KY
  LEFT OUTER JOIN (
    SELECT
      *
    FROM (
      SELECT
        *,
        DENSE_RANK() OVER (PARTITION BY MBRS_KY ORDER BY E_PMT_BILL_KY DESC) RN
      FROM
        E_PAYMENT_BILLING ) E_PAY
    WHERE
      E_PAY.RN=1 ) P
  ON
    MBRSHIP.MBRS_KY=P.MBRS_KY
  INNER JOIN (
    SELECT DISTINCT
      MBRS_KY,
      MAX(MBRS_UPDT_DT) AS  MBRS_UPDT_DT    
     FROM (
        SELECT
          MBRS_KY,
          MBRS_RTD2K_UPDT_DT AS MBRS_UPDT_DT
        FROM
          MBRSHIP
--        WHERE
--          CONVERT(DATE, MBRSHIP.MBRS_RTD2K_UPDT_DT) = CONVERT(DATE,
--            GETDATE() - 1)
            
             WHERE
 CONVERT(DATE,
  MBRSHIP.MBRS_RTD2K_UPDT_DT) >= CONVERT(DATE,
           '2019-12-24' ) AND CONVERT(DATE,
   MBRSHIP.MBRS_RTD2K_UPDT_DT) <= CONVERT(DATE,
           GETDATE() - 1)
            
            
UNION
        SELECT
          DISTINCT MBRSHIP_COMMENT.MBRS_KY AS MBRS_KY,
          MBRSHIP_COMMENT.MCMT_UPDT_DT AS MBRS_UPDT_DT
        FROM
          MBRSHIP_COMMENT
--         WHERE
--          CONVERT(DATE,MBRSHIP_COMMENT.MCMT_UPDT_DT) = CONVERT(DATE,
--            GETDATE() - 1)
--            
            
           WHERE
 CONVERT(DATE,
   MBRSHIP_COMMENT.MCMT_UPDT_DT) >= CONVERT(DATE,
           '2019-12-24' ) AND CONVERT(DATE,
    MBRSHIP_COMMENT.MCMT_UPDT_DT) <= CONVERT(DATE,
           GETDATE() - 1)
            
            
            
		  ) SQ  GROUP BY MBRS_KY 
   
      ) CDC
  ON
    CDC.MBRS_KY=MBRSHIP.MBRS_KY ) DATA
LEFT OUTER JOIN
  BRANCH B
ON
  B.BRN_KY = DATA.BRN_KY

LEFT OUTER JOIN (
  SELECT
    *
  FROM (
    SELECT
      MCMT_CREAT_DT,
      MBRS_KY,
      ROW_NUMBER() OVER(PARTITION BY MBRS_KY ORDER BY MCMT_UPDT_DT DESC) AS RNK
    FROM
      MBRSHIP_COMMENT) TAB
  WHERE
    RNK=1 ) MCOM
ON
  DATA.MEMBERSHIP_KEY = MCOM.MBRS_KY