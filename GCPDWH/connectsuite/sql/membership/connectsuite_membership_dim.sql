INSERT INTO
  CUSTOMER_PRODUCT.CONNECTSUITE_MEMBERSHIP_DIM( MEMBERSHIP_KEY,
    MEMBERSHIP_NUM,
    BILL_PAY_METHOD,
    MEMBERSHIP_STATUS_CD,
    MEMBERSHIP_STATUS_DESC,
    DUES_COST_AMT,
    PAYMENT_APPLY_AMT,
    PAYMENT_PENDING_AMT,
    PAYMENT_REFUND_AMT,
    DUES_ADJUSTMENT_AMT,
    CREDIT_APPLY_AMT,
    CREDIT_PENDING_AMT,
    RETURNED_CHECK_FEE_AMT,
    OTHER_FEE_AMT,
    PLUS_MEMBERSHIP_IND,
    FUTURE_EFFECTIVE_IND,
    KIT_ISSUED_IND,
    LOCATION_ID,
    LOCATION_NM,
    INCENTIVE_TYPE_CD,
    ENTRANCE_FEE_AMT,
    PREVIOUS_STAUS_DESC_CD,
    DONOT_RENEW_REASON_CD,
    CANCEL_DT,
    MEMBERSHIP_ACTIVE_DT,
    TERM_EFFECTIVE_DT,
    TERM_EXPIRATION_DT,
    REINSTATE_DT,
    INCEPTION_DT,
    TRANSFER_IN_IND,
    BALANCE_DUE_AMT,
    ISSUING_STATE,
    MEMBERSHIP_LEVEL,
    MEMBERSHIP_LEVEL_DESC,
    GIFTED_IND,
    LAST_UPGRADE_DT,
    LAST_DOWNGRADE_DT,
    COMPENSATION_EMPLOYEE_ID,
    AR_DISCOUNT_APPLIED_DT,
    AR_DECLINE_FLAG,
    LAST_DECLINE_DT,
    FIRST_DECLINE_CURR_TERM_DT,
    TOTAL_CHARGES,
    TOTAL_PAYMENTS,
    TOTAL_CREDITS,
    SAFETY_OWED,
    ROW_START_DT,
    ROW_END_DT,
    JOB_RUN_ID,
    SOURCE_SYSTEM_CD,
    UPDATE_DTTIME,
    ACTIVE_FLG,
    MD5_VALUE,
	DONOR_FIRST_NM,
DONOR_MIDDLE_INITIAL_NM,
DONOR_LAST_NM
)




SELECT DISTINCT 
  MEMBERSHIP_KEY,
  MEMBERSHIP_NUM,
  BILL_PAY_METHOD,
  MEMBERSHIP_STATUS_CD,
  MEMBERSHIP_STATUS_DESC,
  DUES_COST_AMT,
  PAYMENT_APPLY_AMT,
  PAYMENT_PENDING_AMT,
  PAYMENT_REFUND_AMT,
  DUES_ADJUSTMENT_AMT,
  CREDIT_APPLY_AMT,
  CREDIT_PENDING_AMT,
  RETURNED_CHECK_FEE_AMT,
  OTHER_FEE_AMT,
  PLUS_MEMBERSHIP_IND,
  FUTURE_EFFECTIVE_IND,
  KIT_ISSUED_IND,
  LOCATION_ID,
  LOCATION_NM,
  INCENTIVE_TYPE_CD,
  ENTRANCE_FEE_AMT,
  PREVIOUS_STAUS_DESC_CD,
  DONOT_RENEW_REASON_CD,
  CANCEL_DT,
  MEMBERSHIP_ACTIVE_DT,
  TERM_EFFECTIVE_DT,
  TERM_EXPIRATION_DT,
  REINSTATE_DT,
  INCEPTION_DT,
  TRANSFER_IN_IND,
  BALANCE_DUE_AMT,
  ISSUING_STATE,
  MEMBERSHIP_LEVEL,
  MEMBERSHIP_LEVEL_DESC,
  GIFTED_IND,
  LAST_UPGRADE_DT,
  LAST_DOWNGRADE_DT,
  COMPENSATION_EMPLOYEE_ID,
  AR_DISCOUNT_APPLIED_DT,
  AR_DECLINE_FLAG,
  LAST_DECLINE_DT,
  FIRST_DECLINE_CURR_TERM_DT,
  SAFE_CAST(TOTAL_CHARGES AS FLOAT64),
  SAFE_CAST(TOTAL_PAYMENTS AS FLOAT64),
  SAFE_CAST(TOTAL_CREDITS AS FLOAT64),
  SAFE_CAST(SAFETY_OWED AS FLOAT64),
  ROW_START_DT,
  ROW_END_DT,
  JOB_RUN_ID,
  SOURCE_SYSTEM_CD,
  UPDATE_DTTIME,
  ACTIVE_FLG,
  MD5_VALUE,
  DONOR_FIRST_NM,
DONOR_MIDDLE_INITIAL_NM,
DONOR_LAST_NM




FROM (
  SELECT DISTINCT 
    CAST(TRIM(STG.MEMBERSHIP_KEY) AS INT64) AS MEMBERSHIP_KEY,
    TRIM(STG.MEMBERSHIP_ID)AS MEMBERSHIP_NUM,
    CASE
      WHEN TRIM(STG.BILL_PAY_METHOD) = 'A' THEN 'Auto Renew'
      ELSE 'Bill'
    END AS BILL_PAY_METHOD,
    TRIM(STG.MEMBERSHIP_STATUS_CD) AS MEMBERSHIP_STATUS_CD,
    CASE
      WHEN TRIM(STG.MEMBERSHIP_STATUS_CD) = 'A' THEN 'ACTIVE'
      WHEN TRIM(STG.MEMBERSHIP_STATUS_CD) = 'P' THEN 'PENDING'
      ELSE 'CANCELLED'
    END AS MEMBERSHIP_STATUS_DESC,
    CAST(TRIM(STG.DUES_COST_AMT) AS FLOAT64) AS DUES_COST_AMT,
    CAST(TRIM(STG.PAYMENT_APPLY_AMT) AS FLOAT64) AS PAYMENT_APPLY_AMT,
    CAST(TRIM(STG.PAYMENT_PENDING_AMT) AS FLOAT64) AS PAYMENT_PENDING_AMT,
    CAST(TRIM(STG.PAYMENT_REFUND_AMT) AS FLOAT64) AS PAYMENT_REFUND_AMT,
    CAST(TRIM(STG.DUES_ADJUSTMENT_AMT) AS FLOAT64) AS DUES_ADJUSTMENT_AMT,
    CAST(TRIM(STG.CREDIT_APPLY_AMT) AS FLOAT64) AS CREDIT_APPLY_AMT,
    CAST(TRIM(STG.CREDIT_PENDING_AMT) AS FLOAT64) AS CREDIT_PENDING_AMT,
    CAST(TRIM(STG.RETURNED_CHECK_FEE_AMT) AS FLOAT64) AS RETURNED_CHECK_FEE_AMT,
    CAST(TRIM(STG.OTHER_FEE_AMT) AS FLOAT64) AS OTHER_FEE_AMT,
    TRIM(STG.PLUS_MEMBERSHIP_IND) AS PLUS_MEMBERSHIP_IND,
    TRIM(STG.FUTURE_EFFECTIVE_IND) AS FUTURE_EFFECTIVE_IND,
    TRIM(STG.KIT_ISSUED_IND) AS KIT_ISSUED_IND,
    TRIM(LD.LOCATION_ID) AS LOCATION_ID,
    TRIM(LD.LOCATION_NM) AS LOCATION_NM,
    TRIM(STG.INCENTIVE_TYPE_CD) AS INCENTIVE_TYPE_CD,
    CAST(TRIM(STG.ENTRANCE_FEE_AMT) AS FLOAT64) AS ENTRANCE_FEE_AMT,
    TRIM(STG.PREVIOUS_STAUS_DESC_CD) AS PREVIOUS_STAUS_DESC_CD,
    TRIM(STG.DONOT_RENEW_REASON_CD) AS DONOT_RENEW_REASON_CD,
    PARSE_DATE('%Y-%m-%d',
      SUBSTR(TRIM(STG.CANCEL_DT),0,10)) AS CANCEL_DT,
    PARSE_DATE('%Y-%m-%d',
      SUBSTR(TRIM(STG.MEMBERSHIP_ACTIVE_DT),0,10)) AS MEMBERSHIP_ACTIVE_DT,
    PARSE_DATE('%Y-%m-%d',
      SUBSTR( TRIM(STG.TERM_EFFECTIVE_DT),0,10)) AS TERM_EFFECTIVE_DT,
    PARSE_DATE('%Y-%m-%d',
      SUBSTR(TRIM(STG.TERM_EXPIRATION_DT),0,10)) AS TERM_EXPIRATION_DT,

      PARSE_DATE('%Y-%m-%d',
      SUBSTR(TRIM(STG.REINSTATE_DT),0,10)) AS REINSTATE_DT,
      
      PARSE_DATE('%Y-%m-%d',
      SUBSTR(TRIM(STG.INCEPTION_DT),0,10)) AS INCEPTION_DT,


      STG.TRANSFER_IN_IND AS TRANSFER_IN_IND,

      
    CAST(TRIM(STG.BALANCE_DUE_AMT) AS FLOAT64) AS BALANCE_DUE_AMT,
	  CASE WHEN TRIM(COALESCE(LD.STATE_CD,LD2.STATE_CD))  IN ('CA','NV','AZ','UT','MT','WY','AK') 
    THEN COALESCE(LD.STATE_CD,LD2.STATE_CD)
	WHEN MD.ACTIVE_MILITARY_IND = "1"
	THEN "CA"
	WHEN CD.RESIDENTIAL_STATE   IN ('CA','NV','AZ','UT','MT','WY','AK') 
	THEN CD.RESIDENTIAL_STATE
	ELSE MM.ISSUING_STATE
    END AS ISSUING_STATE,
    
    TRIM(STG.MEMBERSHIP_LEVEL) AS MEMBERSHIP_LEVEL,
    --PD.PRODUCT_CD_DESC AS MEMBERSHIP_LEVEL_DESC,
	
	  CASE WHEN PD.PRODUCT_CD_DESC IS NULL 		
	THEN MM.MEMBERSHIP_LEVEL_DESC		
	ELSE PD.PRODUCT_CD_DESC		
    END AS MEMBERSHIP_LEVEL_DESC, 
	
    CASE
      WHEN TRIM(STG.MBRS_DNR_KY) IS NOT NULL THEN 'Y'
      ELSE 'N'
    END AS GIFTED_IND,
    PARSE_DATE('%Y-%m-%d',
      SUBSTR(TRIM(STG.LAST_UPGRADE_DT),0,10)) AS LAST_UPGRADE_DT,
    PARSE_DATE('%Y-%m-%d',
      SUBSTR(TRIM(STG.LAST_DOWNGRADE_DT),0,10)) AS LAST_DOWNGRADE_DT,
    TRIM(STG.COMPENSATION_EMPLOYEE_ID) AS COMPENSATION_EMPLOYEE_ID,
    PARSE_DATE('%Y-%m-%d',
      SUBSTR(TRIM(STG.AR_DISCOUNT_APPLIED_DT ),0,10)) AS AR_DISCOUNT_APPLIED_DT,
    TRIM(STG.AR_DECLINE_FLAG) AS AR_DECLINE_FLAG,
    DATE(PH.LAST_DECLINE_DT) AS LAST_DECLINE_DT,
    DATE(PH.FIRST_DECLINE_CURR_TERM_DT) AS FIRST_DECLINE_CURR_TERM_DT,
    TRIM(STG.TOTAL_CHARGES) AS TOTAL_CHARGES,
    TRIM(STG.TOTAL_PAYMENTS) AS TOTAL_PAYMENTS,
    TRIM(STG.TOTAL_CREDITS) AS TOTAL_CREDITS,
    TRIM(STG.SAFETY_OWED) AS SAFETY_OWED,
    PARSE_DATE('%Y-%m-%d',
      STG.MBRS_UPDATE_DT) AS ROW_START_DT,
    PARSE_DATE('%Y-%m-%d',
      '9999-12-31') AS ROW_END_DT,
    "jobrunid" AS JOB_RUN_ID,
    "CONNECT SUITE" AS SOURCE_SYSTEM_CD,
    CURRENT_DATETIME() AS UPDATE_DTTIME,
    'Y' AS ACTIVE_FLG,
    STG.MD5_VALUE,
	STG.DONOR_FIRST_NM,
STG.DONOR_MIDDLE_INITIAL_NM,
STG.DONOR_LAST_NM
  FROM
    LANDING.WORK_CS_MEMBERSHIP_DIM_MD5 STG
  LEFT OUTER JOIN
    CUSTOMER_PRODUCT.LOCATION_DIM LD
  ON
    CAST(TRIM(STG.BRN_KY) AS STRING) = SAFE_CAST(LD.CS_M_BRANCH_KEY AS STRING)
    AND LD.ACTIVE_FLG = 'Y'
  LEFT OUTER JOIN (
    SELECT
      PH.MBRS_KEY AS MBRS_KY,
      MAX(REQUEST_DTTIME ) AS LAST_DECLINE_DT,
      MIN(REQUEST_DTTIME ) AS FIRST_DECLINE_CURR_TERM_DT
    FROM
      OPERATIONAL.CONNECTSUITE_E_PAYMENT_HISTORY PH,
      LANDING.WORK_CS_MEMBERSHIP_DIM_MD5 M
    WHERE
      CAST(PH.MBRS_KEY AS STRING) =TRIM(M.MEMBERSHIP_KEY)
      AND TRIM(M. BILL_PAY_METHOD) ='A'
      AND DATE(PH.REQUEST_DTTIME) >=DATE (PARSE_DATETIME('%F %T',
          TRIM(M.TERM_EXPIRATION_DT)))
      AND PH.SOFT_DECLINE ='Y'
      AND PH.SUCCESS_FLG = 'N'
      AND TRIM(M.MEMBERSHIP_STATUS_CD) ='P'
    GROUP BY
      PH.MBRS_KEY) PH
  ON
    CAST(PH.MBRS_KY AS STRING)= TRIM(STG.MEMBERSHIP_KEY)
  LEFT OUTER JOIN
    REFERENCE.CONNECTSUITE_PRODUCT_DIM PD
  ON
    PD.PRODUCT_CD = STG.MEMBERSHIP_LEVEL
    AND PD.CS_MODULE = 'M'
	
	 LEFT OUTER JOIN
    CUSTOMER_PRODUCT.CONNECTSUITE_MEMBER_DIM MD
  ON
    STG.MEMBERSHIP_ID = MD.MEMBERSHIP_NUM AND MD.ASSOCIATE_ID = 1
    AND MD.ACTIVE_FLG = 'Y'


    LEFT OUTER JOIN
    CUSTOMERS.MEMBERSHIP_CUSTOMER_DIM CD
  ON
  CD.MEMBER_NUM =  MD.MEMBER_NUM 
    AND CD.ACTIVE_FLG = 'Y'
    
  LEFT OUTER JOIN (
  SELECT
    *
  FROM (
    SELECT
      MEMBERSHIP_KEY,
      MEMBERSHIP_BRANCH_KEY,
      TRANSACTION_DTTIME,
      ROW_NUMBER() OVER (PARTITION BY MEMBERSHIP_KEY ORDER BY TRANSACTION_DTTIME DESC ) RN
    FROM
     CUSTOMER_PRODUCT.CONNECTSUITE_MEMBER_TRANSACTIONS_FACT WHERE MEMBERSHIP_BRANCH_KEY NOT IN (1,0)
) A
  WHERE
    A.RN=1 ) TF
ON
   STG.MEMBERSHIP_KEY =  SAFE_CAST(TF.MEMBERSHIP_KEY AS STRING)
   
   
	LEFT OUTER JOIN
    CUSTOMER_PRODUCT.LOCATION_DIM LD2
  ON
    CAST(TF.MEMBERSHIP_BRANCH_KEY AS STRING) = SAFE_CAST(LD2.CS_M_BRANCH_KEY AS STRING)
    AND LD2.ACTIVE_FLG = 'Y'
    
	
	LEFT OUTER JOIN
    CUSTOMER_PRODUCT.CONNECTSUITE_MEMBERSHIP_DIM MM
  ON
 MM.MEMBERSHIP_KEY =  SAFE_CAST(STG.MEMBERSHIP_KEY	AS INT64) AND MM.ACTIVE_FLG = "Y"
  WHERE
    ( NOT EXISTS (
      SELECT
        1
      FROM
        `CUSTOMER_PRODUCT.CONNECTSUITE_MEMBERSHIP_DIM` B
      WHERE
        B.MEMBERSHIP_KEY=SAFE_CAST(STG.MEMBERSHIP_KEY AS INT64)
        AND ACTIVE_FLG = "Y")
      OR ( EXISTS (
        SELECT
          1
        FROM
          `CUSTOMER_PRODUCT.CONNECTSUITE_MEMBERSHIP_DIM` D
        WHERE
          D.MEMBERSHIP_KEY=SAFE_CAST(STG.MEMBERSHIP_KEY AS INT64)
          AND ACTIVE_FLG = "Y")
        AND NOT EXISTS (
        SELECT
          1
        FROM
          `CUSTOMER_PRODUCT.CONNECTSUITE_MEMBERSHIP_DIM` C
        WHERE
          TO_BASE64(C.MD5_VALUE)=TO_BASE64(STG.MD5_VALUE)
          AND ACTIVE_FLG = "Y" ) ) )
		  	  

		  )
