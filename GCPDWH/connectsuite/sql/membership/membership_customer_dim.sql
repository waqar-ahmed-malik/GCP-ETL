INSERT INTO CUSTOMERS.MEMBERSHIP_CUSTOMER_DIM (
CUSTOMER_MDM_KEY,
CUSTOMER_ID,
ASSOCIATE_ID,
MEMBERSHIP_NUM,
MEMBER_NUM,
FIRST_NM,
LAST_NM,
CARD_NM,
MID_INITIAL_NM,
BIRTH_DT,
SALUTATION_CD,
NAME_SUFFIX_CD,
GENDER_CD,
DECEASED_IND,
MARITAL_STATUS_CD,
BILLING_ADDRESS_LINE1,
BILLING_ADDRESS_LINE2,
BILLING_CITY,
BILLING_STATE,
BILLING_ZIP,
BILLING_ZIP_PLUS4,
BILLING_ADDRESS_START_DT,
BILLING_ADDRESS_END_DT,
RESIDENTIAL_ADDRESS_LINE1,
RESIDENTIAL_ADDRESS_LINE2,
RESIDENTIAL_CITY,
RESIDENTIAL_STATE,
RESIDENTIAL_ZIP,
RESIDENTIAL_ZIP_PLUS4,
RESIDENTIAL_ADDRESS_START_DT,
RESIDENTIAL_ADDRESS_END_DT,
TEMPORARY_ADDRESS_LINE1,
TEMPORARY_ADDRESS_LINE2,
TEMPORARY_CITY,
TEMPORARY_STATE,
TEMPORARY_ZIP,
TEMPORARY_ADDRESS_START_DT,
TEMPORARY_ADDRESS_END_DT,
EMAIL_UPDATE_DT,
EMAIL_ADDRESS,
HOME_PHONE_NUM,
WORK_PHONE_NUM,
MOBILE_PHONE_NUM,
ROW_START_DT, 
ROW_END_DT, 
JOB_RUN_ID,
SOURCE_SYSTEM_CD,
UPDATE_DTTIME,
ACTIVE_FLG,
MD5_VALUE)
SELECT DISTINCT 
MDM.CUSTOMER_MDM_KEY ,
A.CUSTOMER_ID,
A.ASSOCIATE_ID,
A.MEMBERSHIP_NUM,
A.MEMBER_NUM,
A.FIRST_NM,
A.LAST_NM,
A.CARD_NM,
A.MID_INITIAL_NM,
A.BIRTH_DT,
A.SALUTATION_CD,
A.NAME_SUFFIX_CD,
A.GENDER_CD,
A.DECEASED_IND,
A.MARITAL_STATUS_CD,
A.BILLING_ADDRESS_LINE1,
A.BILLING_ADDRESS_LINE2,
A.BILLING_CITY,
A.BILLING_STATE,
A.BILLING_ZIP,
A.BILLING_ZIP_PLUS4,
A.BILLING_ADDRESS_START_DT,
A.BILLING_ADDRESS_END_DT,
A.RESIDENTIAL_ADDRESS_LINE1,
A.RESIDENTIAL_ADDRESS_LINE2,
A.RESIDENTIAL_CITY,
A.RESIDENTIAL_STATE,
A.RESIDENTIAL_ZIP,
A.RESIDENTIAL_ZIP_PLUS4 ,
A.RESIDENTIAL_ADDRESS_START_DT,
A.RESIDENTIAL_ADDRESS_END_DT,
A.TEMPORARY_ADDRESS_LINE1,
A.TEMPORARY_ADDRESS_LINE2,
A.TEMPORARY_CITY,
A.TEMPORARY_STATE,
A.TEMPORARY_ZIP,   
A.TEMPORARY_ADDRESS_START_DT,
A.TEMPORARY_ADDRESS_END_DT,
A.EMAIL_UPDATE_DT,
A.EMAIL_ADDRESS,
A.HOME_PHONE_NUM,
A.WORK_PHONE_NUM,
A.MOBILE_PHONE_NUM,
A.EFFECTIVE_START_DT AS ROW_START_DT,
A.EFFECTIVE_END_DT AS ROW_END_DT,
A.JOB_RUN_ID,
A.SOURCE_SYSTEM_CD,
A.UPDATE_DTTIME,
A.ACTIVE_FLG,
A.MD5_VALUE
FROM(
SELECT *,

CASE WHEN B.BILLING_ADDRESS_LINE IS NULL THEN (CASE WHEN LENGTH(B.RESIDENTIAL_ZIP) >= 9 THEN SUBSTR(B.RESIDENTIAL_ZIP,6,4)
	  ELSE NULL	  END) ELSE ( CASE WHEN LENGTH(B.BILLING_ZIP) >= 9 THEN SUBSTR(B.BILLING_ZIP,6,4)
 ELSE NULL	  END) END AS BILLING_ZIP_PLUS4 ,
 
CASE WHEN LENGTH(B.RESIDENTIAL_ZIP) >= 9 THEN SUBSTR(B.RESIDENTIAL_ZIP,6,4)
	  ELSE NULL	  END AS RESIDENTIAL_ZIP_PLUS4 
 

FROM (
SELECT
NULL AS CUSTOMER_MDM_KEY,
CAST(TRIM(STG.customerid) as INT64) AS CUSTOMER_ID,
CAST(TRIM(STG.ASSOCIATE_ID) as INT64) AS ASSOCIATE_ID,
TRIM(STG.MBRS_ID) AS MEMBERSHIP_NUM,	
 CONCAT(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),1,15),SAFE_CAST( (CASE
          WHEN MOD ( CASE
            WHEN CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),1,1) AS INT64) *2 >9 THEN 1+MOD(CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),1,1) AS INT64)*2,10)
            ELSE CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),1,1) AS INT64)*2
          END +CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),2,1) AS INT64) + (CASE
              WHEN CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),3,1) AS INT64) *2 >9 THEN 1+MOD(CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),3,1) AS INT64)*2,10)
              ELSE CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),3,1) AS INT64)*2
            END ) +CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),4,1) AS INT64) +(CASE
              WHEN CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),5,1) AS INT64) *2 >9 THEN 1+MOD(CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),5,1) AS INT64)*2,10)
              ELSE CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),5,1) AS INT64)*2
            END ) +CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),6,1) AS INT64) +(CASE
              WHEN CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),7,1) AS INT64) *2 >9 THEN 1+MOD(CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),7,1) AS INT64)*2,10)
              ELSE CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),7,1) AS INT64)*2
            END ) +CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),8,1) AS INT64) +(CASE
              WHEN CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),9,1) AS INT64) *2 >9 THEN 1+MOD(CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),9,1) AS INT64)*2,10)
              ELSE CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),9,1) AS INT64)*2
            END ) +CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),10,1) AS INT64) +(CASE
              WHEN CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),11,1) AS INT64) *2 >9 THEN 1+MOD(CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),11,1) AS INT64)*2,10)
              ELSE CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),11,1) AS INT64)*2
            END ) +CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),12,1) AS INT64) + (CASE
              WHEN CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),13,1) AS INT64) *2 >9 THEN 1+MOD(CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),13,1) AS INT64)*2,10)
              ELSE CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),13,1) AS INT64)*2
            END ) +CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),14,1) AS INT64) +(CASE
              WHEN CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),15,1) AS INT64) *2 >9 THEN 1+MOD(CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),15,1) AS INT64)*2,10)
              ELSE CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),15,1) AS INT64)*2 END),10)= 0 THEN 0
          ELSE 10 - MOD (CASE
            WHEN CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),1,1) AS INT64) *2 >9 THEN 1+MOD(CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),1,1) AS INT64)*2,10)
            ELSE CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),1,1) AS INT64)*2
          END +CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),2,1) AS INT64) + (CASE
              WHEN CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),3,1) AS INT64) *2 >9 THEN 1+MOD(CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),3,1) AS INT64)*2,10)
              ELSE CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),3,1) AS INT64)*2
            END ) +CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),4,1) AS INT64) +(CASE
              WHEN CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),5,1) AS INT64) *2 >9 THEN 1+MOD(CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),5,1) AS INT64)*2,10)
              ELSE CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),5,1) AS INT64)*2
            END ) +CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),6,1) AS INT64) +(CASE
              WHEN CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),7,1) AS INT64) *2 >9 THEN 1+MOD(CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),7,1) AS INT64)*2,10)
              ELSE CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),7,1) AS INT64)*2
            END ) +CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),8,1) AS INT64) +(CASE
              WHEN CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),9,1) AS INT64) *2 >9 THEN 1+MOD(CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),9,1) AS INT64)*2,10)
              ELSE CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),9,1) AS INT64)*2
            END ) +CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),10,1) AS INT64) +(CASE
              WHEN CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),11,1) AS INT64) *2 >9 THEN 1+MOD(CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),11,1) AS INT64)*2,10)
              ELSE CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),11,1) AS INT64)*2
            END ) +CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),12,1) AS INT64) + (CASE
              WHEN CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),13,1) AS INT64) *2 >9 THEN 1+MOD(CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),13,1) AS INT64)*2,10)
              ELSE CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),13,1) AS INT64)*2
            END ) +CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),14,1) AS INT64) +(CASE
              WHEN CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),15,1) AS INT64) *2 >9 THEN 1+MOD(CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),15,1) AS INT64)*2,10)
              ELSE CAST(SUBSTR(CONCAT('429005',TRIM(STG.MBRS_ID),TRIM(STG.ASSOCIATE_ID)),15,1) AS INT64)*2 END),10)
        END ) AS STRING )) AS MEMBER_NUM,
TRIM(STG.mbr_fst_nm) AS FIRST_NM,
TRIM(STG.mbr_lst_nm) AS LAST_NM,
COALESCE(TRIM(STG.CARD_NAME),CONCAT(TRIM(STG.mbr_fst_nm)," ",TRIM(STG.mbr_lst_nm))) AS CARD_NM,
TRIM(STG.mbr_mid_init_nm) AS MID_INITIAL_NM,
PARSE_DATE('%Y-%m-%d',SUBSTR(STG.BIRTH_DT,0,10)) AS BIRTH_DT,
TRIM(STG.mbr_sltn_cd) AS SALUTATION_CD,
TRIM(STG.mbr_nm_sufx_cd) AS NAME_SUFFIX_CD,
TRIM(STG.mbr_gndr_cd) AS GENDER_CD,
TRIM(STG.DECEASED_IND) AS DECEASED_IND,
TRIM(STG.maritalstatus) AS MARITAL_STATUS_CD,
 STG.BILLING_ADDRESS_LINE1 AS BILLING_ADDRESS_LINE,
 
CASE WHEN STG.BILLING_ADDRESS_LINE1 IS NULL THEN STG.RESIDENTIAL_ADDRESS_LINE1 ELSE STG.BILLING_ADDRESS_LINE1 END AS BILLING_ADDRESS_LINE1,
CASE WHEN STG.BILLING_ADDRESS_LINE1 IS NULL THEN STG.RESIDENTIAL_ADDRESS_LINE2 ELSE STG.BILLING_ADDRESS_LINE2 END AS BILLING_ADDRESS_LINE2,
CASE WHEN STG.BILLING_ADDRESS_LINE1 IS NULL THEN STG.RESIDENTIAL_CITY ELSE STG.BILLING_CITY END AS BILLING_CITY,
CASE WHEN STG.BILLING_ADDRESS_LINE1 IS NULL THEN STG.RESIDENTIAL_STATE ELSE STG.BILLING_STATE END AS BILLING_STATE,

CASE WHEN STG.BILLING_ADDRESS_LINE1 IS NULL THEN (CASE WHEN LENGTH(REGEXP_REPLACE(STG.RESIDENTIAL_ZIP,'[^a-zA-Z0-9]','')) = 6 THEN STG.RESIDENTIAL_ZIP
      WHEN LENGTH(REGEXP_REPLACE(REGEXP_REPLACE(STG.RESIDENTIAL_ZIP,'[^a-zA-Z0-9]',''),'[^0-9]','')) < 5 THEN LPAD(REGEXP_REPLACE(REGEXP_REPLACE(STG.RESIDENTIAL_ZIP,'[^a-zA-Z0-9]',''),'[^0-9]',''),5,'0')
	  ELSE SUBSTR(REGEXP_REPLACE(REGEXP_REPLACE(STG.RESIDENTIAL_ZIP,'[^a-zA-Z0-9]',''),'[^0-9]',''),0,5) 	  END  )
	  ELSE (CASE WHEN LENGTH(REGEXP_REPLACE(STG.BILLING_ZIP,'[^a-zA-Z0-9]','')) = 6 THEN REGEXP_REPLACE(STG.BILLING_ZIP,'[^a-zA-Z0-9]','')
      WHEN LENGTH(REGEXP_REPLACE(REGEXP_REPLACE(STG.BILLING_ZIP,'[^a-zA-Z0-9]',''),'[^0-9]','')) < 5 THEN LPAD(REGEXP_REPLACE(REGEXP_REPLACE(STG.BILLING_ZIP,'[^a-zA-Z0-9]',''),'[^0-9]',''),5,'0')
	  ELSE SUBSTR(REGEXP_REPLACE(REGEXP_REPLACE(STG.BILLING_ZIP,'[^a-zA-Z0-9]',''),'[^0-9]',''),0,5) 	  END ) END AS BILLING_ZIP,


--CASE WHEN LENGTH(REGEXP_REPLACE(STG.BILLING_ZIP,'[^a-zA-Z0-9]','')) = 6 THEN REGEXP_REPLACE(STG.BILLING_ZIP,'[^a-zA-Z0-9]','')
--      WHEN LENGTH(REGEXP_REPLACE(REGEXP_REPLACE(STG.BILLING_ZIP,'[^a-zA-Z0-9]',''),'[^0-9]','')) < 5 THEN LPAD(REGEXP_REPLACE(REGEXP_REPLACE(STG.BILLING_ZIP,'[^a-zA-Z0-9]',''),'[^0-9]',''),5,'0')
--	  ELSE SUBSTR(REGEXP_REPLACE(REGEXP_REPLACE(STG.BILLING_ZIP,'[^a-zA-Z0-9]',''),'[^0-9]',''),0,5) 	  END AS BILLING_ZIP,
      
	  
--     CASE WHEN LENGTH(REGEXP_REPLACE(REGEXP_REPLACE(TRIM(STG.BILLING_ZIP_PLUS4),'[^a-zA-Z0-9]',''),'[^0-9]','')) >= 9 THEN SUBSTR(REGEXP_REPLACE(REGEXP_REPLACE(TRIM(STG.BILLING_ZIP_PLUS4),'[^a-zA-Z0-9]',''),'[^0-9]',''),6,4)
--	  ELSE NULL	  END AS BILLING_ZIP_PLUS4 ,
PARSE_DATE('%Y-%m-%d',SUBSTR(TRIM(STG.BILLING_ADDRESS_START_DT),0,10)) AS BILLING_ADDRESS_START_DT,
PARSE_DATE('%Y-%m-%d',SUBSTR(TRIM(STG.BILLING_ADDRESS_END_DT),0,10)) AS BILLING_ADDRESS_END_DT,
TRIM(STG.RESIDENTIAL_ADDRESS_LINE1) AS RESIDENTIAL_ADDRESS_LINE1,
TRIM(STG.RESIDENTIAL_ADDRESS_LINE2) AS RESIDENTIAL_ADDRESS_LINE2,
TRIM(STG.RESIDENTIAL_CITY) AS RESIDENTIAL_CITY,
TRIM(STG.RESIDENTIAL_STATE) AS RESIDENTIAL_STATE,
CASE WHEN LENGTH(REGEXP_REPLACE(STG.RESIDENTIAL_ZIP,'[^a-zA-Z0-9]','')) = 6 THEN STG.RESIDENTIAL_ZIP
      WHEN LENGTH(REGEXP_REPLACE(REGEXP_REPLACE(STG.RESIDENTIAL_ZIP,'[^a-zA-Z0-9]',''),'[^0-9]','')) < 5 THEN LPAD(REGEXP_REPLACE(REGEXP_REPLACE(STG.RESIDENTIAL_ZIP,'[^a-zA-Z0-9]',''),'[^0-9]',''),5,'0')
	  ELSE SUBSTR(REGEXP_REPLACE(REGEXP_REPLACE(STG.RESIDENTIAL_ZIP,'[^a-zA-Z0-9]',''),'[^0-9]',''),0,5) 	  END AS RESIDENTIAL_ZIP ,	  
-- CASE WHEN LENGTH(REGEXP_REPLACE(REGEXP_REPLACE(STG.RESIDENTIAL_ZIP_PLUS4,'[^a-zA-Z0-9]',''),'[^0-9]','')) >= 9 THEN SUBSTR(REGEXP_REPLACE(REGEXP_REPLACE(STG.RESIDENTIAL_ZIP_PLUS4,'[^a-zA-Z0-9]',''),'[^0-9]',''),6,4)
--	  ELSE NULL	  END AS RESIDENTIAL_ZIP_PLUS4 ,
PARSE_DATE('%Y-%m-%d',SUBSTR(STG.RESIDENTIAL_ADDRESS_START_DT,0,10)) AS RESIDENTIAL_ADDRESS_START_DT,
PARSE_DATE('%Y-%m-%d',SUBSTR(STG.RESIDENTIAL_ADDRESS_END_DT,0,10)) AS RESIDENTIAL_ADDRESS_END_DT,
TRIM(STG.TEMPORARY_ADDRESS_LINE1) AS TEMPORARY_ADDRESS_LINE1,
TRIM(STG.TEMPORARY_ADDRESS_LINE2) AS TEMPORARY_ADDRESS_LINE2,
TRIM(STG.TEMPORARY_CITY)  AS TEMPORARY_CITY,
TRIM(STG.TEMPORARY_STATE) AS TEMPORARY_STATE,


CASE WHEN LENGTH(REGEXP_REPLACE(TRIM(STG.TEMPORARY_ZIP),'[^a-zA-Z0-9]','')) = 6 THEN REGEXP_REPLACE(TRIM(STG.TEMPORARY_ZIP),'[^a-zA-Z0-9]','')
      WHEN LENGTH(REGEXP_REPLACE(REGEXP_REPLACE(TRIM(STG.TEMPORARY_ZIP),'[^a-zA-Z0-9]',''),'[^0-9]','')) < 5 THEN LPAD(REGEXP_REPLACE(REGEXP_REPLACE(TRIM(STG.TEMPORARY_ZIP),'[^a-zA-Z0-9]',''),'[^0-9]',''),5,'0')
	  ELSE SUBSTR(REGEXP_REPLACE(REGEXP_REPLACE(TRIM(STG.TEMPORARY_ZIP),'[^a-zA-Z0-9]',''),'[^0-9]',''),0,5) END AS TEMPORARY_ZIP ,

PARSE_DATE('%Y-%m-%d',SUBSTR(STG.TEMPORARY_ADDRESS_START_DT,0,10)) AS TEMPORARY_ADDRESS_START_DT,
PARSE_DATE('%Y-%m-%d',SUBSTR(STG.TEMPORARY_ADDRESS_END_DT,0,10)) AS TEMPORARY_ADDRESS_END_DT,
PARSE_DATE('%Y-%m-%d',SUBSTR(STG.EMAIL_UPDATE_DT,0,10)) AS EMAIL_UPDATE_DT,
TRIM(STG.EMAIL_ADDRESS) AS EMAIL_ADDRESS,
TRIM(STG.HOME_PHONE_NUM) AS HOME_PHONE_NUM,
TRIM(STG.WORK_PHONE_NUM) AS WORK_PHONE_NUM,
TRIM(STG.MOBILE_PHONE_NUM) AS MOBILE_PHONE_NUM,
PARSE_DATE('%Y-%m-%d',STG.MBRS_UPDATE_DT) AS EFFECTIVE_START_DT,
PARSE_DATE('%Y-%m-%d','9999-12-31') AS EFFECTIVE_END_DT,
 "jobrunid" AS JOB_RUN_ID,
'CONNECT SUITE' as SOURCE_SYSTEM_CD,
 CURRENT_DATETIME() AS UPDATE_DTTIME,
'Y' as ACTIVE_FLG,
STG.MD5_VALUE AS MD5_VALUE
from LANDING.WORK_CS_MEMBERSHIP_CUSTOMER_DIM_MD5 STG)B)A

LEFT OUTER JOIN 
  (SELECT * FROM (SELECT * ,ROW_NUMBER() OVER ( PARTITION BY  SOURCE_KEY1) RN   FROM  CUSTOMER_PRODUCT.MDM_CUSTOMER_BRIDGE WHERE SOURCE_SYSTEM_CD='MEMBERSHIP' )  WHERE RN=1 )  MDM 
  ON  CAST(MDM.SOURCE_KEY1 AS INT64)=CAST(TRIM(A.MEMBER_NUM) AS INT64) 
   WHERE
        ( NOT EXISTS (
          SELECT
            1
          FROM
            `CUSTOMERS.MEMBERSHIP_CUSTOMER_DIM` B
          WHERE
            B.MEMBER_NUM=A.MEMBER_NUM
            AND ACTIVE_FLG = "Y")
          OR ( EXISTS (
            SELECT
              1
            FROM
              `CUSTOMERS.MEMBERSHIP_CUSTOMER_DIM` D
            WHERE
              D.MEMBER_NUM=A.MEMBER_NUM
              AND ACTIVE_FLG = "Y")
            AND NOT EXISTS (
            SELECT
              1
            FROM
              `CUSTOMERS.MEMBERSHIP_CUSTOMER_DIM` C
            WHERE
               TO_BASE64(C.MD5_VALUE)=TO_BASE64(A.MD5_VALUE)
              AND ACTIVE_FLG = "Y" ) ) )
