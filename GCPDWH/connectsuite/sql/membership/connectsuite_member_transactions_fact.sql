INSERT INTO  CUSTOMER_PRODUCT.CONNECTSUITE_MEMBER_TRANSACTIONS_FACT (

 SOURCE_TRANSACTION_ID,
  TRANSACTION_EFFECTIVE_DT,
  TRANSACTION_DT,
  TRANSACTION_DTTIME,
  TERM_EXPIRATION_DT,
  MEMBERSHIP_NUM,
  MEMBER_NUM,
  MEMBERSHIP_KEY,
  MEMBER_KEY,
  MEMBER_ROLE_CD,
  MEMBERSHIP_LEVEL,
  MEMBERSHIP_LEVEL_DESC,
  ASSOCIATE_ID,
  SOURCE_TRANSACTION_TYPE,
  TRANSACTION_TYPE_CD,
  SOLICITATION_CD,
  SOLICITATION_DESC,
  LOCATION_ID,
  STATE_CD,
  COMMISSION_CD,
  COMMISSION_DESC,
  SUBCATEGORY_CD,
  TRANSACTION_TOTAL_COST_AMT,
  TRANSACTION_CREDIT_AMT,
  TRANSACTION_DUE_AMT,
  PROCESSED_EMPLOYEE_ID,
  COMPENSATION_EMPLOYEE_ID,
  SELLING_LOCATION_ID,
  REVENUE_LOCATION_ID,
  PROCESSED_LOCATION_ID,
  DERIVED_SELLING_LOCATION_ID,
  SALES_CHANNEL,
  RESIDENTIAL_ZIP_CD,
  PAYMENT_CHANNEL,
  COST_KEY,
  SOURCE_BRANCH_KEY,
  TRANSFER_IN_IND,
  MAQ_IND,
  JOB_RUN_ID,
  SOURCE_SYSTEM_CD,
  UPDATE_DTTIME,
  SOURCE_SALES_AGENT_KEY, 
  SOURCE_EVENT_USER_ID ,
  CUSTOMER_MDM_KEY,
  SECONDARY_SALES_AGENT_KEY,
  MEMBERSHIP_BRANCH_KEY,
USER_BRANCH_CD,
PREVIOUS_TRANSFER_IN_IND,
RENEW_COUNT,
ACCOUNTS_RECEIVABLE_IND,
PRORATE_IND,
COMMISSIONABLE_IND,
RENEW_FROM_DROP_IND,
FREE_ASSOCIATE_IND

  
  
  )


SELECT DISTINCT 
  SOURCE_TRANSACTION_ID,
  TRANSACTION_EFFECTIVE_DT,
  EXTRACT(DATE FROM SAFE_CAST(TRANSACTION_DT AS DATETIME)) AS TRANSACTION_DT,
  TRANSACTION_DTTIME,
  TERM_EXPIRATION_DT,
  MEMBERSHIP_NUM,
  MEMBER_NUM,
  MEMBERSHIP_KEY,
  MEMBER_KEY,
  MEMBER_ROLE_CD,
  MEMBERSHIP_LEVEL,
  MEMBERSHIP_LEVEL_DESC,
  ASSOCIATE_ID,
  SOURCE_TRANSACTION_TYPE,
  TRANSACTION_TYPE_CD,
  SOLICITATION_CD,
  SOLICITATION_DESC,
  LOCATION_ID,
  STATE_CD,
  COMMISSION_CD,
  COMMISSION_DESC,
  SUBCATEGORY_CD,
  TRANSACTION_COST,
  TRANSACTION_CREDIT_AMT,
  TRANSACTION_DUE_AMT,
  PROCESSED_EMPLOYEE_ID,
  COMPENSATION_EMPLOYEE_ID,
  SELLING_LOCATION_ID,
  REVENUE_LOCATION_ID,
  PROCESSED_LOCATION_ID,
  DERIVED_SELLING_LOCATION_ID,
  SALES_CHANNEL,
  RESIDENTIAL_ZIP_CD,
  PAYMENT_CHANNEL,
  COST_KEY,
  SOURCE_BRANCH_KEY,
  TRANSFER_IN_IND,
  MAQ_IND,
  JOB_RUN_ID,
  SOURCE_SYSTEM_CD,
  UPDATE_DTTIME,
  SOURCE_SALES_AGENT_KEY, 
  SOURCE_EVENT_USER_ID  ,
  CUSTOMER_MDM_KEY,
  SECONDARY_SALES_AGENT_KEY,
    MEMBERSHIP_BRANCH_KEY,
USER_BRANCH_CD,
PREVIOUS_TRANSFER_IN_IND,
RENEW_COUNT,
ACCOUNTS_RECEIVABLE_IND,
PRORATE_IND,
COMMISSIONABLE_IND,
RENEW_FROM_DROP_IND,
FREE_ASSOCIATE_IND

FROM (
  SELECT
    TRIM(STG.SOURCE_TRANSACTION_ID) AS SOURCE_TRANSACTION_ID,
    DATE(PARSE_DATETIME('%Y-%m-%d %T',
        TRIM(TRANSACTION_EFFECTIVE_DT))) AS TRANSACTION_EFFECTIVE_DT,
    TRIM(STG.TRANSACTION_DTTIME) AS TRANSACTION_DT,
  PARSE_DATETIME('%Y-%m-%d %T',
    TRANSACTION_EFFECTIVE_DT) AS TRANSACTION_DTTIME,
  DATE(PARSE_DATETIME('%Y-%m-%d %T',
      TRIM(STG.TERM_EXPIRATION_DT))) AS TERM_EXPIRATION_DT,
  TRIM(STG.MEMBERSHIP_NUM) AS MEMBERSHIP_NUM,
  TRIM(DIM.MEMBER_NUM) AS MEMBER_NUM,
  DIM.MEMBERSHIP_KEY AS MEMBERSHIP_KEY,
  TRIM(DIM.MEMBER_KEY) AS MEMBER_KEY,
  TRIM(DIM.ROLE_CD) AS MEMBER_ROLE_CD,
  PD.PRODUCT_CD_DESC AS MEMBERSHIP_LEVEL_DESC,
  TRIM(STG.COMPONENT_CD) AS MEMBERSHIP_LEVEL,
  CAST(TRIM(STG.ASSOCIATE_ID) AS INT64) AS ASSOCIATE_ID,
  TRIM(STG.SOURCE_TRANSACTION_TYPE) AS SOURCE_TRANSACTION_TYPE,
  TRIM(STG.TRANSACTION_TYPE_CD) AS TRANSACTION_TYPE_CD,
  TRIM(STG.SOLICITATION_CD) AS SOLICITATION_CD,
  TRIM(STG.SOLICITATION_DESC) AS SOLICITATION_DESC,
  TRIM(LD.LOCATION_ID) AS LOCATION_ID,
  UPPER(TRIM(LD.STATE_CD)) AS STATE_CD,
  TRIM(STG.COMMISSION_CD) AS COMMISSION_CD,
  TRIM(STG.COMMISSION_DESC) AS COMMISSION_DESC,
  TRIM(STG.SUBCATEGORY_CD) AS SUBCATEGORY_CD,
  SAFE_CAST(TRIM(STG.TRANSACTION_TOTAL_COST_AMT) AS FLOAT64) AS TRANSACTION_COST,
  SAFE_CAST(TRIM(STG.TRANSACTION_CREDIT_AMT) AS FLOAT64) AS TRANSACTION_CREDIT_AMT,
  SAFE_CAST(TRIM(STG.TRANSACTION_DUE_AMT) AS FLOAT64) AS TRANSACTION_DUE_AMT,
  TRIM(STG.PROCESSED_EMPLOYEE_ID) AS PROCESSED_EMPLOYEE_ID,
  TRIM(STG.COMPENSATION_EMPLOYEE_ID) AS COMPENSATION_EMPLOYEE_ID,
  COALESCE(TRIM(ED.LOCATION_ID),
    TRIM(ED1.LOCATION_ID))AS SELLING_LOCATION_ID,
  TRIM(LZD.LOCATION_ID) AS REVENUE_LOCATION_ID,
  COALESCE(TRIM(ED2.LOCATION_ID),
    TRIM(ED3.LOCATION_ID)) AS PROCESSED_LOCATION_ID,
  COALESCE(COALESCE(TRIM(ED.LOCATION_ID),
      TRIM(ED1.LOCATION_ID)),
    COALESCE(TRIM(ED2.LOCATION_ID),
      TRIM(ED3.LOCATION_ID)) ) AS DERIVED_SELLING_LOCATION_ID,
  CASE WHEN PROCESSED_EMPLOYEE_ID = 'ONLINEJOIN' THEN 'Internet'
       ELSE TRIM(LD.CHANNEL_NM) END  AS SALES_CHANNEL,
  TRIM(DIM.RESIDENTIAL_ZIP_CD) AS RESIDENTIAL_ZIP_CD,
  CASE
    WHEN UPPER(MP.OFFICE_CD) = 'WEB' THEN 'WEB'
    WHEN UPPER(MP.MEMBERSHIP_PAYMENT_SRC_CD)='AR' THEN 'AUTO RENEWAL'
    WHEN UPPER(MP.MEMBERSHIP_PAYMENT_SRC_CD) IN ('ME',  'PE',  'EX') THEN 'BRANCH'
    ELSE CASE
    WHEN UPPER(SUBSTR(MP.MEMBERSHIP_PAYMENT_CHK_NUM,1,3))='NAT' THEN 'NATIONAL'
    WHEN UPPER(SUBSTR(MP.MEMBERSHIP_PAYMENT_CHK_NUM,1,3))='OTC' THEN 'ORDER TO CASH'
    WHEN UPPER(SUBSTR(MP.MEMBERSHIP_PAYMENT_CHK_NUM,1,2))='LB' THEN 'LOCK BOX'
    WHEN UPPER(SUBSTR(MP.MEMBERSHIP_PAYMENT_CHK_NUM,1,2))='IE' THEN 'INSURANCE GROUP'
    WHEN UPPER(SUBSTR(MP.MEMBERSHIP_PAYMENT_CHK_NUM,1,2))='HB' THEN 'HOME BANKING'
    ELSE 'NONE'
  END END AS PAYMENT_CHANNEL,
  TRIM(STG.COST_KEY) AS COST_KEY,
  TRIM(STG.BRN_KY) AS SOURCE_BRANCH_KEY,
  TRIM(STG.TRANSFER_IN_IND) AS TRANSFER_IN_IND,
  MI.MAQ_INDICATOR_FINAL AS MAQ_IND,
  "jobrunid" AS JOB_RUN_ID,
  "CONNECT SUITE" AS SOURCE_SYSTEM_CD,
  CURRENT_DATETIME() AS UPDATE_DTTIME,
  TRIM(STG.DLY_PRI_SAGT_KY) AS SOURCE_SALES_AGENT_KEY, 
  TRIM(STG.PROCESSED_EMPLOYEE_ID) AS SOURCE_EVENT_USER_ID ,
  DIM.CUSTOMER_MDM_KEY,
 SAFE_CAST(STG.SECONDARY_SALES_AGENT_KEY AS INT64) AS SECONDARY_SALES_AGENT_KEY ,
 SAFE_CAST(STG.MEMBERSHIP_BRANCH_KEY AS INT64) AS MEMBERSHIP_BRANCH_KEY,
STG.USER_BRANCH_CD,
STG.PREVIOUS_TRANSFER_IN_IND,
SAFE_CAST(STG.RENEW_COUNT AS INT64) AS RENEW_COUNT,
STG.ACCOUNTS_RECEIVABLE_IND,
STG.PRORATE_IND,
STG.COMMISSIONABLE_IND,
STG.RENEW_FROM_DROP_IND,
STG.FREE_ASSOCIATE_IND

FROM
  LANDING.WORK_CS_MEMBER_TRANSACTIONS_FACT STG
LEFT OUTER JOIN
  CUSTOMER_PRODUCT.CONNECTSUITE_MEMBER_DIM DIM
ON
  (TRIM(STG.MEMBERSHIP_NUM) = TRIM(DIM.MEMBERSHIP_NUM)
    AND TRIM(STG.ASSOCIATE_ID) = TRIM(CAST(DIM.ASSOCIATE_ID AS STRING)))
  AND DIM.ACTIVE_FLG = 'Y'
LEFT OUTER JOIN
  CUSTOMER_PRODUCT.LOCATION_DIM LD
ON
  TRIM(STG.BRN_KY) = SAFE_CAST(LD.CS_M_BRANCH_KEY AS STRING)
  AND LD.ACTIVE_FLG = 'Y'
--LEFT OUTER JOIN
--  REFERENCE.STATE_LOOKUP SL
--ON
--  UPPER(TRIM(SL.STATE)) = UPPER(TRIM(LD.STATE_CD))
LEFT OUTER JOIN
  CUSTOMER_PRODUCT.EMPLOYEE_DIM ED
ON
  ED.EMPLOYEE_ID = TRIM(STG.COMPENSATION_EMPLOYEE_ID)
  AND EXTRACT(DATE
  FROM
    PARSE_DATETIME('%Y-%m-%d %T',
      TRIM(STG.TRANSACTION_DTTIME))) BETWEEN ED.ROW_START_DT
  AND ED.ROW_END_DT
LEFT OUTER JOIN
  CUSTOMER_PRODUCT.EMPLOYEE_DIM ED1
ON
  CAST(ED1.ENT_ID AS STRING) = RTRIM(LTRIM(STG.COMPENSATION_EMPLOYEE_ID))
  AND EXTRACT(DATE
  FROM
    PARSE_DATETIME('%Y-%m-%d %T',
      TRIM(STG.TRANSACTION_DTTIME))) BETWEEN ED1.ROW_START_DT
  AND ED1.ROW_END_DT
LEFT OUTER JOIN
  CUSTOMER_PRODUCT.EMPLOYEE_DIM ED2
ON
  TRIM(STG.PROCESSED_EMPLOYEE_ID) = ED2.EMPLOYEE_ID
  AND EXTRACT(DATE
  FROM
    PARSE_DATETIME('%Y-%m-%d %T',
      TRIM(STG.TRANSACTION_DTTIME))) BETWEEN ED2.ROW_START_DT
  AND ED2.ROW_END_DT
LEFT OUTER JOIN
  CUSTOMER_PRODUCT.EMPLOYEE_DIM ED3
ON
  TRIM(STG.PROCESSED_EMPLOYEE_ID) = ED3.ENT_ID
  AND EXTRACT(DATE
  FROM
    PARSE_DATETIME('%Y-%m-%d %T',
      TRIM(STG.TRANSACTION_DTTIME))) BETWEEN ED3.ROW_START_DT
  AND ED3.ROW_END_DT
LEFT OUTER JOIN
  CUSTOMER_PRODUCT.LOCATION_ZIP_DIM LZD
ON
  TRIM(DIM.RESIDENTIAL_ZIP_CD) = LZD.ZIP_CD
LEFT OUTER JOIN
  CUSTOMER_PRODUCT.LOCATION_DIM LD2
ON
  LD2.LOCATION_ID =
  CASE
    WHEN COALESCE(ED.EMPLOYEE_ID,  ED1.EMPLOYEE_ID) IS NULL THEN COALESCE(ED2.LOCATION_ID,  ED3.LOCATION_ID)
    ELSE COALESCE(ED.LOCATION_ID,
    ED1.EMPLOYEE_ID)
  END AND LD2.ACTIVE_FLG = 'Y'
LEFT OUTER JOIN (
  SELECT
    *
  FROM (
    SELECT
      CMP.OFFICE_CD,
      CMP.MEMBERSHIP_PAYMENT_SRC_CD,
      CMP.MEMBERSHIP_PAYMENT_CHK_NUM,
      CMP.MEMBERSHIP_KEY,
      ROW_NUMBER() OVER (PARTITION BY CMP.MEMBERSHIP_KEY ORDER BY CMP.MEMBERSHIP_PAYMENT_DTTIME DESC) RN
    FROM
      OPERATIONAL.CONNECTSUITE_MEMBERSHIP_PAYMENT CMP
    INNER JOIN
      OPERATIONAL.CONNECTSUITE_JOURNAL_ENTRY CJE
    ON
      CJE.MEMBERSHIP_PAYMENT_KEY = CMP.MEMBERSHIP_PAYMENT_KEY
      AND CJE.MEMBERSHIP_COST_KEY>0) MP
  WHERE
    MP.RN=1) MP
ON
  --TRIM(DIM.MEMBERSHIP_KEY) = SAFE_CAST(MP.MEMBERSHIP_KEY AS STRING)
  DIM.MEMBERSHIP_KEY = MP.MEMBERSHIP_KEY
LEFT OUTER JOIN
  LANDING.MAQ_INDICATOR MI
ON
  MI.SOURCE_TRANSACTION_ID = STG.SOURCE_TRANSACTION_ID
LEFT OUTER JOIN
  REFERENCE.CONNECTSUITE_PRODUCT_DIM PD
ON
  PD.PRODUCT_CD = TRIM(STG.COMPONENT_CD)
  AND PD.CS_MODULE = 'M'
WHERE
  STG.SOURCE_TRANSACTION_ID NOT IN (
  SELECT
    DISTINCT CAST(SOURCE_TRANSACTION_ID AS STRING)
  FROM
    CUSTOMER_PRODUCT.CONNECTSUITE_MEMBER_TRANSACTIONS_FACT )
    )