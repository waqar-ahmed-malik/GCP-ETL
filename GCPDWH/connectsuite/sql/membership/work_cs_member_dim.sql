SELECT
  TRIM(CONVERT(CHAR,
      DATA.MBR_KY)) AS MEMBER_KEY,
  TRIM(CONVERT(CHAR,
      DATA.MBRS_ID)) AS MEMBER_NUM,
  TRIM(CONVERT(CHAR,
      MBR_ASSOC_ID)) AS ASSOCIATE_ID,
  TRIM(CONVERT(CHAR,
      MBR_JN_AAA_DT)) AS AAA_JOIN_DT,
  TRIM(CONVERT(CHAR,
      MBR_JN_CLB_DT)) AS CLUB_JOIN_DT,
  TRIM(CONVERT(CHAR,
      MBR_BRTH_DT)) AS MBR_BRTH_DT,
  TRIM(CONVERT(CHAR,
      MBR_DUP_CRD_CT)) AS DUP_CARD_CNT,
  TRIM(CONVERT(CHAR,
      MBR_MID_INIT_NM)) AS MBR_MID_INIT_NM,
  TRIM(CONVERT(CHAR,
      MBR_LST_NM)) AS MBR_LST_NM,
  TRIM(CONVERT(CHAR,
      MBR_FST_NM)) AS MBR_FST_NM,
  TRIM(CONVERT(CHAR,
      MBR_NM_SUFX_CD)) AS MBR_NM_SUFX_CD,
  TRIM(CONVERT(CHAR,
      MBR_GNDR_CD)) AS MBR_GNDR_CD,
  TRIM(CONVERT(CHAR,
      MBR_STS_DSC_CD)) AS MBR_STS_DSC_CD,
  TRIM(CONVERT(CHAR,
      MBR_STS_CD)) AS MBR_STS_CD,
  TRIM(CONVERT(CHAR,
      MBR_SLTN_CD)) AS MBR_SLTN_CD,
  TRIM(CONVERT(CHAR,
      MBR_RELAT_CD)) AS MBR_RELAT_CD,
  TRIM(CONVERT(CHAR,
      MBR_RSN_JOIN_CD)) AS MBR_RSN_JOIN_CD,
  TRIM(CONVERT(CHAR,
      MBR_PREV_CLUB_CD)) AS MBR_PREV_CLUB_CD,
  TRIM(CONVERT(CHAR,
      MBR_PREV_MBRS_ID)) AS MBR_PREV_MBRS_ID,
  TRIM(CONVERT(CHAR,
      MBR_DO_NOT_REN_IN)) AS MBR_DO_NOT_REN_IN,
  TRIM(CONVERT(CHAR,
      MBR_SLCT_CD)) AS MBR_SLCT_CD,
  TRIM(CONVERT(CHAR,
      MBR_SRC_SLS_CD)) AS MBR_SRC_SLS_CD,
  TRIM(CONVERT(CHAR,
      MBR_CANC_DT)) AS MBR_CANC_DT,
  TRIM(CONVERT(CHAR,
      MBR_COMM_CD)) AS MBR_COMM_CD,
  TRIM(CONVERT(CHAR,
      COMPENSATION_EMPLOYEE_ID)) AS COMPENSATION_EMPLOYEE_ID,
  TRIM(CONVERT(CHAR,
      DATA.MBRS_KY)) AS MBRS_KY,
  TRIM(CONVERT(CHAR,
      MBRSHIP.MBRS_REINST_DT,
      120)) AS MBRS_REINST_DT,
  CONVERT(CHAR,
    CASE
      WHEN DATEDIFF(DAY, MBRSHIP1.MBRS_CURR_EFFECT_DT,  MBRSHIP1.MBRS_EXPIR_DT) IN (1,  0,  -1) THEN DATEADD (month,  -12,  MBRSHIP1.MBRS_EXPIR_DT)
      ELSE MBRSHIP1.MBRS_CURR_EFFECT_DT END,
    120) AS TERM_EFFECTIVE_DT,
  CONVERT(CHAR,
    MBRSHIP1.MBRS_EXPIR_DT,
    120) AS TERM_EXPIRATION_DT,
  TRIM(CONVERT(CHAR,
      MBR_TYP_CD)) AS MBR_TYP_CD,
  TRIM(CONVERT(CHAR,
      MBR_PAID_BY_CD)) AS MBR_PAID_BY_CD,
  TRIM(CONVERT(CHAR,
      MBR_FREE_ASSOC_IN)) AS MBR_FREE_ASSOC_IN,
  TRIM(CONVERT(CHAR,
      MBR_DUPCD_REQ_DT)) AS MBR_DUPCD_REQ_DT,
  TRIM(CONVERT(CHAR,
      SECONDARY_COMPENSATE_EMPLOYEE_ID)) AS SECONDARY_COMPENSATE_EMPLOYEE_ID,
  TRIM(CONVERT(CHAR,
      MBR_DUP_STCK_CT)) AS MBR_DUP_STCK_CT,
  TRIM(CONVERT(CHAR,
      MBR_DUPSTCK_REQ_DT)) AS MBR_DUPSTCK_REQ_DT,     
  TRIM(CONVERT(CHAR,
      LOWER(EMAIL_ADD.EMAIL_ADDR),60)) AS EMAIL_ADDRESS,    
 TRIM(CONVERT(CHAR,
      EMAIL_ADD.EMAIL_UPDT_DT,
      120)) AS EMAIL_UPDATE_DT,
      TRIM(CONVERT(CHAR,COALESCE(
      BILLING.MADR_BSC_AD,RESIDENTIAL.MADR_BSC_AD),70)) AS BILLING_ADDRESS_LINE1,
  TRIM(CONVERT(CHAR,
     COALESCE(BILLING.MADR_SUPL_AD,RESIDENTIAL.MADR_SUPL_AD),70)) AS BILLING_ADDRESS_LINE2,
  TRIM(CONVERT(CHAR,
      COALESCE(BILLING.MADR_CTY_NM,RESIDENTIAL.MADR_CTY_NM),50)) AS BILLING_CITY,
  TRIM(CONVERT(CHAR,COALESCE(
      BILLING.MADR_ST_PROV_CD,RESIDENTIAL.MADR_ST_PROV_CD))) AS BILLING_STATE,	  
  TRIM(CONVERT(CHAR,BILLING.MADR_ZIP_CD)) AS BILLING_ZIP,
  REPLACE(TRIM(BILLING.BILLING_ZIP_PLUS4),'[0-9]','') AS BILLING_ZIP_PLUS4,
  TRIM(CONVERT(CHAR,
      BILLING.MADR_STRT_DT,
      120)) AS BILLING_ADDRESS_START_DT,
  TRIM(CONVERT(CHAR,
      BILLING.MADR_END_DT,
      120)) AS BILLING_ADDRESS_END_DT,
  TRIM(CONVERT(CHAR,
      RESIDENTIAL.MADR_BSC_AD,70)) AS RESIDENTIAL_ADDRESS_LINE1,
  TRIM(CONVERT(CHAR,
      RESIDENTIAL.MADR_SUPL_AD,70)) AS RESIDENTIAL_ADDRESS_LINE2,
  TRIM(CONVERT(CHAR,
      RESIDENTIAL.MADR_CTY_NM,50)) AS RESIDENTIAL_CITY,
  TRIM(CONVERT(CHAR,
      RESIDENTIAL.MADR_ST_PROV_CD)) AS RESIDENTIAL_STATE,
  TRIM(CONVERT(CHAR,RESIDENTIAL.MADR_ZIP_CD)) AS RESIDENTIAL_ZIP, 
  RESIDENTIAL.RESIDENTIAL_ZIP_PLUS4 AS  RESIDENTIAL_ZIP_PLUS4,
  TRIM(CONVERT(CHAR,
      RESIDENTIAL.MADR_STRT_DT,
      120)) AS RESIDENTIAL_ADDRESS_START_DT,
  TRIM(CONVERT(CHAR,
      RESIDENTIAL.MADR_END_DT,
      120)) AS RESIDENTIAL_ADDRESS_END_DT,
  TRIM(CONVERT(CHAR,
      TEMPORARY.MADR_BSC_AD,70)) AS TEMPORARY_ADDRESS_LINE1,
  TRIM(CONVERT(CHAR,
      TEMPORARY.MADR_SUPL_AD,70)) AS TEMPORARY_ADDRESS_LINE2,
  TRIM(CONVERT(CHAR,
      TEMPORARY.MADR_CTY_NM,50)) AS TEMPORARY_CITY,
  TRIM(CONVERT(CHAR,
      TEMPORARY.MADR_ST_PROV_CD)) AS TEMPORARY_STATE,
  TRIM(CONVERT(CHAR,
      TEMPORARY.MADR_ZIP_CD)) AS TEMPORARY_ZIP,
  TRIM(CONVERT(CHAR,
      TEMPORARY.TEMPORARY_ZIP_PLUS4)) AS TEMPORARY_ZIP_PLUS4,
  TRIM(CONVERT(CHAR,
      TEMPORARY.MADR_STRT_DT,
      120)) AS TEMPORARY_ADDRESS_START_DT,
  TRIM(CONVERT(CHAR,
      TEMPORARY.MADR_END_DT,
      120)) AS TEMPORARY_ADDRESS_END_DT,
  TRIM(CONVERT(CHAR,
      HOME_PHN.HOME_PHONE_NUM)) AS HOME_PHONE_NUM,
  TRIM(CONVERT(CHAR,
      WORK_PHN.WORK_PHONE_NUM)) AS WORK_PHONE_NUM,
  TRIM(CONVERT(CHAR,
      MOBILE_PHN.MOBILE_PHONE_NUM)) AS MOBILE_PHONE_NUM,    
  TRIM(CONVERT(CHAR,
      CUST.CUSTOMERID)) AS CUSTOMERID,    
  TRIM(CONVERT(CHAR,
      CUST.MARITALSTATUS)) AS MARITALSTATUS,         
  TRIM(CONVERT(CHAR,
      MBR_BIL_CAT_CD)) AS MBR_BIL_CAT_CD,
  TRIM(CONVERT(CHAR,
      MBR_ACTV_DT)) AS MBR_ACTV_DT,
  TRIM(CONVERT(CHAR,
      MBR_ERS_USAGE_YR1)) AS MBR_ERS_USAGE_YR1,
  TRIM(CONVERT(CHAR,
      MBR_ERS_USAGE_YR2)) AS MBR_ERS_USAGE_YR2,
  TRIM(CONVERT(CHAR,
      MBR_ERS_USAGE_YR3)) AS MBR_ERS_USAGE_YR3,
  TRIM(CONVERT(CHAR,
      MBR_PREV_STS_DSC_CD)) AS MBR_PREV_STS_DSC_CD,
  TRIM(CONVERT(CHAR,
      MBR_REINST_PRNT_CRD_IN)) AS MBR_REINST_PRNT_CRD_IN,
  TRIM(CONVERT(CHAR,
      DUP_CARD_REASON)) AS DUP_CARD_REASON,
  TRIM(CONVERT(CHAR,
      MBR_DO_NOT_REN_RSN)) AS MBR_DO_NOT_REN_RSN,
  TRIM(CONVERT(CHAR,
      MBR_CARD_NAME)) AS MBR_CARD_NAME,
  TRIM(CONVERT(CHAR,
      MBR_LANGUAGE)) AS MBR_LANGUAGE,
  TRIM(CONVERT(CHAR,
      CARD_REQT_SKIP_DT)) AS CARD_REQT_SKIP_DT,
  TRIM(CONVERT(CHAR,
      MBR_EFF_DT)) AS MBR_EFF_DT,
  TRIM(CONVERT(CHAR,
      MBR_PREV_COMM_CD)) AS MBR_PREV_COMM_CD,
  TRIM(CONVERT(CHAR,
      MBR_DNR_EXPIR_DT)) AS MBR_DNR_EXPIR_DT,
  TRIM(CONVERT(CHAR,
      MBR_MITA_PENDING)) AS MBR_MITA_PENDING,
  TRIM(CONVERT(CHAR,
      MBR_ADD_DT)) AS MBR_ADD_DT,
  TRIM(CONVERT(CHAR,
      MBR_RENEW_CT)) AS MBR_RENEW_CT,
  TRIM(CONVERT(CHAR,
      MBR_REINST_DT)) AS MBR_REINST_DT,
  TRIM(CONVERT(CHAR,
      CARD_REQT_SKIP_REASON)) AS CARD_REQT_SKIP_REASON,
  TRIM(CONVERT(CHAR,
      MBR_EXPIR_DT)) AS MBR_EXPIR_DT,
  TRIM(CONVERT(CHAR,
      PREF_METH_COUNT)) AS PREF_METH_COUNT,
  TRIM(CONVERT(CHAR,
      MEMBERSHIP_LEVEL)) AS MEMBERSHIP_LEVEL,
  TRIM(CONVERT(CHAR,
      ACTIVE_MILITARY_IND)) AS ACTIVE_MILITARY_IND,
  TRIM(CONVERT(CHAR,
      BOARD_MEMBER_IND)) AS BOARD_MEMBER_IND,
  TRIM(CONVERT(CHAR,
      VIA_MAGAZINE_PREFERRED_IND)) AS VIA_MAGAZINE_PREFERRED_IND,
  TRIM(CONVERT(CHAR,
      EMPLOYEE_IND)) AS EMPLOYEE_IND,
  TRIM(CONVERT(CHAR,
      EMPLOYEE_ID_OF_MEMBER)) AS EMPLOYEE_ID_OF_MEMBER,
  TRIM(CONVERT(CHAR,
      SPRN_IND)) AS SPRN_IND,
  TRIM(CONVERT(CHAR,
      HONORARY_MEMBER_IND)) AS HONORARY_MEMBER_IND,
  TRIM(CONVERT(CHAR,
      COURTESY_MEMBER_IND)) AS COURTESY_MEMBER_IND,
  TRIM(CONVERT(CHAR,
      SERVICE_PROVIDER_IND)) AS SERVICE_PROVIDER_IND,
  TRIM(CONVERT(CHAR,
      MEMBER_SINCE)) AS MEMBER_SINCE,
  TRIM(CONVERT(CHAR,
      UTAH_50_YEAR_IND)) AS UTAH_50_YEAR_IND,
  TRIM(CONVERT(CHAR,
      SPRINT_ENROLL_DT,
      120)) AS SPRINT_ENROLL_DT,
  CONVERT(CHAR,
      MIF_ELIGIBLE_CNT)AS MIF_ELIGIBLE_CNT,
  TRIM(CONVERT(CHAR,
      CORPORATE_GROUP_TYPE))AS CORPORATE_GROUP_TYPE,
  NULL AS MD5_VALUE,
  TRIM(CONVERT(CHAR,
      MBRS_UPDATE_DT)) AS MBRS_UPDATE_DT,
  -------------------------------    
   CASE
   WHEN SP_DE.MBR_KY IS NOT NULL THEN 'Y'
   ELSE 'N'
    END AS DECEASED_IND  
FROM (
  SELECT
    MBR.MBR_KY,
    MBR.MBRS_ID,
    MBR.MBR_ASSOC_ID,
    CONVERT(CHAR,
      MBR.MBR_JN_AAA_DT,
      120) AS MBR_JN_AAA_DT,
    CONVERT(CHAR,
      MBR.MBR_JN_CLB_DT,
      120) AS MBR_JN_CLB_DT,
    CONVERT(CHAR,
      MBR.MBR_BRTH_DT,
      120) AS MBR_BRTH_DT,
    TRIM(CONVERT(CHAR,
      MBR.MBR_CARD_NAME,60)) AS CARD_NAME,
    CONVERT(CHAR,
      MBR.MBR_DUP_CRD_CT) AS MBR_DUP_CRD_CT,
    MBR.MBR_MID_INIT_NM,
    MBR.MBR_LST_NM,
    MBR.MBR_FST_NM,
    MBR.MBR_NM_SUFX_CD,  
    CASE WHEN TRIM(CONVERT(CHAR,UPPER(MBR.MBR_GNDR_CD)))  IS NULL 
    THEN 'U' ELSE TRIM(CONVERT(CHAR,UPPER(MBR.MBR_GNDR_CD))) END AS MBR_GNDR_CD,
    --MBR.MBR_GNDR_CD,
    MBR.MBR_STS_DSC_CD,
    MBR.MBR_STS_CD,
    MBR.MBR_SLTN_CD,
    MBR.MBR_RELAT_CD,
    MBR.MBR_RSN_JOIN_CD,
    MBR.MBR_PREV_CLUB_CD,
    MBR.MBR_PREV_MBRS_ID,
    MBR.MBR_DO_NOT_REN_IN,
    MBR.MBR_SLCT_CD,
    MBR.MBR_SRC_SLS_CD,
    CONVERT(CHAR,
      MBR.MBR_CANC_DT,
      120) AS MBR_CANC_DT,
    MBR.MBR_COMM_CD,
    SA.EMPLOYEE_ID AS COMPENSATION_EMPLOYEE_ID,
    MBR.MBRS_KY,
    MBR.MBR_TYP_CD,
    MBR.MBR_PAID_BY_CD,
    MBR.MBR_FREE_ASSOC_IN,
    CASE
      WHEN SP_AM.MBR_KY IS NOT NULL THEN '1'
      ELSE '0'
    END AS ACTIVE_MILITARY_IND,
    CASE
      WHEN SP_BM.MBR_KY IS NOT NULL THEN 'Y'
      ELSE 'N'
    END AS BOARD_MEMBER_IND,
    CASE
      WHEN SP_NVIA.MBR_KY IS NOT NULL THEN 'N'
      ELSE 'Y'
    END AS VIA_MAGAZINE_PREFERRED_IND,
    CASE
      WHEN SP_EE.MBR_KY IS NOT NULL THEN 'Y'
      ELSE 'N'
    END AS EMPLOYEE_IND,
    CASE
      WHEN SP_EE.MBR_KY IS NOT NULL THEN COALESCE(SUBSTRING(SP_EE.SPCL_HNDL_CMT_TX,  CHARINDEX('|',  SP_EE.SPCL_HNDL_CMT_TX) +1,  LEN(SP_EE.SPCL_HNDL_CMT_TX)),  SUBSTRING(SP_EE.SPCL_HNDL_CMT_TX,  CHARINDEX('|',  SP_EE.SPCL_HNDL_CMT_TX) +1,  LEN(SP_EE.SPCL_HNDL_CMT_TX)))
      ELSE 'NULL'
    END AS EMPLOYEE_ID_OF_MEMBER,
    CONVERT(CHAR,
      MBR.MBR_DUPCD_REQ_DT,
      120) AS MBR_DUPCD_REQ_DT,
    SEC_SA.EMPLOYEE_ID AS SECONDARY_COMPENSATE_EMPLOYEE_ID,
    CONVERT(CHAR,
      MBR.MBR_DUP_STCK_CT) AS MBR_DUP_STCK_CT,
    CONVERT(CHAR,
      MBR.MBR_DUPSTCK_REQ_DT,
      120) AS MBR_DUPSTCK_REQ_DT,
    MBR.MBR_BIL_CAT_CD,
    CONVERT(CHAR,
      MBR.MBR_ACTV_DT,
      120) AS MBR_ACTV_DT,
    CONVERT( CHAR,
      MBR.MBR_ERS_USAGE_YR1) AS MBR_ERS_USAGE_YR1,
    CONVERT( CHAR,
      MBR.MBR_ERS_USAGE_YR2) AS MBR_ERS_USAGE_YR2,
    CONVERT( CHAR,
      MBR.MBR_ERS_USAGE_YR3) AS MBR_ERS_USAGE_YR3,
    MBR.MBR_PREV_STS_DSC_CD,
    MBR.MBR_REINST_PRNT_CRD_IN,
    MBR.DUP_CARD_REASON,
    MBR.MBR_DO_NOT_REN_RSN,
    MBR.MBR_CARD_NAME,
    MBR.MBR_LANGUAGE,
    CONVERT(CHAR,
      MBR.CARD_REQT_SKIP_DT,
      120) AS CARD_REQT_SKIP_DT,
    CONVERT(CHAR,
      MBR.MBR_EFF_DT,
      120) AS MBR_EFF_DT,
    MBR.MBR_PREV_COMM_CD,
    CONVERT(CHAR,
      MBR.MBR_DNR_EXPIR_DT,
      120) AS MBR_DNR_EXPIR_DT,
    MBR.MBR_MITA_PENDING,
    CONVERT(CHAR,
      MBR.MBR_ADD_DT,
      120) AS MBR_ADD_DT,
    CONVERT(CHAR,
      MBR.MBR_RENEW_CT) AS MBR_RENEW_CT,
    CONVERT(CHAR,
      MBR.MBR_REINST_DT,
      120) AS MBR_REINST_DT,
    MBR.CARD_REQT_SKIP_REASON,
    CONVERT(CHAR,
      MBR.MBR_EXPIR_DT,
      120) AS MBR_EXPIR_DT,
    MBR.PREF_METH_CNT AS PREF_METH_COUNT,
    
      CASE WHEN  MS.MBRS_STS_CD IN ('A','P') THEN  RTRIM(LTRIM(RA.ride_comp_cd))  
	     WHEN MS.MBRS_STS_CD = 'C' THEN RTRIM(LTRIM(RC.ride_comp_cd)) END AS MEMBERSHIP_LEVEL, 
    
    CASE
      WHEN SP_SPRN.SPCL_HNDL_CMT_TX IS NOT NULL THEN 'Y'
      ELSE 'N'
    END AS SPRN_IND,
    CASE
      WHEN SP_HM.MBR_KY IS NOT NULL THEN 'Y'
      ELSE 'N'
    END AS HONORARY_MEMBER_IND,
    CASE
      WHEN SP_CM.MBR_KY IS NOT NULL THEN 'Y'
      ELSE 'N'
    END AS COURTESY_MEMBER_IND,
    CASE
      WHEN SP_UM.MBR_KY IS NOT NULL THEN 'Y'
      ELSE 'N'
    END AS UTAH_50_YEAR_IND,
    CASE
      WHEN SP_SS.MBR_KY IS NOT NULL THEN 'Y'
      ELSE 'N'
    END AS SERVICE_PROVIDER_IND,
    CONVERT(CHAR,
      DATEPART(YEAR,
        MBR.MBR_JN_AAA_DT)) AS MEMBER_SINCE,
    CASE
      WHEN SP_SPRN.MBR_KY IS NOT NULL THEN PARTNER_MBR.ENROLLMENT_DT
      ELSE NULL
    END AS SPRINT_ENROLL_DT,
    CASE
      WHEN (UPPER(RTRIM(LTRIM(MBR.MBR_COMM_CD))) IN ('T',  'T1') OR UPPER(RTRIM(LTRIM(MBR.MBR_STS_CD))) NOT IN ('A',
      'P')) THEN 0
      WHEN (UPPER(RTRIM(LTRIM(MBR.MBR_STS_CD))) IN ('A',
      'P') OR UPPER(RTRIM(LTRIM(MBR.MBR_COMM_CD))) NOT IN ('T',  'T1') )THEN 1
      ELSE 0
    END AS MIF_ELIGIBLE_CNT,
    CASE
      WHEN SP_CTT.SPCL_HNDL_CD = 'GRCM' AND (SP_CTT.MBR_KY IS NOT NULL OR SP_CTT.MBRS_KY IS NOT NULL ) THEN 'GRCM'
      WHEN SP_CTT.SPCL_HNDL_CD = 'GREP'
    AND (SP_CTT.MBR_KY IS NOT NULL
      OR SP_CTT.MBRS_KY IS NOT NULL ) THEN 'GREP'
      WHEN SP_CTT.SPCL_HNDL_CD ='GRMP' AND (SP_CTT.MBR_KY IS NOT NULL OR SP_CTT.MBRS_KY IS NOT NULL ) THEN 'GRMP'
      ELSE 'NULL'
    END AS CORPORATE_GROUP_TYPE,
    CONVERT(DATE,
      CDC.MBRS_UPDT_DT) AS MBRS_UPDATE_DT
  FROM
    MBR
    LEFT OUTER JOIN MBRSHIP MS ON MS.MBRS_KY=MBR.MBRS_KY 
  LEFT OUTER JOIN
    SALES_AGENT SA
  ON
    MBR.SLS_AGT_KY = SA.SAGT_KY
  LEFT OUTER JOIN
    SALES_AGENT SEC_SA
  ON
    MBR.MBR_SEC_SAGT_KY = SEC_SA.SAGT_KY
  LEFT OUTER JOIN (
    SELECT
      *
    FROM (
      SELECT
        *,
        DENSE_RANK() OVER(PARTITION BY MBRS_KY ORDER BY CASE WHEN ride_comp_cd= 'BS' THEN 1 WHEN ride_comp_cd= 'PL' THEN 2 WHEN ride_comp_cd= 'RP' THEN 3 WHEN ride_comp_cd= 'MO' THEN 4 WHEN ride_comp_cd= 'EP' THEN 5 WHEN ride_comp_cd= 'EV' THEN 5 END DESC) RN  FROM  RIDER  WHERE  ride_CANC_DT IS NULL) RDR  WHERE  RDR.RN=1 ) RA ON  MBR.MBRS_KY=RA.MBRS_KY  LEFT OUTER JOIN ( SELECT  *  FROM (  SELECT  *,  DENSE_RANK() OVER(PARTITION BY MBRS_KY ORDER BY CASE WHEN ride_comp_cd= 'BS' THEN 1 WHEN ride_comp_cd= 'PL' THEN 2 WHEN ride_comp_cd= 'RP' THEN 3 WHEN ride_comp_cd= 'MO' THEN 4 WHEN ride_comp_cd= 'EP' THEN 5 WHEN ride_comp_cd= 'EV' THEN 5 END, ride_CANC_DT DESC) RN  FROM  RIDER  WHERE  ride_CANC_DT IS NOT NULL) RDR  WHERE  RDR.RN=1 ) RC ON  MBR.MBRS_KY=RC.MBRS_KY  LEFT OUTER JOIN (  SELECT  *  FROM (  SELECT  *,  ROW_NUMBER() OVER (PARTITION BY MBR_KY, MBRS_KY ORDER BY SPCL_KY DESC) RN  FROM  SPECIAL_HANDLING  WHERE  SPCL_HNDL_CD = 'AM') SP_AM  WHERE  SP_AM.RN=1) SP_AM ON  SP_AM.MBR_KY=MBR.MBR_KY  LEFT OUTER JOIN (  SELECT  *  FROM (  SELECT  *,  ROW_NUMBER() OVER (PARTITION BY MBR_KY, MBRS_KY ORDER BY SPCL_KY DESC) RN  FROM  SPECIAL_HANDLING  WHERE  SPCL_HNDL_CD = 'BM') SP_BM  WHERE  SP_BM.RN=1) SP_BM ON  SP_BM.MBR_KY=MBR.MBR_KY  LEFT OUTER JOIN (  SELECT  *  FROM (  SELECT  *,  ROW_NUMBER() OVER (PARTITION BY MBR_KY, MBRS_KY ORDER BY SPCL_KY DESC) RN  FROM  SPECIAL_HANDLING  WHERE  SPCL_HNDL_CD = 'NVIA') SP_NVIA  WHERE  SP_NVIA.RN=1) SP_NVIA ON  SP_NVIA.MBR_KY=MBR.MBR_KY  LEFT OUTER JOIN (  SELECT  *  FROM (  SELECT  *,  ROW_NUMBER() OVER (PARTITION BY MBR_KY, MBRS_KY ORDER BY SPCL_KY DESC) RN  FROM  SPECIAL_HANDLING  WHERE  SPCL_HNDL_CD = 'SPRN') SP_SPRN  WHERE  SP_SPRN.RN=1) SP_SPRN ON  SP_SPRN.MBR_KY=MBR.MBR_KY  LEFT OUTER JOIN (  SELECT  *  FROM (  SELECT  *,  ROW_NUMBER() OVER (PARTITION BY MBR_KY, MBRS_KY ORDER BY SPCL_KY DESC) RN  FROM  SPECIAL_HANDLING  WHERE  SPCL_HNDL_CD = 'HM') SP_HM  WHERE  SP_HM.RN=1) SP_HM ON  SP_HM.MBR_KY=MBR.MBR_KY  LEFT OUTER JOIN (  SELECT  *  FROM (  SELECT  *,  ROW_NUMBER() OVER (PARTITION BY MBR_KY, MBRS_KY ORDER BY SPCL_KY DESC) RN  FROM  SPECIAL_HANDLING  WHERE  SPCL_HNDL_CD = 'CM') SP_CM  WHERE  SP_CM.RN=1) SP_CM ON  SP_CM.MBR_KY=MBR.MBR_KY  LEFT OUTER JOIN (  SELECT  *  FROM (  SELECT  *,  ROW_NUMBER() OVER (PARTITION BY MBR_KY, MBRS_KY ORDER BY SPCL_KY DESC) RN  FROM  SPECIAL_HANDLING  WHERE  SPCL_HNDL_CD = 'UM') SP_UM  WHERE  SP_UM.RN=1) SP_UM ON  SP_UM.MBR_KY=MBR.MBR_KY  LEFT OUTER JOIN (  SELECT  *  FROM (  SELECT  *,  ROW_NUMBER() OVER (PARTITION BY MBR_KY, MBRS_KY ORDER BY SPCL_KY DESC) RN  FROM  SPECIAL_HANDLING  WHERE  SPCL_HNDL_CD IN ('SPP',  'SPA')) SP_SS  WHERE  SP_SS.RN=1) SP_SS ON  SP_SS.MBR_KY=MBR.MBR_KY  LEFT OUTER JOIN (  SELECT  *  FROM (  SELECT  *,  ROW_NUMBER() OVER (PARTITION BY MBR_KY, MBRS_KY ORDER BY SPCL_KY DESC) RN  FROM  SPECIAL_HANDLING  WHERE  SPCL_HNDL_CD IN ('ERA',  'ERP')) SP_EE  WHERE  SP_EE.RN=1) SP_EE ON  SP_EE.MBR_KY=MBR.MBR_KY  LEFT OUTER JOIN (  SELECT  *  FROM (  SELECT  *,  ROW_NUMBER() OVER (PARTITION BY MBR_KY, MBRS_KY ORDER BY SPCL_KY DESC) RN  FROM  SPECIAL_HANDLING  WHERE  SPCL_HNDL_CD IN ('GRCM',  'GRMP', 'GREP') ) SP_CTT  WHERE  SP_CTT.RN=1) SP_CTT ON  (CASE
        WHEN SP_CTT.MBR_KY IS NULL THEN SP_CTT.MBRS_KY
        ELSE SP_CTT.MBR_KY
      END ) =
    CASE
      WHEN SP_CTT.MBR_KY IS NULL THEN MBR.MBRS_KY
      ELSE MBR.MBRS_KY
    END
  LEFT OUTER JOIN(
	SELECT
    *
  FROM (
    SELECT
     MBR_KY,
	 MBRS_KY,
	 ENROLLMENT_DT,
      ROW_NUMBER() OVER (PARTITION BY MBR_KY ORDER BY ENROLLMENT_DT DESC ) RN
    FROM
      PARTNER_MBR) A
  WHERE
    A.RN=1) PARTNER_MBR
	 ON
    PARTNER_MBR.MBR_KY = SP_SPRN.MBR_KY 
  INNER JOIN (
    SELECT
      MBRS_KY,
      MBRS_UPDT_DT
    FROM (
      SELECT
        MBRS_KY,
        MBRS_UPDT_DT,
        ROW_NUMBER() OVER (PARTITION BY MBRS_KY ORDER BY MBRS_UPDT_DT DESC) AS RN
      FROM (
        SELECT
          MBRS_KY,
          MBRS_RTD2K_UPDT_DT AS MBRS_UPDT_DT
        FROM
          MBRSHIP
        WHERE
          CONVERT(DATE,
            MBRSHIP.MBRS_RTD2K_UPDT_DT) >= CONVERT(date,'v_inputdate')
          AND CONVERT(DATE,
            MBRSHIP.MBRS_RTD2K_UPDT_DT) < DATEADD(day,1,convert(date, 'v_inputdate'))
            UNION
        SELECT
          DISTINCT MBRSHIP_COMMENT.MBRS_KY AS MBRS_KY,
          MBRSHIP_COMMENT.MCMT_UPDT_DT AS MBRS_UPDT_DT
        FROM
          MBRSHIP_COMMENT
        WHERE
          CONVERT(DATE,
            MBRSHIP_COMMENT.MCMT_UPDT_DT) >= CONVERT(date,'v_inputdate') 
          AND CONVERT(DATE,
            MBRSHIP_COMMENT.MCMT_UPDT_DT) < DATEADD(day,1,convert(date, 'v_inputdate'))
) SQ) FSQ
    WHERE
      FSQ.RN=1 ) CDC
  ON
    CDC.MBRS_KY=MBR.MBRS_KY ) DATA
    
      LEFT OUTER JOIN (
    SELECT
      *
    FROM (
      SELECT
        *,
        ROW_NUMBER() OVER (PARTITION BY MBR_KY, MBRS_KY ORDER BY SPCL_KY DESC) RN
      FROM
        SPECIAL_HANDLING
      WHERE
        SPCL_HNDL_CD = 'DE') SP_DE
    WHERE
      SP_DE.RN=1) SP_DE
  ON
    SP_DE.MBR_KY=DATA.MBR_KY
    
    
LEFT OUTER JOIN
  MBRSHIP MBRSHIP
ON
  DATA.MBRS_KY = MBRSHIP.MBRS_KY
LEFT OUTER JOIN
  MBRSHIP MBRSHIP1
ON
  DATA.MBRS_ID = MBRSHIP1.MBRS_ID
  LEFT OUTER JOIN (
  SELECT
    *
  FROM (
    SELECT
      UPPER(MADR_BSC_AD),
      UPPER(MADR_SUPL_AD),
      UPPER(MADR_CTY_NM),
      UPPER(MADR_ST_PROV_CD),
      UPPER(MADR_ZIP_CD),
      MBRS_KY,
      CASE
        WHEN LEN(MADR_ZIP_CD)= '9' THEN SUBSTRING(MADR_ZIP_CD, 6,LEN(MADR_ZIP_CD)-5)
        ELSE NULL
      END AS BILLING_ZIP_PLUS4,
      MADR_STRT_DT,
      MADR_END_DT,
      ROW_NUMBER() OVER (PARTITION BY MBRS_KY ORDER BY MADR_LAST_CHG_DT DESC ) RN
    FROM
      MBRSHIP_ADDRESS
    WHERE
      MADR_TYP_CD = 'B' ) A
  WHERE
    A.RN=1 ) BILLING
ON
 DATA.MBRS_KY = BILLING.MBRS_KY
LEFT OUTER JOIN (
  SELECT
    *
  FROM (
    SELECT
      UPPER(MADR_BSC_AD),
      UPPER(MADR_SUPL_AD),
      UPPER(MADR_CTY_NM),
      UPPER(MADR_ST_PROV_CD),
      UPPER(MADR_ZIP_CD),
      MBRS_KY,
      CASE
        WHEN LEN(MADR_ZIP_CD)= '9' THEN SUBSTRING(MADR_ZIP_CD, 6,LEN(MADR_ZIP_CD)-5)
        ELSE NULL
      END AS RESIDENTIAL_ZIP_PLUS4,
      MADR_STRT_DT,
      MADR_END_DT,
      ROW_NUMBER() OVER (PARTITION BY MBRS_KY ORDER BY MADR_LAST_CHG_DT DESC ) RN
    FROM
      MBRSHIP_ADDRESS
    WHERE
      MADR_TYP_CD = 'H' ) A
  WHERE
    A.RN=1) RESIDENTIAL
ON
 DATA.MBRS_KY = RESIDENTIAL.MBRS_KY
LEFT OUTER JOIN (
  SELECT
    *
  FROM (
    SELECT
      UPPER(MADR_BSC_AD),
      UPPER(MADR_SUPL_AD),
      UPPER(MADR_CTY_NM),
      UPPER(MADR_ST_PROV_CD),
      UPPER(MADR_ZIP_CD),
      MBRS_KY,
      CASE
        WHEN LEN(MADR_ZIP_CD)= '9' THEN SUBSTRING(MADR_ZIP_CD, 6, 4)
        ELSE MADR_ZIP_CD
      END AS TEMPORARY_ZIP_PLUS4,
      MADR_STRT_DT,
      MADR_END_DT,
      ROW_NUMBER() OVER (PARTITION BY MBRS_KY ORDER BY MADR_LAST_CHG_DT DESC ) RN
    FROM
      MBRSHIP_ADDRESS
    WHERE
      MADR_TYP_CD = 'T' ) A
  WHERE
    A.RN=1 ) TEMPORARY
ON
  DATA.MBRS_KY = TEMPORARY.MBRS_KY
  
  LEFT OUTER JOIN (
  SELECT
    *
  FROM (
    SELECT
      *,
      ROW_NUMBER() OVER (PARTITION BY MBR_KY, MBRS_KY ORDER BY EMAIL_KY DESC ) RN  --4083034
    FROM
      MBR_EMAIL) A
  WHERE
    A.RN=1 ) EMAIL_ADD
ON
  DATA.MBRS_KY = EMAIL_ADD.MBRS_KY
  AND DATA.MBR_KY = EMAIL_ADD.MBR_KY
  LEFT OUTER JOIN (
  SELECT
    *
  FROM (
    SELECT
      MBRS_KY,
      MBR_KY,
      CONVERT(CHAR,CONVERT(CHAR,COALESCE(MTEL_NR,''))+CONVERT(CHAR,COALESCE(MTEL_EXT_NR,''))) AS HOME_PHONE_NUM,
      ROW_NUMBER() OVER (PARTITION BY MBR_KY, MBRS_KY ORDER BY MTEL_KY DESC ) RN
    FROM
      MBRSHIP_PHONE
    WHERE
      MTEL_TYP_CD = 'HM') A
  WHERE
    A.RN=1 ) HOME_PHN
ON
  DATA.MBRS_KY = HOME_PHN.MBRS_KY
  AND DATA.MBR_KY = HOME_PHN.MBR_KY
LEFT OUTER JOIN (
  SELECT
    *
  FROM (
    SELECT
      MBRS_KY,
      MBR_KY,
      CONVERT(CHAR,CONVERT(CHAR,COALESCE(MTEL_NR,''))+CONVERT(CHAR,COALESCE(MTEL_EXT_NR,''))) AS WORK_PHONE_NUM,
      ROW_NUMBER() OVER (PARTITION BY MBR_KY, MBRS_KY ORDER BY MTEL_KY DESC ) RN
    FROM
      MBRSHIP_PHONE
    WHERE
      MTEL_TYP_CD = 'WK') A
  WHERE
    A.RN=1 ) WORK_PHN
ON
  DATA.MBRS_KY = WORK_PHN.MBRS_KY
  AND DATA.MBR_KY = WORK_PHN.MBR_KY
LEFT OUTER JOIN (
  SELECT
    *
  FROM (
    SELECT
      MBRS_KY,
      MBR_KY,
      CONVERT(CHAR,CONVERT(CHAR,COALESCE(MTEL_NR,''))+CONVERT(CHAR,COALESCE(MTEL_EXT_NR,''))) AS MOBILE_PHONE_NUM,
      ROW_NUMBER() OVER (PARTITION BY MBR_KY, MBRS_KY ORDER BY MTEL_KY DESC ) RN
    FROM
      MBRSHIP_PHONE
    WHERE
      MTEL_TYP_CD = 'CL') A
  WHERE
    A.RN=1 ) MOBILE_PHN
ON
  DATA.MBRS_KY = MOBILE_PHN.MBRS_KY
  AND DATA.MBR_KY = MOBILE_PHN.MBR_KY
  
LEFT OUTER JOIN (
  SELECT
    *
  FROM (
    SELECT
      CUSTOMERID,
      MARITALSTATUS,
      DONOTPHONE,
      DONOTEMAIL,
      DONOTMAIL,
      MEMBERID,
      ASSOC_CODE,
      ROW_NUMBER() OVER (PARTITION BY MEMBERID, ASSOC_CODE ORDER BY CREATETIME DESC ) RN
    FROM
      MRM_SAM_PRD.DBO.CUSTOMERS) A
  WHERE
    A.RN =1 ) CUST
ON
  DATA.MBRS_ID = CUST.MEMBERID
  AND DATA.MBR_ASSOC_ID=CUST.ASSOC_CODE  
  
  AND DATA.MBR_FST_NM IS NOT NULL AND  DATA.MBR_LST_NM IS NOT NULL 