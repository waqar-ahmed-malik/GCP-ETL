-- UPDATE(MERGE)

--MERGE <target_table> [AS TARGET]
--USING <table_source> [AS SOURCE]
--ON <search_condition>
--[WHEN MATCHED 
--THEN <merge_matched> ]
--[WHEN NOT MATCHED [BY TARGET]
--THEN <merge_not_matched> ]
--[WHEN NOT MATCHED BY SOURCE
--THEN <merge_matched> ];
  
--ERS_STAGE_APD_D2K_AUDIT
--WORK_ERS_STG_APD_D2K_AUDIT
MERGE OPERATIONAL.ERS_STAGE_APD_D2K_AUDIT AS TGT
USING LANDING.WORK_ERS_STG_APD_D2K_AUDIT AS SRC
ON TGT.TRANSACTION_ID = CAST(SRC.TRANSACTION_ID AS INT64)
WHEN MATCHED
THEN UPDATE SET
TGT.MODULE_ID = SRC.MODULE_ID , 
TGT.FUNCTION_ID = SRC.FUNCTION_ID , 
TGT.EMPLOYEE_ID = SRC.EMPLOYEE_ID, 
TGT.TIMESTAMP_DT = CAST(SRC.TIMESTAMP_DT AS DATE), 
TGT.MACHINE_NM_TX = SRC.MACHINE_NM_TX , 
TGT.TRANSACTION_CD = SRC.TRANSACTION_CD , 
TGT.KEY1_DA = SRC.KEY1_DA , 
TGT.KEY2_DA = SRC.KEY2_DA , 
TGT.KEY3_DA = SRC.KEY3_DA , 
TGT.TRANS_DTL_TX = SRC.TRANS_DTL_TX , 
TGT.TRANSACTION_ID = CAST(SRC.TRANSACTION_ID AS INT64), 
TGT.ETL_JOB_RUN_ID = CAST(SRC.JOB_RUN_ID AS INT64), 
TGT.SOURCE_SYSTEM_CD = SRC.SOURCE_SYSTEM_CD ,  
TGT.CREATED_DTTIME = current_datetime() ,
TGT.CREATED_BY = SRC.CREATED_BY
WHEN NOT MATCHED THEN INSERT 
(
MODULE_ID,
FUNCTION_ID,
EMPLOYEE_ID,
TIMESTAMP_DT,
MACHINE_NM_TX,
TRANSACTION_CD,
KEY1_DA,
KEY2_DA,
KEY3_DA,
TRANS_DTL_TX,
TRANSACTION_ID,
ETL_JOB_RUN_ID,
SOURCE_SYSTEM_CD,
CREATED_BY,
CREATED_DTTIME)
VALUES
(
SRC.MODULE_ID , 
SRC.FUNCTION_ID , 
SRC.EMPLOYEE_ID, 
CAST(SRC.TIMESTAMP_DT AS DATE), 
SRC.MACHINE_NM_TX , 
SRC.TRANSACTION_CD , 
SRC.KEY1_DA , 
SRC.KEY2_DA , 
SRC.KEY3_DA , 
SRC.TRANS_DTL_TX , 
CAST(SRC.TRANSACTION_ID AS INT64),
CAST(SRC.JOB_RUN_ID AS INT64),
SOURCE_SYSTEM_CD,
CREATED_BY,
current_datetime()
)

