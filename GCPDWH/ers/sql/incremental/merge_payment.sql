-- UPDATE(MERGE)

--MERGE <target_table> [AS TARGET]
--USING <table_source> [AS SOURCE]
--ON <search_condition>
--[WHEN MATCHED 
--THEN <merge_matched> ]
--[WHEN NOT MATCHED [BY TARGET]
--THEN <merge_not_matched> ]
--[WHEN NOT MATCHED BY SOURCE
--THEN <merge_matched> ];
  
--ERS_STAGE_PAYMENT
--WORK_ERS_STG_PAYMENT

MERGE OPERATIONAL.ERS_STAGE_PAYMENT AS TGT
USING LANDING.WORK_ERS_STG_PAYMENT AS SRC
ON TGT.PAY_ID  = SAFE_CAST(SRC.PAY_ID AS INT64)
WHEN MATCHED
THEN UPDATE SET
TGT.CHK_ID = CAST(SRC.CHK_ID AS INT64) , 
TGT.CLB_CD = SRC.CLB_CD , 
TGT.MBR_ID = SRC.MBR_ID , 
TGT.ASSOC_MBR_ID = SRC.ASSOC_MBR_ID , 
TGT.PAY_DATETIME = CAST(SRC.PAY_DATE AS DATETIME) , 
TGT.PAY_TYPE = SRC.PAY_TYPE , 
TGT.CHECK_STUB_CD = SRC.CHECK_STUB_CD , 
TGT.FACIL_INT_ID = SAFE_CAST(SRC.FACIL_INT_ID AS INT64) , 
TGT.PAY_METHOD = SRC.PAY_METHOD , 
TGT.PAY_AMOUNT = SAFE_CAST(SRC.PAY_AMOUNT AS FLOAT64) , 
TGT.PAY_PERIOD_START = SAFE_CAST(SRC.PAY_PERIOD_START AS DATETIME), 
TGT.PAY_PERIOD_END = SAFE_CAST(SRC.PAY_PERIOD_END AS DATETIME) , 
TGT.PAY_EIN = SRC.PAY_EIN , 
TGT.PAID_IND = SRC.PAID_IND , 
TGT.TRANS_NUM = SRC.TRANS_NUM , 
TGT.PAY_BASIC = SAFE_CAST(SRC.PAY_BASIC AS FLOAT64) , 
TGT.PAY_PLUS = SAFE_CAST(SRC.PAY_PLUS AS FLOAT64) , 
TGT.PAY_DEBIT_ADJ = SAFE_CAST(SRC.PAY_DEBIT_ADJ AS FLOAT64) , 
TGT.PAY_RBASIC = SAFE_CAST(SRC.PAY_RBASIC AS FLOAT64) , 
TGT.PAY_RPLUS = SAFE_CAST(SRC.PAY_RPLUS AS FLOAT64) , 
TGT.PAY_PLUSRV = SAFE_CAST(SRC.PAY_PLUSRV AS FLOAT64) , 
TGT.PAY_TAX1 = SAFE_CAST(SRC.PAY_TAX1 AS FLOAT64) , 
TGT.PAY_TAX2 = SAFE_CAST(SRC.PAY_TAX2 AS FLOAT64), 
TGT.PAY_CREDIT_ADJ = SAFE_CAST(SRC.PAY_CREDIT_ADJ AS FLOAT64), 
TGT.PAY_PREM = SAFE_CAST(SRC.PAY_PREM AS FLOAT64), 
TGT.PAY_PRRV = SAFE_CAST(SRC.PAY_PRRV AS FLOAT64), 
TGT.PAY_RPREM = SAFE_CAST(SRC.PAY_RPREM AS FLOAT64), 
TGT.PAY_RPRRV = SAFE_CAST(SRC.PAY_RPRRV AS FLOAT64) , 
TGT.PAY_OTHER = SAFE_CAST(SRC.PAY_OTHER AS FLOAT64) , 
TGT.ETL_JOB_RUN_ID = SAFE_CAST(SRC.JOB_RUN_ID AS INT64) , 
TGT.SOURCE_SYSTEM_CD = SRC.SOURCE_SYSTEM_CD ,  
TGT.CREATE_DTTIME = current_datetime() ,
TGT.CREATE_BY = SRC.CREATED_BY ,
TGT.LAST_UPDATE_DTTIME = current_datetime() ,
TGT.LAST_UPDATE_BY ='v_job_name'

WHEN NOT MATCHED THEN INSERT 
(
PAY_ID , 
CHK_ID , 
CLB_CD , 
MBR_ID , 
ASSOC_MBR_ID , 
PAY_DATETIME , 
PAY_TYPE , 
CHECK_STUB_CD , 
FACIL_INT_ID , 
PAY_METHOD , 
PAY_AMOUNT , 
PAY_PERIOD_START , 
PAY_PERIOD_END , 
PAY_EIN , 
PAID_IND , 
TRANS_NUM , 
PAY_BASIC , 
PAY_PLUS , 
PAY_DEBIT_ADJ , 
PAY_RBASIC , 
PAY_RPLUS , 
PAY_PLUSRV , 
PAY_TAX1 , 
PAY_TAX2 , 
PAY_CREDIT_ADJ , 
PAY_PREM , 
PAY_PRRV , 
PAY_RPREM , 
PAY_RPRRV , 
PAY_OTHER , 
ETL_JOB_RUN_ID , 
SOURCE_SYSTEM_CD , 
CREATE_DTTIME , 
CREATE_BY , 
LAST_UPDATE_DTTIME , 
LAST_UPDATE_BY )

VALUES

(
SAFE_CAST(SRC.PAY_ID AS INT64), 
SAFE_CAST(SRC.CHK_ID AS INT64), 
SRC.CLB_CD , 
SRC.MBR_ID , 
SRC.ASSOC_MBR_ID , 
SAFE_CAST(SRC.PAY_DATE AS DATETIME) , 
SRC.PAY_TYPE , 
SRC.CHECK_STUB_CD , 
SAFE_CAST(SRC.FACIL_INT_ID AS INT64) , 
SRC.PAY_METHOD , 
SAFE_CAST(SRC.PAY_AMOUNT AS FLOAT64) , 
SAFE_CAST(SRC.PAY_PERIOD_START AS DATETIME), 
SAFE_CAST(SRC.PAY_PERIOD_END AS DATETIME), 
SRC.PAY_EIN , 
SRC.PAID_IND , 
SRC.TRANS_NUM , 
SAFE_CAST(SRC.PAY_BASIC AS FLOAT64) , 
SAFE_CAST(SRC.PAY_PLUS AS FLOAT64) , 
SAFE_CAST(SRC.PAY_DEBIT_ADJ AS FLOAT64) , 
SAFE_CAST(SRC.PAY_RBASIC AS FLOAT64), 
SAFE_CAST(SRC.PAY_RPLUS AS FLOAT64), 
SAFE_CAST(SRC.PAY_PLUSRV AS FLOAT64), 
SAFE_CAST(SRC.PAY_TAX1 AS FLOAT64), 
SAFE_CAST(SRC.PAY_TAX2 AS FLOAT64), 
SAFE_CAST(SRC.PAY_CREDIT_ADJ AS FLOAT64), 
SAFE_CAST(SRC.PAY_PREM AS FLOAT64) , 
SAFE_CAST(SRC.PAY_PRRV AS FLOAT64) , 
SAFE_CAST(SRC.PAY_RPREM AS FLOAT64) , 
SAFE_CAST(SRC.PAY_RPRRV AS FLOAT64) , 
SAFE_CAST(SRC.PAY_OTHER AS FLOAT64), 
SAFE_CAST (SRC.JOB_RUN_ID AS INT64) , 
SRC.SOURCE_SYSTEM_CD , 
current_datetime(),
SRC.CREATED_BY , 
current_datetime(),
'v_job_name'
)