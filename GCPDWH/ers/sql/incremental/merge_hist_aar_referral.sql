-- UPDATE(MERGE)

--MERGE <target_table> [AS TARGET]
--USING <table_source> [AS SOURCE]
--ON <search_condition>
--[WHEN MATCHED 
--THEN <merge_matched> ]
--[WHEN NOT MATCHED [BY TARGET]
--THEN <merge_not_matched> ]
--[WHEN NOT MATCHED BY SOURCE
--THEN <merge_matched> ];
  
--ERS_STAGE_HIST_AAR_REFERRAL
--WORK_ERS_STG_HIST_AAR_REFERRAL
MERGE OPERATIONAL.ERS_STAGE_HIST_AAR_REFERRAL AS TGT
USING (SELECT DISTINCT * FROM LANDING.WORK_ERS_STG_HIST_AAR_REFERRAL) AS SRC
ON TGT.TD_COMM_CTR_ID = SRC.TD_COMM_CTR_ID and
TGT.TD_SC_DT = CAST(SRC.TD_SC_DT AS DATE) and
CAST(TGT.TD_SC_ID AS STRING) = SRC.TD_SC_ID and
CAST(TGT.TD_TOW_DEST_ID AS STRING) = SRC.TD_TOW_DEST_ID
WHEN MATCHED
THEN UPDATE SET
TGT.TD_COMM_CTR_ID = SRC.TD_COMM_CTR_ID , 
TGT.TD_SC_DT = CAST(SRC.TD_SC_DT AS DATE) , 
TGT.TD_SC_ID = CAST(SRC.TD_SC_ID AS INT64), 
TGT.TD_TOW_DEST_ID = CAST(SRC.TD_TOW_DEST_ID AS INT64), 
TGT.ETL_JOB_RUN_ID = CAST(SRC.JOB_RUN_ID AS INT64), 
TGT.SOURCE_SYSTEM_CD = SRC.SOURCE_SYSTEM_CD ,  
TGT.CREATED_DTTIME = current_datetime() ,
TGT.CREATED_BY = SRC.CREATED_BY
WHEN NOT MATCHED THEN INSERT 
(
TD_COMM_CTR_ID,
TD_TOW_DEST_ID,
TD_SC_ID,
TD_SC_DT,
ETL_JOB_RUN_ID,
SOURCE_SYSTEM_CD,
CREATED_BY,
CREATED_DTTIME)
VALUES
(
SRC.TD_COMM_CTR_ID , 
CAST(SRC.TD_TOW_DEST_ID AS INT64), 
CAST(SRC.TD_SC_ID AS INT64), 
CAST(SRC.TD_SC_DT AS DATE) , 
CAST(SRC.JOB_RUN_ID AS INT64),
SOURCE_SYSTEM_CD,
CREATED_BY,
current_datetime()
)

